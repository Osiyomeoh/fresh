{"ast":null,"code":"import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { toFileWithPath } from './file';\nvar FILES_TO_IGNORE = [// Thumbnail cache files for macOS and Windows\n'.DS_Store', 'Thumbs.db' // Windows\n];\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n *\n * EXPERIMENTAL: A list of https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle objects can also be passed as an arg\n * and a list of File objects will be returned.\n *\n * @param evt\n */\n\nexport function fromEvent(evt) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (isObject(evt) && isDataTransfer(evt.dataTransfer)) {\n        return [2\n        /*return*/\n        , getDataTransferFiles(evt.dataTransfer, evt.type)];\n      } else if (isChangeEvt(evt)) {\n        return [2\n        /*return*/\n        , getInputFiles(evt)];\n      } else if (Array.isArray(evt) && evt.every(function (item) {\n        return 'getFile' in item && typeof item.getFile === 'function';\n      })) {\n        return [2\n        /*return*/\n        , getFsHandleFiles(evt)];\n      }\n\n      return [2\n      /*return*/\n      , []];\n    });\n  });\n}\n\nfunction isDataTransfer(value) {\n  return isObject(value);\n}\n\nfunction isChangeEvt(value) {\n  return isObject(value) && isObject(value.target);\n}\n\nfunction isObject(v) {\n  return typeof v === 'object' && v !== null;\n}\n\nfunction getInputFiles(evt) {\n  return fromList(evt.target.files).map(function (file) {\n    return toFileWithPath(file);\n  });\n} // Ee expect each handle to be https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\n\n\nfunction getFsHandleFiles(handles) {\n  return __awaiter(this, void 0, void 0, function () {\n    var files;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all(handles.map(function (h) {\n            return h.getFile();\n          }))];\n\n        case 1:\n          files = _a.sent();\n          return [2\n          /*return*/\n          , files.map(function (file) {\n            return toFileWithPath(file);\n          })];\n      }\n    });\n  });\n}\n\nfunction getDataTransferFiles(dt, type) {\n  return __awaiter(this, void 0, void 0, function () {\n    var items, files;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!dt.items) return [3\n          /*break*/\n          , 2];\n          items = fromList(dt.items).filter(function (item) {\n            return item.kind === 'file';\n          }); // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n          // only 'dragstart' and 'drop' has access to the data (source node)\n\n          if (type !== 'drop') {\n            return [2\n            /*return*/\n            , items];\n          }\n\n          return [4\n          /*yield*/\n          , Promise.all(items.map(toFilePromises))];\n\n        case 1:\n          files = _a.sent();\n          return [2\n          /*return*/\n          , noIgnoredFiles(flatten(files))];\n\n        case 2:\n          return [2\n          /*return*/\n          , noIgnoredFiles(fromList(dt.files).map(function (file) {\n            return toFileWithPath(file);\n          }))];\n      }\n    });\n  });\n}\n\nfunction noIgnoredFiles(files) {\n  return files.filter(function (file) {\n    return FILES_TO_IGNORE.indexOf(file.name) === -1;\n  });\n} // IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\n\n\nfunction fromList(items) {\n  if (items === null) {\n    return [];\n  }\n\n  var files = []; // tslint:disable: prefer-for-of\n\n  for (var i = 0; i < items.length; i++) {\n    var file = items[i];\n    files.push(file);\n  }\n\n  return files;\n} // https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\n\n\nfunction toFilePromises(item) {\n  if (typeof item.webkitGetAsEntry !== 'function') {\n    return fromDataTransferItem(item);\n  }\n\n  var entry = item.webkitGetAsEntry(); // Safari supports dropping an image node from a different window and can be retrieved using\n  // the DataTransferItem.getAsFile() API\n  // NOTE: FileSystemEntry.file() throws if trying to get the file\n\n  if (entry && entry.isDirectory) {\n    return fromDirEntry(entry);\n  }\n\n  return fromDataTransferItem(item);\n}\n\nfunction flatten(items) {\n  return items.reduce(function (acc, files) {\n    return __spreadArray(__spreadArray([], __read(acc), false), __read(Array.isArray(files) ? flatten(files) : [files]), false);\n  }, []);\n}\n\nfunction fromDataTransferItem(item) {\n  var file = item.getAsFile();\n\n  if (!file) {\n    return Promise.reject(\"\".concat(item, \" is not a File\"));\n  }\n\n  var fwp = toFileWithPath(file);\n  return Promise.resolve(fwp);\n} // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\n\n\nfunction fromEntry(entry) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];\n    });\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\n\n\nfunction fromDirEntry(entry) {\n  var reader = entry.createReader();\n  return new Promise(function (resolve, reject) {\n    var entries = [];\n\n    function readEntries() {\n      var _this = this; // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n      // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n\n\n      reader.readEntries(function (batch) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var files, err_1, items;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!!batch.length) return [3\n                /*break*/\n                , 5];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , Promise.all(entries)];\n\n              case 2:\n                files = _a.sent();\n                resolve(files);\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                err_1 = _a.sent();\n                reject(err_1);\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                items = Promise.all(batch.map(fromEntry));\n                entries.push(items); // Continue reading\n\n                readEntries();\n                _a.label = 6;\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, function (err) {\n        reject(err);\n      });\n    }\n\n    readEntries();\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\n\n\nfunction fromFileEntry(entry) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , new Promise(function (resolve, reject) {\n        entry.file(function (file) {\n          var fwp = toFileWithPath(file, entry.fullPath);\n          resolve(fwp);\n        }, function (err) {\n          reject(err);\n        });\n      })];\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["toFileWithPath","FILES_TO_IGNORE","fromEvent","evt","isObject","isDataTransfer","dataTransfer","getDataTransferFiles","type","isChangeEvt","getInputFiles","Array","isArray","every","item","getFile","getFsHandleFiles","value","target","v","fromList","files","map","file","handles","Promise","all","_a","dt","items","filter","kind","toFilePromises","noIgnoredFiles","flatten","indexOf","name","i","length","push","webkitGetAsEntry","fromDataTransferItem","entry","isDirectory","fromDirEntry","reduce","acc","__read","getAsFile","reject","fwp","resolve","fromEntry","fromFileEntry","reader","createReader","entries","readEntries","batch","err_1","err","fullPath"],"sources":["C:\\Users\\USER\\Documents\\demo-react\\node_modules\\file-selector\\src\\file-selector.ts"],"sourcesContent":["import {FileWithPath, toFileWithPath} from './file';\n\n\nconst FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    '.DS_Store', // macOs\n    'Thumbs.db'  // Windows\n];\n\n\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n *\n * EXPERIMENTAL: A list of https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle objects can also be passed as an arg\n * and a list of File objects will be returned.\n *\n * @param evt\n */\nexport async function fromEvent(evt: Event | any): Promise<(FileWithPath | DataTransferItem)[]> {\n    if (isObject<DragEvent>(evt) && isDataTransfer(evt.dataTransfer)) {\n        return getDataTransferFiles(evt.dataTransfer, evt.type);\n    } else if (isChangeEvt(evt)) {\n        return getInputFiles(evt);\n    } else if (Array.isArray(evt) && evt.every(item => 'getFile' in item && typeof item.getFile === 'function')) {\n        return getFsHandleFiles(evt)\n    }\n    return [];\n}\n\nfunction isDataTransfer(value: any): value is DataTransfer {\n    return isObject(value);\n}\n\nfunction isChangeEvt(value: any): value is Event {\n    return isObject<Event>(value) && isObject(value.target);\n}\n\nfunction isObject<T>(v: any): v is T {\n    return typeof v === 'object' && v !== null\n}\n\nfunction getInputFiles(evt: Event) {\n    return fromList<FileWithPath>((evt.target as HTMLInputElement).files).map(file => toFileWithPath(file));\n}\n\n// Ee expect each handle to be https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\nasync function getFsHandleFiles(handles: any[]) {\n    const files = await Promise.all(handles.map(h => h.getFile()));\n    return files.map(file => toFileWithPath(file));\n}\n\n\nasync function getDataTransferFiles(dt: DataTransfer, type: string) {\n    // IE11 does not support dataTransfer.items\n    // See https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items#Browser_compatibility\n    if (dt.items) {\n        const items = fromList<DataTransferItem>(dt.items)\n            .filter(item => item.kind === 'file');\n        // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n        // only 'dragstart' and 'drop' has access to the data (source node)\n        if (type !== 'drop') {\n            return items;\n        }\n        const files = await Promise.all(items.map(toFilePromises));\n        return noIgnoredFiles(flatten<FileWithPath>(files));\n    }\n\n    return noIgnoredFiles(fromList<FileWithPath>(dt.files)\n        .map(file => toFileWithPath(file)));\n}\n\nfunction noIgnoredFiles(files: FileWithPath[]) {\n    return files.filter(file => FILES_TO_IGNORE.indexOf(file.name) === -1);\n}\n\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList<T>(items: DataTransferItemList | FileList | null): T[] {\n    if (items === null) {\n        return [];\n    }\n\n    const files = [];\n\n    // tslint:disable: prefer-for-of\n    for (let i = 0; i < items.length; i++) {\n        const file = items[i];\n        files.push(file);\n    }\n\n    return files as any;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item: DataTransferItem) {\n    if (typeof item.webkitGetAsEntry !== 'function') {\n        return fromDataTransferItem(item);\n    }\n\n    const entry = item.webkitGetAsEntry();\n\n    // Safari supports dropping an image node from a different window and can be retrieved using\n    // the DataTransferItem.getAsFile() API\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry) as any;\n    }\n\n    return fromDataTransferItem(item);\n}\n\nfunction flatten<T>(items: any[]): T[] {\n    return items.reduce((acc, files) => [\n        ...acc,\n        ...(Array.isArray(files) ? flatten(files) : [files])\n    ], []);\n}\n\nfunction fromDataTransferItem(item: DataTransferItem) {\n    const file = item.getAsFile();\n    if (!file) {\n        return Promise.reject(`${item} is not a File`);\n    }\n    const fwp = toFileWithPath(file);\n    return Promise.resolve(fwp);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nasync function fromEntry(entry: any) {\n    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry: any) {\n    const reader = entry.createReader();\n\n    return new Promise<FileArray[]>((resolve, reject) => {\n        const entries: Promise<FileValue[]>[] = [];\n\n        function readEntries() {\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n            reader.readEntries(async (batch: any[]) => {\n                if (!batch.length) {\n                    // Done reading directory\n                    try {\n                        const files = await Promise.all(entries);\n                        resolve(files);\n                    } catch (err) {\n                        reject(err);\n                    }\n                } else {\n                    const items = Promise.all(batch.map(fromEntry));\n                    entries.push(items);\n\n                    // Continue reading\n                    readEntries();\n                }\n            }, (err: any) => {\n                reject(err);\n            });\n        }\n\n        readEntries();\n    });\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nasync function fromFileEntry(entry: any) {\n    return new Promise<FileWithPath>((resolve, reject) => {\n        entry.file((file: FileWithPath) => {\n            const fwp = toFileWithPath(file, entry.fullPath);\n            resolve(fwp);\n        }, (err: any) => {\n            reject(err);\n        });\n    });\n}\n\n// Infinite type recursion\n// https://github.com/Microsoft/TypeScript/issues/3496#issuecomment-128553540\ninterface FileArray extends Array<FileValue> {}\ntype FileValue = FileWithPath\n    | FileArray[];\n"]},"metadata":{},"sourceType":"module"}