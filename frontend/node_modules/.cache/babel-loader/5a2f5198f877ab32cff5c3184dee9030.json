{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\demo-react\\\\src\\\\providers\\\\modal-provider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { ModalActionTypeClose, ModalActionTypeOpen, ModalContext } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [contentsState, setContentsState] = useState(null);\n  const [isShowing, setShowing] = useState(false);\n  const [listeners, setListeners] = useState({});\n  const addListener = useCallback((type, fn) => {\n    const id = Math.random().toString();\n    const listenerObj = {\n      id,\n      fn\n    };\n    const existingListeners = listeners[type] || [];\n    setListeners({ ...listeners,\n      [type]: [...existingListeners, listenerObj]\n    });\n    return () => {\n      const newListeners = (listeners[type] || []).filter(listener => listener.id !== id);\n      setListeners({ ...listeners,\n        [type]: newListeners\n      });\n    };\n  }, [listeners]);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      contents: (contentsState === null || contentsState === void 0 ? void 0 : contentsState.contents) || null,\n      isShowing,\n      show: () => {\n        if (contentsState) {\n          setShowing(true);\n\n          for (const listener of listeners[contentsState.type] || []) {\n            listener.fn(ModalActionTypeOpen);\n          }\n        }\n      },\n      hide: () => {\n        setShowing(false);\n\n        if (contentsState) {\n          for (const listener of listeners[contentsState.type] || []) {\n            listener.fn(ModalActionTypeClose);\n          }\n        }\n      },\n      setContents: (type, contents, show) => {\n        setContentsState({\n          type,\n          contents\n        });\n\n        if (show) {\n          setShowing(true);\n        }\n      },\n      addListener: addListener\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalProvider, \"reGfD+/wV795PEvsk09ss2zZ1Is=\");\n\n_c = ModalProvider;\nexport default ModalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","useCallback","useState","ModalActionTypeClose","ModalActionTypeOpen","ModalContext","ModalProvider","children","contentsState","setContentsState","isShowing","setShowing","listeners","setListeners","addListener","type","fn","id","Math","random","toString","listenerObj","existingListeners","newListeners","filter","listener","contents","show","hide","setContents"],"sources":["C:/Users/USER/Documents/demo-react/src/providers/modal-provider.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport {\r\n  ModalActionTypeClose,\r\n  ModalActionTypeOpen,\r\n  ModalContext,\r\n  ModalListenerFn,\r\n  ModalType,\r\n} from '../context';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\ntype ModalListener = {\r\n  id: string;\r\n  fn: ModalListenerFn;\r\n};\r\n\r\ntype ContentState = {\r\n  contents: React.ReactNode;\r\n  type: ModalType;\r\n};\r\n\r\nconst ModalProvider = ({ children }: Props) => {\r\n  const [contentsState, setContentsState] = useState<ContentState>(null);\r\n  const [isShowing, setShowing] = useState(false);\r\n\r\n  const [listeners, setListeners] = useState<{\r\n    [key: ModalType]: ModalListener[];\r\n  }>({});\r\n\r\n  const addListener = useCallback(\r\n    (type: ModalType, fn: ModalListenerFn) => {\r\n      const id = Math.random().toString();\r\n\r\n      const listenerObj = {\r\n        id,\r\n        fn,\r\n      };\r\n\r\n      const existingListeners = listeners[type] || [];\r\n      setListeners({\r\n        ...listeners,\r\n        [type]: [...existingListeners, listenerObj],\r\n      });\r\n\r\n      return () => {\r\n        const newListeners = (listeners[type] || []).filter(\r\n          (listener) => listener.id !== id\r\n        );\r\n\r\n        setListeners({\r\n          ...listeners,\r\n          [type]: newListeners,\r\n        });\r\n      };\r\n    },\r\n    [listeners]\r\n  );\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        contents: contentsState?.contents || null,\r\n        isShowing,\r\n        show: () => {\r\n          if (contentsState) {\r\n            setShowing(true);\r\n            for (const listener of listeners[contentsState.type] || []) {\r\n              listener.fn(ModalActionTypeOpen);\r\n            }\r\n          }\r\n        },\r\n        hide: () => {\r\n          setShowing(false);\r\n          if (contentsState) {\r\n            for (const listener of listeners[contentsState.type] || []) {\r\n              listener.fn(ModalActionTypeClose);\r\n            }\r\n          }\r\n        },\r\n        setContents: (\r\n          type: ModalType,\r\n          contents: React.ReactNode,\r\n          show?: boolean\r\n        ) => {\r\n          setContentsState({\r\n            type,\r\n            contents,\r\n          });\r\n          if (show) {\r\n            setShowing(true);\r\n          }\r\n        },\r\n        addListener: addListener,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SACEC,oBADF,EAEEC,mBAFF,EAGEC,YAHF,QAMO,YANP;;;AAsBA,MAAMC,aAAa,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EAC7C,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAe,IAAf,CAAlD;EACA,MAAM,CAACQ,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAEvC,EAFuC,CAA1C;EAIA,MAAMY,WAAW,GAAGb,WAAW,CAC7B,CAACc,IAAD,EAAkBC,EAAlB,KAA0C;IACxC,MAAMC,EAAE,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAX;IAEA,MAAMC,WAAW,GAAG;MAClBJ,EADkB;MAElBD;IAFkB,CAApB;IAKA,MAAMM,iBAAiB,GAAGV,SAAS,CAACG,IAAD,CAAT,IAAmB,EAA7C;IACAF,YAAY,CAAC,EACX,GAAGD,SADQ;MAEX,CAACG,IAAD,GAAQ,CAAC,GAAGO,iBAAJ,EAAuBD,WAAvB;IAFG,CAAD,CAAZ;IAKA,OAAO,MAAM;MACX,MAAME,YAAY,GAAG,CAACX,SAAS,CAACG,IAAD,CAAT,IAAmB,EAApB,EAAwBS,MAAxB,CAClBC,QAAD,IAAcA,QAAQ,CAACR,EAAT,KAAgBA,EADX,CAArB;MAIAJ,YAAY,CAAC,EACX,GAAGD,SADQ;QAEX,CAACG,IAAD,GAAQQ;MAFG,CAAD,CAAZ;IAID,CATD;EAUD,CAzB4B,EA0B7B,CAACX,SAAD,CA1B6B,CAA/B;EA6BA,oBACE,QAAC,YAAD,CAAc,QAAd;IACE,KAAK,EAAE;MACLc,QAAQ,EAAE,CAAAlB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEkB,QAAf,KAA2B,IADhC;MAELhB,SAFK;MAGLiB,IAAI,EAAE,MAAM;QACV,IAAInB,aAAJ,EAAmB;UACjBG,UAAU,CAAC,IAAD,CAAV;;UACA,KAAK,MAAMc,QAAX,IAAuBb,SAAS,CAACJ,aAAa,CAACO,IAAf,CAAT,IAAiC,EAAxD,EAA4D;YAC1DU,QAAQ,CAACT,EAAT,CAAYZ,mBAAZ;UACD;QACF;MACF,CAVI;MAWLwB,IAAI,EAAE,MAAM;QACVjB,UAAU,CAAC,KAAD,CAAV;;QACA,IAAIH,aAAJ,EAAmB;UACjB,KAAK,MAAMiB,QAAX,IAAuBb,SAAS,CAACJ,aAAa,CAACO,IAAf,CAAT,IAAiC,EAAxD,EAA4D;YAC1DU,QAAQ,CAACT,EAAT,CAAYb,oBAAZ;UACD;QACF;MACF,CAlBI;MAmBL0B,WAAW,EAAE,CACXd,IADW,EAEXW,QAFW,EAGXC,IAHW,KAIR;QACHlB,gBAAgB,CAAC;UACfM,IADe;UAEfW;QAFe,CAAD,CAAhB;;QAIA,IAAIC,IAAJ,EAAU;UACRhB,UAAU,CAAC,IAAD,CAAV;QACD;MACF,CA/BI;MAgCLG,WAAW,EAAEA;IAhCR,CADT;IAAA,UAoCGP;EApCH;IAAA;IAAA;IAAA;EAAA,QADF;AAwCD,CA7ED;;GAAMD,a;;KAAAA,a;AA+EN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}