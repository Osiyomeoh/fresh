{"ast":null,"code":"const ID_LENGTH_CHARS = 16;\nexport const encodeCaseSensitiveClientID = clientID => {\n  let suffix = '';\n\n  for (let i = 0; i < clientID.length; i++) {\n    const char = clientID.charAt(i);\n\n    if (char.toLowerCase() !== char) {\n      suffix += i.toString(16);\n    }\n  }\n\n  return `${clientID.toLowerCase()}${suffix}`;\n};\nexport const decodeCaseSensitiveClientID = encoded => {\n  const replaceAt = (str, idx, replacement) => {\n    return str.substring(0, idx) + replacement + str.substring(idx + replacement.length);\n  };\n\n  if (encoded.length < ID_LENGTH_CHARS) {\n    return encoded;\n  }\n\n  let response = encoded.substring(0, ID_LENGTH_CHARS);\n  const suffix = encoded.substring(ID_LENGTH_CHARS);\n\n  for (let i = 0; i < suffix.length; i++) {\n    const offset = parseInt(suffix.charAt(i), 16);\n    response = replaceAt(response, offset, response.charAt(offset).toUpperCase());\n  }\n\n  return response;\n};","map":{"version":3,"names":["ID_LENGTH_CHARS","encodeCaseSensitiveClientID","clientID","suffix","i","length","char","charAt","toLowerCase","toString","decodeCaseSensitiveClientID","encoded","replaceAt","str","idx","replacement","substring","response","offset","parseInt","toUpperCase"],"sources":["C:/Users/USER/Documents/demo-react/src/util/id.ts"],"sourcesContent":["const ID_LENGTH_CHARS = 16;\r\n\r\nexport const encodeCaseSensitiveClientID = (clientID: string): string => {\r\n  let suffix = '';\r\n  for (let i = 0; i < clientID.length; i++) {\r\n    const char = clientID.charAt(i);\r\n    if (char.toLowerCase() !== char) {\r\n      suffix += i.toString(16);\r\n    }\r\n  }\r\n\r\n  return `${clientID.toLowerCase()}${suffix}`;\r\n};\r\n\r\nexport const decodeCaseSensitiveClientID = (encoded: string): string => {\r\n  const replaceAt = (str: string, idx: number, replacement: string): string => {\r\n    return (\r\n      str.substring(0, idx) +\r\n      replacement +\r\n      str.substring(idx + replacement.length)\r\n    );\r\n  };\r\n\r\n  if (encoded.length < ID_LENGTH_CHARS) {\r\n    return encoded;\r\n  }\r\n  let response = encoded.substring(0, ID_LENGTH_CHARS);\r\n  const suffix = encoded.substring(ID_LENGTH_CHARS);\r\n  for (let i = 0; i < suffix.length; i++) {\r\n    const offset = parseInt(suffix.charAt(i), 16);\r\n    response = replaceAt(\r\n      response,\r\n      offset,\r\n      response.charAt(offset).toUpperCase()\r\n    );\r\n  }\r\n  return response;\r\n};\r\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,EAAxB;AAEA,OAAO,MAAMC,2BAA2B,GAAIC,QAAD,IAA8B;EACvE,IAAIC,MAAM,GAAG,EAAb;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;IACxC,MAAME,IAAI,GAAGJ,QAAQ,CAACK,MAAT,CAAgBH,CAAhB,CAAb;;IACA,IAAIE,IAAI,CAACE,WAAL,OAAuBF,IAA3B,EAAiC;MAC/BH,MAAM,IAAIC,CAAC,CAACK,QAAF,CAAW,EAAX,CAAV;IACD;EACF;;EAED,OAAQ,GAAEP,QAAQ,CAACM,WAAT,EAAuB,GAAEL,MAAO,EAA1C;AACD,CAVM;AAYP,OAAO,MAAMO,2BAA2B,GAAIC,OAAD,IAA6B;EACtE,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAcC,GAAd,EAA2BC,WAA3B,KAA2D;IAC3E,OACEF,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiBF,GAAjB,IACAC,WADA,GAEAF,GAAG,CAACG,SAAJ,CAAcF,GAAG,GAAGC,WAAW,CAACV,MAAhC,CAHF;EAKD,CAND;;EAQA,IAAIM,OAAO,CAACN,MAAR,GAAiBL,eAArB,EAAsC;IACpC,OAAOW,OAAP;EACD;;EACD,IAAIM,QAAQ,GAAGN,OAAO,CAACK,SAAR,CAAkB,CAAlB,EAAqBhB,eAArB,CAAf;EACA,MAAMG,MAAM,GAAGQ,OAAO,CAACK,SAAR,CAAkBhB,eAAlB,CAAf;;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACtC,MAAMc,MAAM,GAAGC,QAAQ,CAAChB,MAAM,CAACI,MAAP,CAAcH,CAAd,CAAD,EAAmB,EAAnB,CAAvB;IACAa,QAAQ,GAAGL,SAAS,CAClBK,QADkB,EAElBC,MAFkB,EAGlBD,QAAQ,CAACV,MAAT,CAAgBW,MAAhB,EAAwBE,WAAxB,EAHkB,CAApB;EAKD;;EACD,OAAOH,QAAP;AACD,CAvBM"},"metadata":{},"sourceType":"module"}