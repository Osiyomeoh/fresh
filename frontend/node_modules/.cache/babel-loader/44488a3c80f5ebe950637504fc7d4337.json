{"ast":null,"code":"var __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\n\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n\n  return getter ? getter.call(obj) : member.get(obj);\n};\n\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\n\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n\n  return method;\n}; // src/base.ts\n\n\nimport { goerli, mainnet } from \"@wagmi/core/chains\";\nimport { default as EventEmitter } from \"eventemitter3\";\nvar Connector = class extends EventEmitter {\n  constructor(_ref) {\n    let {\n      chains = [mainnet, goerli],\n      options\n    } = _ref;\n    super();\n\n    __publicField(this, \"chains\");\n\n    __publicField(this, \"options\");\n\n    this.chains = chains;\n    this.options = options;\n  }\n\n  getBlockExplorerUrls(chain) {\n    const {\n      default: blockExplorer,\n      ...blockExplorers\n    } = chain.blockExplorers ?? {};\n    if (blockExplorer) return [blockExplorer.url, ...Object.values(blockExplorers).map(x => x.url)];\n  }\n\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.id === chainId);\n  }\n\n};\nexport { __publicField, __privateGet, __privateAdd, __privateSet, __privateMethod, Connector };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","__accessCheck","member","msg","has","TypeError","__privateGet","getter","call","get","__privateAdd","WeakSet","add","set","__privateSet","setter","__privateMethod","method","goerli","mainnet","default","EventEmitter","Connector","constructor","chains","options","getBlockExplorerUrls","chain","blockExplorer","blockExplorers","url","values","map","x","isChainUnsupported","chainId","some","id"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@wagmi/connectors/dist/chunk-5NCTPR6C.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/base.ts\nimport { goerli, mainnet } from \"@wagmi/core/chains\";\nimport { default as EventEmitter } from \"eventemitter3\";\nvar Connector = class extends EventEmitter {\n  constructor({\n    chains = [mainnet, goerli],\n    options\n  }) {\n    super();\n    __publicField(this, \"chains\");\n    __publicField(this, \"options\");\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n    if (blockExplorer)\n      return [\n        blockExplorer.url,\n        ...Object.values(blockExplorers).map((x) => x.url)\n      ];\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some((x) => x.id === chainId);\n  }\n};\n\nexport {\n  __publicField,\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod,\n  Connector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}