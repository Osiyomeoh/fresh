{"ast":null,"code":"\"use strict\"; // Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\n\nconst random_1 = require(\"@stablelib/random\");\n\nconst sha512_1 = require(\"@stablelib/sha512\");\n\nconst wipe_1 = require(\"@stablelib/wipe\");\n\nexports.SIGNATURE_LENGTH = 64;\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 64;\nexports.SEED_LENGTH = 32; // Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\n\nfunction gf(init) {\n  const r = new Float64Array(16);\n\n  if (init) {\n    for (let i = 0; i < init.length; i++) {\n      r[i] = init[i];\n    }\n  }\n\n  return r;\n} // Base point.\n\n\nconst _9 = new Uint8Array(32);\n\n_9[0] = 9;\nconst gf0 = gf();\nconst gf1 = gf([1]);\nconst D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nconst D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nconst X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nconst Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nconst I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction set25519(r, a) {\n  for (let i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction car25519(o) {\n  let c = 1;\n\n  for (let i = 0; i < 16; i++) {\n    let v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  const c = ~(b - 1);\n\n  for (let i = 0; i < 16; i++) {\n    const t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  const m = gf();\n  const t = gf();\n\n  for (let i = 0; i < 16; i++) {\n    t[i] = n[i];\n  }\n\n  car25519(t);\n  car25519(t);\n  car25519(t);\n\n  for (let j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n\n    for (let i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n      m[i - 1] &= 0xffff;\n    }\n\n    m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n    const b = m[15] >> 16 & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n\n  for (let i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction verify32(x, y) {\n  let d = 0;\n\n  for (let i = 0; i < 32; i++) {\n    d |= x[i] ^ y[i];\n  }\n\n  return (1 & d - 1 >>> 8) - 1;\n}\n\nfunction neq25519(a, b) {\n  const c = new Uint8Array(32);\n  const d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return verify32(c, d);\n}\n\nfunction par25519(a) {\n  const d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  for (let i = 0; i < 16; i++) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n\n  o[15] &= 0x7fff;\n}\n\nfunction add(o, a, b) {\n  for (let i = 0; i < 16; i++) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction sub(o, a, b) {\n  for (let i = 0; i < 16; i++) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction mul(o, a, b) {\n  let v,\n      c,\n      t0 = 0,\n      t1 = 0,\n      t2 = 0,\n      t3 = 0,\n      t4 = 0,\n      t5 = 0,\n      t6 = 0,\n      t7 = 0,\n      t8 = 0,\n      t9 = 0,\n      t10 = 0,\n      t11 = 0,\n      t12 = 0,\n      t13 = 0,\n      t14 = 0,\n      t15 = 0,\n      t16 = 0,\n      t17 = 0,\n      t18 = 0,\n      t19 = 0,\n      t20 = 0,\n      t21 = 0,\n      t22 = 0,\n      t23 = 0,\n      t24 = 0,\n      t25 = 0,\n      t26 = 0,\n      t27 = 0,\n      t28 = 0,\n      t29 = 0,\n      t30 = 0,\n      b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11],\n      b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n  t0 += 38 * t16;\n  t1 += 38 * t17;\n  t2 += 38 * t18;\n  t3 += 38 * t19;\n  t4 += 38 * t20;\n  t5 += 38 * t21;\n  t6 += 38 * t22;\n  t7 += 38 * t23;\n  t8 += 38 * t24;\n  t9 += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30; // t15 left as is\n  // first car\n\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1); // second car\n\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n  o[0] = t0;\n  o[1] = t1;\n  o[2] = t2;\n  o[3] = t3;\n  o[4] = t4;\n  o[5] = t5;\n  o[6] = t6;\n  o[7] = t7;\n  o[8] = t8;\n  o[9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction square(o, a) {\n  mul(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  const c = gf();\n  let a;\n\n  for (a = 0; a < 16; a++) {\n    c[a] = i[a];\n  }\n\n  for (a = 253; a >= 0; a--) {\n    square(c, c);\n\n    if (a !== 2 && a !== 4) {\n      mul(c, c, i);\n    }\n  }\n\n  for (a = 0; a < 16; a++) {\n    o[a] = c[a];\n  }\n}\n\nfunction pow2523(o, i) {\n  const c = gf();\n  let a;\n\n  for (a = 0; a < 16; a++) {\n    c[a] = i[a];\n  }\n\n  for (a = 250; a >= 0; a--) {\n    square(c, c);\n\n    if (a !== 1) {\n      mul(c, c, i);\n    }\n  }\n\n  for (a = 0; a < 16; a++) {\n    o[a] = c[a];\n  }\n}\n\nfunction edadd(p, q) {\n  const a = gf(),\n        b = gf(),\n        c = gf(),\n        d = gf(),\n        e = gf(),\n        f = gf(),\n        g = gf(),\n        h = gf(),\n        t = gf();\n  sub(a, p[1], p[0]);\n  sub(t, q[1], q[0]);\n  mul(a, a, t);\n  add(b, p[0], p[1]);\n  add(t, q[0], q[1]);\n  mul(b, b, t);\n  mul(c, p[3], q[3]);\n  mul(c, c, D2);\n  mul(d, p[2], q[2]);\n  add(d, d, d);\n  sub(e, b, a);\n  sub(f, d, c);\n  add(g, d, c);\n  add(h, b, a);\n  mul(p[0], e, f);\n  mul(p[1], h, g);\n  mul(p[2], g, f);\n  mul(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for (let i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  const tx = gf(),\n        ty = gf(),\n        zi = gf();\n  inv25519(zi, p[2]);\n  mul(tx, p[0], zi);\n  mul(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n\n  for (let i = 255; i >= 0; --i) {\n    const b = s[i / 8 | 0] >> (i & 7) & 1;\n    cswap(p, q, b);\n    edadd(q, p);\n    edadd(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  const q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  mul(q[3], X, Y);\n  scalarmult(p, q, s);\n} // Generates key pair from secret 32-byte seed.\n\n\nfunction generateKeyPairFromSeed(seed) {\n  if (seed.length !== exports.SEED_LENGTH) {\n    throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);\n  }\n\n  const d = (0, sha512_1.hash)(seed);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  const publicKey = new Uint8Array(32);\n  const p = [gf(), gf(), gf(), gf()];\n  scalarbase(p, d);\n  pack(publicKey, p);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(seed);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n}\n\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\n\nfunction generateKeyPair(prng) {\n  const seed = (0, random_1.randomBytes)(32, prng);\n  const result = generateKeyPairFromSeed(seed);\n  (0, wipe_1.wipe)(seed);\n  return result;\n}\n\nexports.generateKeyPair = generateKeyPair;\n\nfunction extractPublicKeyFromSecretKey(secretKey) {\n  if (secretKey.length !== exports.SECRET_KEY_LENGTH) {\n    throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);\n  }\n\n  return new Uint8Array(secretKey.subarray(32));\n}\n\nexports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;\nconst L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  let carry;\n  let i;\n  let j;\n  let k;\n\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n\n    x[j] += carry;\n    x[i] = 0;\n  }\n\n  carry = 0;\n\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n\n  for (j = 0; j < 32; j++) {\n    x[j] -= carry * L[j];\n  }\n\n  for (i = 0; i < 32; i++) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  const x = new Float64Array(64);\n\n  for (let i = 0; i < 64; i++) {\n    x[i] = r[i];\n  }\n\n  for (let i = 0; i < 64; i++) {\n    r[i] = 0;\n  }\n\n  modL(r, x);\n} // Returns 64-byte signature of the message under the 64-byte secret key.\n\n\nfunction sign(secretKey, message) {\n  const x = new Float64Array(64);\n  const p = [gf(), gf(), gf(), gf()];\n  const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  const signature = new Uint8Array(64);\n  signature.set(d.subarray(32), 32);\n  const hs = new sha512_1.SHA512();\n  hs.update(signature.subarray(32));\n  hs.update(message);\n  const r = hs.digest();\n  hs.clean();\n  reduce(r);\n  scalarbase(p, r);\n  pack(signature, p);\n  hs.reset();\n  hs.update(signature.subarray(0, 32));\n  hs.update(secretKey.subarray(32));\n  hs.update(message);\n  const h = hs.digest();\n  reduce(h);\n\n  for (let i = 0; i < 32; i++) {\n    x[i] = r[i];\n  }\n\n  for (let i = 0; i < 32; i++) {\n    for (let j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(signature.subarray(32), x);\n  return signature;\n}\n\nexports.sign = sign;\n\nfunction unpackneg(r, p) {\n  const t = gf(),\n        chk = gf(),\n        num = gf(),\n        den = gf(),\n        den2 = gf(),\n        den4 = gf(),\n        den6 = gf();\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  square(num, r[1]);\n  mul(den, num, D);\n  sub(num, num, r[2]);\n  add(den, r[2], den);\n  square(den2, den);\n  square(den4, den2);\n  mul(den6, den4, den2);\n  mul(t, den6, num);\n  mul(t, t, den);\n  pow2523(t, t);\n  mul(t, t, num);\n  mul(t, t, den);\n  mul(t, t, den);\n  mul(r[0], t, den);\n  square(chk, r[0]);\n  mul(chk, chk, den);\n\n  if (neq25519(chk, num)) {\n    mul(r[0], r[0], I);\n  }\n\n  square(chk, r[0]);\n  mul(chk, chk, den);\n\n  if (neq25519(chk, num)) {\n    return -1;\n  }\n\n  if (par25519(r[0]) === p[31] >> 7) {\n    sub(r[0], gf0, r[0]);\n  }\n\n  mul(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction verify(publicKey, message, signature) {\n  const t = new Uint8Array(32);\n  const p = [gf(), gf(), gf(), gf()];\n  const q = [gf(), gf(), gf(), gf()];\n\n  if (signature.length !== exports.SIGNATURE_LENGTH) {\n    throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);\n  }\n\n  if (unpackneg(q, publicKey)) {\n    return false;\n  }\n\n  const hs = new sha512_1.SHA512();\n  hs.update(signature.subarray(0, 32));\n  hs.update(publicKey);\n  hs.update(message);\n  const h = hs.digest();\n  reduce(h);\n  scalarmult(p, q, h);\n  scalarbase(q, signature.subarray(32));\n  edadd(p, q);\n  pack(t, p);\n\n  if (verify32(signature, t)) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.verify = verify;\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\n\nfunction convertPublicKeyToX25519(publicKey) {\n  let q = [gf(), gf(), gf(), gf()];\n\n  if (unpackneg(q, publicKey)) {\n    throw new Error(\"Ed25519: invalid public key\");\n  } // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n\n\n  let a = gf();\n  let b = gf();\n  let y = q[1];\n  add(a, gf1, y);\n  sub(b, gf1, y);\n  inv25519(b, b);\n  mul(a, a, b);\n  let z = new Uint8Array(32);\n  pack25519(z, a);\n  return z;\n}\n\nexports.convertPublicKeyToX25519 = convertPublicKeyToX25519;\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\n\nfunction convertSecretKeyToX25519(secretKey) {\n  const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  const o = new Uint8Array(d.subarray(0, 32));\n  (0, wipe_1.wipe)(d);\n  return o;\n}\n\nexports.convertSecretKeyToX25519 = convertSecretKeyToX25519;","map":{"version":3,"mappings":"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","names":["exports","gf","init","r","Float64Array","i","length","_9","Uint8Array","gf0","gf1","D","D2","X","Y","I","set25519","a","car25519","o","c","v","Math","floor","sel25519","p","q","b","t","pack25519","n","m","j","verify32","x","y","d","neq25519","par25519","unpack25519","add","sub","mul","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","square","inv25519","pow2523","edadd","e","f","g","h","cswap","pack","tx","ty","zi","scalarmult","s","scalarbase","generateKeyPairFromSeed","seed","Error","publicKey","secretKey","set","generateKeyPair","prng","result","extractPublicKeyFromSecretKey","subarray","L","modL","carry","k","reduce","sign","message","signature","hs","sha512_1","update","digest","clean","reset","unpackneg","chk","num","den","den2","den4","den6","verify","convertPublicKeyToX25519","z","convertSecretKeyToX25519"],"sources":["C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@stablelib\\ed25519\\ed25519.ts"],"sourcesContent":["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { hash, SHA512 } from \"@stablelib/sha512\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const SIGNATURE_LENGTH = 64;\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 64;\nexport const SEED_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../kex/x25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which was ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst gf0 = gf();\n\nconst gf1 = gf([1]);\n\nconst D = gf([\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\n]);\n\nconst D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\n]);\n\nconst X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\n]);\n\nconst Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\n]);\n\nconst I = gf([\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\n]);\n\nfunction set25519(r: GF, a: GF) {\n    for (let i = 0; i < 16; i++) {\n        r[i] = a[i] | 0;\n    }\n}\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction verify32(x: Uint8Array, y: Uint8Array) {\n    let d = 0;\n    for (let i = 0; i < 32; i++) {\n        d |= x[i] ^ y[i];\n    }\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\n\n\nfunction neq25519(a: GF, b: GF) {\n    const c = new Uint8Array(32);\n    const d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return verify32(c, d);\n}\n\nfunction par25519(a: GF) {\n    const d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, i: GF) {\n    const c = gf();\n    let a: number;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 253; a >= 0; a--) {\n        square(c, c);\n        if (a !== 2 && a !== 4) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\n\nfunction pow2523(o: GF, i: GF) {\n    const c = gf();\n    let a: number;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 250; a >= 0; a--) {\n        square(c, c);\n        if (a !== 1) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\n\n\nfunction edadd(p: GF[], q: GF[]) {\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf(),\n        g = gf(), h = gf(), t = gf();\n\n    sub(a, p[1], p[0]);\n    sub(t, q[1], q[0]);\n    mul(a, a, t);\n    add(b, p[0], p[1]);\n    add(t, q[0], q[1]);\n    mul(b, b, t);\n    mul(c, p[3], q[3]);\n    mul(c, c, D2);\n    mul(d, p[2], q[2]);\n    add(d, d, d);\n    sub(e, b, a);\n    sub(f, d, c);\n    add(g, d, c);\n    add(h, b, a);\n\n    mul(p[0], e, f);\n    mul(p[1], h, g);\n    mul(p[2], g, f);\n    mul(p[3], e, h);\n}\n\nfunction cswap(p: GF[], q: GF[], b: number) {\n    for (let i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\n\nfunction pack(r: Uint8Array, p: GF[]) {\n    const tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    mul(tx, p[0], zi);\n    mul(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p: GF[], q: GF[], s: Uint8Array) {\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (let i = 255; i >= 0; --i) {\n        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        edadd(q, p);\n        edadd(p, p);\n        cswap(p, q, b);\n    }\n}\n\nfunction scalarbase(p: GF[], s: Uint8Array) {\n    const q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    mul(q[3], X, Y);\n    scalarmult(p, q, s);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\n// Generates key pair from secret 32-byte seed.\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SEED_LENGTH) {\n        throw new Error(`ed25519: seed must be ${SEED_LENGTH} bytes`);\n    }\n\n    const d = hash(seed);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    const publicKey = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    scalarbase(p, d);\n    pack(publicKey, p);\n\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\nexport function extractPublicKeyFromSecretKey(secretKey: Uint8Array): Uint8Array {\n    if (secretKey.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`ed25519: secret key must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    return new Uint8Array(secretKey.subarray(32));\n}\n\nconst L = new Float64Array([\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\n\nfunction modL(r: Uint8Array, x: Float64Array) {\n    let carry: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = Math.floor((x[j] + 128) / 256);\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) {\n        x[j] -= carry * L[j];\n    }\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\n\nfunction reduce(r: Uint8Array) {\n    const x = new Float64Array(64);\n    for (let i = 0; i < 64; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 64; i++) {\n        r[i] = 0;\n    }\n    modL(r, x);\n}\n\n// Returns 64-byte signature of the message under the 64-byte secret key.\nexport function sign(secretKey: Uint8Array, message: Uint8Array): Uint8Array {\n    const x = new Float64Array(64);\n    const p = [gf(), gf(), gf(), gf()];\n\n    const d = hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    const signature = new Uint8Array(64);\n    signature.set(d.subarray(32), 32);\n\n    const hs = new SHA512();\n    hs.update(signature.subarray(32));\n    hs.update(message);\n    const r = hs.digest();\n    hs.clean();\n    reduce(r);\n    scalarbase(p, r);\n    pack(signature, p);\n\n    hs.reset();\n    hs.update(signature.subarray(0, 32));\n    hs.update(secretKey.subarray(32));\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n\n    for (let i = 0; i < 32; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 32; i++) {\n        for (let j = 0; j < 32; j++) {\n            x[i + j] += h[i] * d[j];\n        }\n    }\n    modL(signature.subarray(32), x);\n\n    return signature;\n}\n\nfunction unpackneg(r: GF[], p: Uint8Array) {\n    const t = gf(), chk = gf(), num = gf(),\n        den = gf(), den2 = gf(), den4 = gf(),\n        den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    square(num, r[1]);\n    mul(den, num, D);\n    sub(num, num, r[2]);\n    add(den, r[2], den);\n\n    square(den2, den);\n    square(den4, den2);\n    mul(den6, den4, den2);\n    mul(t, den6, num);\n    mul(t, t, den);\n\n    pow2523(t, t);\n    mul(t, t, num);\n    mul(t, t, den);\n    mul(t, t, den);\n    mul(r[0], t, den);\n\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        mul(r[0], r[0], I);\n    }\n\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        return -1;\n    }\n\n    if (par25519(r[0]) === (p[31] >> 7)) {\n        sub(r[0], gf0, r[0]);\n    }\n\n    mul(r[3], r[0], r[1]);\n    return 0;\n}\n\nexport function verify(publicKey: Uint8Array, message: Uint8Array, signature: Uint8Array): boolean {\n    const t = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    const q = [gf(), gf(), gf(), gf()];\n\n    if (signature.length !== SIGNATURE_LENGTH) {\n        throw new Error(`ed25519: signature must be ${SIGNATURE_LENGTH} bytes`);\n    }\n\n    if (unpackneg(q, publicKey)) {\n        return false;\n    }\n\n    const hs = new SHA512();\n    hs.update(signature.subarray(0, 32));\n    hs.update(publicKey);\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    scalarmult(p, q, h);\n\n    scalarbase(q, signature.subarray(32));\n    edadd(p, q);\n    pack(t, p);\n\n    if (verify32(signature, t)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\nexport function convertPublicKeyToX25519(publicKey: Uint8Array): Uint8Array {\n    let q = [gf(), gf(), gf(), gf()];\n\n    if (unpackneg(q, publicKey)) {\n        throw new Error(\"Ed25519: invalid public key\");\n    }\n\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n    let a = gf();\n    let b = gf();\n    let y = q[1];\n    add(a, gf1, y);\n    sub(b, gf1, y);\n    inv25519(b, b);\n    mul(a, a, b);\n\n    let z = new Uint8Array(32);\n    pack25519(z, a);\n    return z;\n}\n\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\nexport function convertSecretKeyToX25519(secretKey: Uint8Array): Uint8Array {\n    const d = hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const o = new Uint8Array(d.subarray(0, 32));\n    wipe(d);\n    return o;\n}\n"]},"metadata":{},"sourceType":"script"}