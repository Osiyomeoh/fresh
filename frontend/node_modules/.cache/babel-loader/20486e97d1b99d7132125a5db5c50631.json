{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { IJsonRpcConnection } from \"@walletconnect/jsonrpc-types\";\nimport { formatJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport class SignerConnection extends IJsonRpcConnection {\n  constructor(opts) {\n    super();\n    this.events = new EventEmitter();\n    this.accounts = [];\n    this.chainId = 1;\n    this.pending = false;\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModalOptions = undefined;\n    this.opts = opts;\n    this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n    this.wc = this.register(opts);\n  }\n\n  get connected() {\n    return typeof this.wc !== \"undefined\" && this.wc.connected;\n  }\n\n  get connecting() {\n    return this.pending;\n  }\n\n  get connector() {\n    this.wc = this.register(this.opts);\n    return this.wc;\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  async open(chainId) {\n    if (this.connected) {\n      this.onOpen();\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      this.on(\"error\", err => {\n        reject(err);\n      });\n      this.on(\"open\", () => {\n        resolve();\n      });\n      this.create(chainId);\n    });\n  }\n\n  async close() {\n    if (typeof this.wc === \"undefined\") return;\n\n    if (this.wc.connected) {\n      this.wc.killSession();\n    }\n\n    this.onClose();\n  }\n\n  async send(payload) {\n    this.wc = this.register(this.opts);\n    if (!this.connected) await this.open();\n    this.sendPayload(payload).then(res => this.events.emit(\"payload\", res)).catch(e => this.events.emit(\"payload\", formatJsonRpcError(payload.id, e.message)));\n  }\n\n  register(opts) {\n    if (this.wc) return this.wc;\n    this.opts = opts || this.opts;\n    this.bridge = (opts === null || opts === void 0 ? void 0 : opts.connector) ? opts.connector.bridge : (opts === null || opts === void 0 ? void 0 : opts.bridge) || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof (opts === null || opts === void 0 ? void 0 : opts.qrcode) === \"undefined\" || opts.qrcode !== false;\n    this.chainId = typeof (opts === null || opts === void 0 ? void 0 : opts.chainId) !== \"undefined\" ? opts.chainId : this.chainId;\n    this.qrcodeModalOptions = opts === null || opts === void 0 ? void 0 : opts.qrcodeModalOptions;\n    const connectorOpts = {\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? QRCodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    };\n    this.wc = typeof (opts === null || opts === void 0 ? void 0 : opts.connector) !== \"undefined\" ? opts.connector : new WalletConnect(connectorOpts);\n\n    if (typeof this.wc === \"undefined\") {\n      throw new Error(\"Failed to register WalletConnect connector\");\n    }\n\n    if (this.wc.accounts.length) {\n      this.accounts = this.wc.accounts;\n    }\n\n    if (this.wc.chainId) {\n      this.chainId = this.wc.chainId;\n    }\n\n    this.registerConnectorEvents();\n    return this.wc;\n  }\n\n  onOpen(wc) {\n    this.pending = false;\n\n    if (wc) {\n      this.wc = wc;\n    }\n\n    this.events.emit(\"open\");\n  }\n\n  onClose() {\n    this.pending = false;\n\n    if (this.wc) {\n      this.wc = undefined;\n    }\n\n    this.events.emit(\"close\");\n  }\n\n  onError(payload) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Failed or Rejected Request\";\n    let code = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -32000;\n    let data = arguments.length > 3 ? arguments[3] : undefined;\n    const errorPayload = {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      error: {\n        code,\n        message\n      }\n    };\n\n    if (typeof data !== \"undefined\") {\n      errorPayload.error.data = data;\n    }\n\n    this.events.emit(\"payload\", errorPayload);\n    return errorPayload;\n  }\n\n  create(chainId) {\n    this.wc = this.register(this.opts);\n    this.chainId = chainId || this.chainId;\n    if (this.connected || this.pending) return;\n    this.pending = true;\n    this.registerConnectorEvents();\n    this.wc.createSession({\n      chainId: this.chainId\n    }).then(() => this.events.emit(\"created\")).catch(e => this.events.emit(\"error\", e));\n  }\n\n  registerConnectorEvents() {\n    this.wc = this.register(this.opts);\n    this.wc.on(\"connect\", err => {\n      var _a, _b;\n\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n\n      this.accounts = ((_a = this.wc) === null || _a === void 0 ? void 0 : _a.accounts) || [];\n      this.chainId = ((_b = this.wc) === null || _b === void 0 ? void 0 : _b.chainId) || this.chainId;\n      this.onOpen();\n    });\n    this.wc.on(\"disconnect\", err => {\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n\n      this.onClose();\n    });\n    this.wc.on(\"modal_closed\", () => {\n      this.events.emit(\"error\", new Error(\"User closed modal\"));\n    });\n    this.wc.on(\"session_update\", (error, payload) => {\n      const {\n        accounts,\n        chainId\n      } = payload.params[0];\n\n      if (!this.accounts || accounts && this.accounts !== accounts) {\n        this.accounts = accounts;\n        this.events.emit(\"accountsChanged\", accounts);\n      }\n\n      if (!this.chainId || chainId && this.chainId !== chainId) {\n        this.chainId = chainId;\n        this.events.emit(\"chainChanged\", chainId);\n      }\n    });\n  }\n\n  async sendPayload(payload) {\n    this.wc = this.register(this.opts);\n\n    try {\n      const response = await this.wc.unsafeSend(payload);\n      return this.sanitizeResponse(response);\n    } catch (error) {\n      return this.onError(payload, error.message);\n    }\n  }\n\n  sanitizeResponse(response) {\n    return typeof response.error !== \"undefined\" && typeof response.error.code === \"undefined\" ? formatJsonRpcError(response.id, response.error.message, response.error.data) : response;\n  }\n\n}\nexport default SignerConnection;","map":{"version":3,"mappings":"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","names":["EventEmitter","WalletConnect","QRCodeModal","IJsonRpcConnection","formatJsonRpcError","SignerConnection","constructor","opts","undefined","chainId","wc","register","connected","connecting","pending","connector","on","event","listener","events","once","off","removeListener","open","onOpen","Promise","resolve","reject","err","create","close","killSession","onClose","send","payload","sendPayload","then","res","emit","catch","e","id","message","bridge","qrcode","qrcodeModalOptions","connectorOpts","qrcodeModal","storageId","signingMethods","clientMeta","Error","accounts","length","registerConnectorEvents","onError","code","data","errorPayload","jsonrpc","error","createSession","_a","_b","params","response","unsafeSend","sanitizeResponse"],"sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}