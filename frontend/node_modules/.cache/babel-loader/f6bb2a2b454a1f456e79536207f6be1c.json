{"ast":null,"code":"import { proxy as p, subscribe as m } from \"valtio/vanilla\";\nimport { Buffer as O } from \"buffer\";\nconst n = p({\n  selectedChain: void 0,\n  chains: void 0,\n  standaloneChains: void 0,\n  standaloneUri: void 0,\n  address: void 0,\n  profileName: void 0,\n  profileAvatar: void 0,\n  profileLoading: !1,\n  balanceLoading: !1,\n  balance: void 0,\n  isConnected: !1,\n  isStandalone: !1,\n  isCustomDesktop: !1,\n  isCustomMobile: !1,\n  isDataLoaded: !1,\n  isUiLoaded: !1,\n  walletConnectVersion: 1\n}),\n      a = {\n  state: n,\n\n  subscribe(e) {\n    return m(n, () => e(n));\n  },\n\n  setChains(e) {\n    n.chains = e;\n  },\n\n  setStandaloneChains(e) {\n    n.standaloneChains = e;\n  },\n\n  setStandaloneUri(e) {\n    n.standaloneUri = e;\n  },\n\n  getSelectedChain() {\n    const e = L.client().getNetwork().chain;\n    return e && (n.selectedChain = e), n.selectedChain;\n  },\n\n  setSelectedChain(e) {\n    n.selectedChain = e;\n  },\n\n  setIsStandalone(e) {\n    n.isStandalone = e;\n  },\n\n  setIsCustomDesktop(e) {\n    n.isCustomDesktop = e;\n  },\n\n  setIsCustomMobile(e) {\n    n.isCustomMobile = e;\n  },\n\n  getAccount() {\n    const e = L.client().getAccount();\n    n.address = e.address, n.isConnected = e.isConnected;\n  },\n\n  setAddress(e) {\n    n.address = e;\n  },\n\n  setIsConnected(e) {\n    n.isConnected = e;\n  },\n\n  setProfileName(e) {\n    n.profileName = e;\n  },\n\n  setProfileAvatar(e) {\n    n.profileAvatar = e;\n  },\n\n  setProfileLoading(e) {\n    n.profileLoading = e;\n  },\n\n  setBalanceLoading(e) {\n    n.balanceLoading = e;\n  },\n\n  setBalance(e) {\n    n.balance = e;\n  },\n\n  setIsDataLoaded(e) {\n    n.isDataLoaded = e;\n  },\n\n  setIsUiLoaded(e) {\n    n.isUiLoaded = e;\n  },\n\n  setWalletConnectVersion(e) {\n    n.walletConnectVersion = e;\n  },\n\n  resetEnsProfile() {\n    n.profileName = void 0, n.profileAvatar = void 0;\n  },\n\n  resetBalance() {\n    n.balance = void 0;\n  },\n\n  resetAccount() {\n    n.address = void 0, n.isConnected = !1, a.resetEnsProfile(), a.resetBalance();\n  }\n\n},\n      h = p({\n  initialized: !1,\n  ethereumClient: void 0\n}),\n      L = {\n  setEthereumClient(e) {\n    !h.initialized && e && (h.ethereumClient = e, a.setChains(e.chains), h.initialized = !0);\n  },\n\n  client() {\n    if (h.ethereumClient) return h.ethereumClient;\n    throw new Error(\"ClientCtrl has no client set\");\n  }\n\n},\n      d = {\n  WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n\n  isMobile() {\n    return typeof window < \"u\" ? Boolean(window.matchMedia(\"(pointer:coarse)\").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)) : !1;\n  },\n\n  isAndroid() {\n    return d.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n  },\n\n  isEmptyObject(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.getOwnPropertyNames(e).length === 0 && Object.getOwnPropertySymbols(e).length === 0;\n  },\n\n  isHttpUrl(e) {\n    return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n  },\n\n  formatNativeUrl(e, t, s) {\n    if (d.isHttpUrl(e)) return this.formatUniversalUrl(e, t, s);\n    let o = e;\n    o.includes(\"://\") || (o = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), o = `${o}://`), this.setWalletConnectDeepLink(o, s);\n    const l = encodeURIComponent(t);\n    return `${o}wc?uri=${l}`;\n  },\n\n  formatUniversalUrl(e, t, s) {\n    if (!d.isHttpUrl(e)) return this.formatNativeUrl(e, t, s);\n    let o = e;\n    e.endsWith(\"/\") && (o = e.slice(0, -1)), this.setWalletConnectDeepLink(o, s);\n    const l = encodeURIComponent(t);\n    return `${o}/wc?uri=${l}`;\n  },\n\n  async wait(e) {\n    return new Promise(t => {\n      setTimeout(t, e);\n    });\n  },\n\n  openHref(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"_self\";\n    window.open(e, t, \"noreferrer noopener\");\n  },\n\n  setWalletConnectDeepLink(e, t) {\n    localStorage.setItem(d.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n      href: e,\n      name: t\n    }));\n  },\n\n  setWalletConnectAndroidDeepLink(e) {\n    const [t] = e.split(\"?\");\n    localStorage.setItem(d.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n      href: t,\n      name: \"Android\"\n    }));\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(d.WALLETCONNECT_DEEPLINK_CHOICE);\n  },\n\n  isNull(e) {\n    return e === null;\n  }\n\n};\n\nfunction S() {\n  return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\n\nconst f = p({\n  projectId: \"\",\n  themeMode: S() ? \"dark\" : \"light\",\n  themeColor: \"default\",\n  themeBackground: d.isMobile() ? \"themeColor\" : \"gradient\",\n  themeZIndex: 89,\n  mobileWallets: void 0,\n  desktopWallets: void 0,\n  walletImages: void 0,\n  chainImages: void 0,\n  tokenImages: void 0,\n  standaloneChains: void 0,\n  enableStandaloneMode: !1,\n  enableNetworkView: !1,\n  enableAccountView: !0,\n  defaultChain: void 0,\n  explorerAllowList: void 0,\n  explorerDenyList: void 0,\n  termsOfServiceUrl: void 0,\n  privacyPolicyUrl: void 0\n}),\n      W = {\n  state: f,\n\n  subscribe(e) {\n    return m(f, () => e(f));\n  },\n\n  setConfig(e) {\n    var t, s, o, l;\n    if (a.setStandaloneChains(e.standaloneChains), a.setIsStandalone(Boolean((t = e.standaloneChains) == null ? void 0 : t.length) || Boolean(e.enableStandaloneMode)), a.setIsCustomMobile(Boolean((s = e.mobileWallets) == null ? void 0 : s.length)), a.setIsCustomDesktop(Boolean((o = e.desktopWallets) == null ? void 0 : o.length)), a.setWalletConnectVersion((l = e.walletConnectVersion) != null ? l : 1), e.defaultChain) a.setSelectedChain(e.defaultChain);else if (!a.state.isStandalone) {\n      const u = L.client().getDefaultChain();\n      a.setSelectedChain(u);\n    }\n    Object.assign(f, e);\n  },\n\n  setThemeConfig(e) {\n    Object.assign(f, e);\n  }\n\n},\n      I = \"https://explorer-api.walletconnect.com\";\n\nfunction y(e) {\n  const t = Object.fromEntries(Object.entries(e).filter(_ref => {\n    let [s, o] = _ref;\n    return typeof o < \"u\" && o !== null && o !== \"\";\n  }).map(_ref2 => {\n    let [s, o] = _ref2;\n    return [s, o.toString()];\n  }));\n  return new URLSearchParams(t).toString();\n}\n\nconst v = {\n  async fetchWallets(e, t) {\n    const s = y(t),\n          o = `${I}/v3/wallets?projectId=${e}&${s}`;\n    return (await fetch(o)).json();\n  },\n\n  formatImageUrl(e, t) {\n    return `${I}/v3/logo/lg/${t}?projectId=${e}`;\n  }\n\n},\n      r = p({\n  wallets: {\n    listings: [],\n    total: 0,\n    page: 1\n  },\n  search: {\n    listings: [],\n    total: 0,\n    page: 1\n  },\n  previewWallets: [],\n  recomendedWallets: []\n});\n\nfunction b() {\n  const {\n    projectId: e\n  } = W.state;\n  if (!e) throw new Error(\"projectId is required to work with explorer api\");\n  return e;\n}\n\nconst A = {\n  state: r,\n\n  async getPreviewWallets(e) {\n    const {\n      listings: t\n    } = await v.fetchWallets(b(), e);\n    return r.previewWallets = Object.values(t), r.previewWallets;\n  },\n\n  async getRecomendedWallets() {\n    const {\n      listings: e\n    } = await v.fetchWallets(b(), {\n      page: 1,\n      entries: 6\n    });\n    r.recomendedWallets = Object.values(e);\n  },\n\n  async getPaginatedWallets(e) {\n    const {\n      page: t,\n      search: s\n    } = e,\n          {\n      listings: o,\n      total: l\n    } = await v.fetchWallets(b(), e),\n          u = Object.values(o),\n          w = s ? \"search\" : \"wallets\";\n    return r[w] = {\n      listings: [...r[w].listings, ...u],\n      total: l,\n      page: t ?? 1\n    }, {\n      listings: u,\n      total: l\n    };\n  },\n\n  getImageUrl(e) {\n    return v.formatImageUrl(b(), e);\n  },\n\n  resetSearch() {\n    r.search = {\n      listings: [],\n      total: 0,\n      page: 1\n    };\n  }\n\n},\n      i = p({\n  history: [\"ConnectWallet\"],\n  view: \"ConnectWallet\",\n  data: void 0\n}),\n      g = {\n  state: i,\n\n  subscribe(e) {\n    return m(i, () => e(i));\n  },\n\n  push(e, t) {\n    e !== i.view && (i.view = e, t && (i.data = t), i.history.push(e));\n  },\n\n  replace(e) {\n    i.view = e, i.history = [e];\n  },\n\n  goBack() {\n    if (i.history.length > 1) {\n      i.history.pop();\n      const [e] = i.history.slice(-1);\n      i.view = e;\n    }\n  }\n\n},\n      C = p({\n  open: !1\n}),\n      k = {\n  state: C,\n\n  subscribe(e) {\n    return m(C, () => e(C));\n  },\n\n  async open(e) {\n    return new Promise(t => {\n      const {\n        isConnected: s,\n        isStandalone: o,\n        isUiLoaded: l,\n        isDataLoaded: u\n      } = a.state,\n            {\n        enableNetworkView: w\n      } = W.state;\n      if (o ? (a.setStandaloneUri(e?.uri), a.setStandaloneChains(e?.standaloneChains), g.replace(\"ConnectWallet\")) : e != null && e.route ? g.replace(e.route) : s ? g.replace(\"Account\") : w ? g.replace(\"SelectNetwork\") : g.replace(\"ConnectWallet\"), l && u) C.open = !0, t();else {\n        const E = setInterval(() => {\n          a.state.isUiLoaded && a.state.isDataLoaded && (clearInterval(E), C.open = !0, t());\n        }, 200);\n      }\n    });\n  },\n\n  close() {\n    C.open = !1;\n  }\n\n},\n      c = p({\n  open: !1,\n  message: \"\",\n  variant: \"success\"\n}),\n      P = {\n  state: c,\n\n  subscribe(e) {\n    return m(c, () => e(c));\n  },\n\n  openToast(e, t) {\n    c.open = !0, c.message = e, c.variant = t;\n  },\n\n  closeToast() {\n    c.open = !1;\n  }\n\n};\ntypeof window < \"u\" && (window.Buffer || (window.Buffer = O), window.global || (window.global = window), window.process || (window.process = {\n  env: {}\n}));\nexport { L as ClientCtrl, W as ConfigCtrl, d as CoreUtil, A as ExplorerCtrl, k as ModalCtrl, a as OptionsCtrl, g as RouterCtrl, P as ToastCtrl };","map":{"version":3,"mappings":"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","names":["state","proxy","selectedChain","chains","standaloneChains","standaloneUri","address","profileName","profileAvatar","profileLoading","balanceLoading","balance","isConnected","isStandalone","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","walletConnectVersion","OptionsCtrl","subscribe","callback","valtioSub","setChains","setStandaloneChains","setStandaloneUri","getSelectedChain","ClientCtrl","client","getNetwork","chain","setSelectedChain","setIsStandalone","setIsCustomDesktop","setIsCustomMobile","getAccount","account","setAddress","setIsConnected","setProfileName","setProfileAvatar","setProfileLoading","setBalanceLoading","setBalance","setIsDataLoaded","setIsUiLoaded","setWalletConnectVersion","resetEnsProfile","resetBalance","resetAccount","initialized","ethereumClient","setEthereumClient","Error","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isEmptyObject","value","Object","getPrototypeOf","prototype","getOwnPropertyNames","length","getOwnPropertySymbols","isHttpUrl","url","startsWith","formatNativeUrl","appUrl","wcUri","name","formatUniversalUrl","safeAppUrl","replaceAll","setWalletConnectDeepLink","encodedWcUrl","encodeURIComponent","plainAppUrl","endsWith","slice","wait","miliseconds","Promise","resolve","setTimeout","openHref","href","target","open","localStorage","setItem","JSON","stringify","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","isNull","isDarkMode","projectId","themeMode","themeColor","themeBackground","themeZIndex","mobileWallets","desktopWallets","walletImages","chainImages","tokenImages","enableStandaloneMode","enableNetworkView","enableAccountView","defaultChain","explorerAllowList","explorerDenyList","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_a","_b","_c","_d","getDefaultChain","assign","setThemeConfig","theme","EXPLORER_API","formatParams","params","stringParams","fromEntries","entries","filter","_","map","key","toString","URLSearchParams","ExplorerUtil","fetchWallets","urlParams","fetcUrl","fetch","json","formatImageUrl","imageId","wallets","listings","total","page","search","previewWallets","recomendedWallets","getProjectId","ExplorerCtrl","getPreviewWallets","values","getRecomendedWallets","getPaginatedWallets","listingsObj","type","getImageUrl","resetSearch","history","view","data","RouterCtrl","push","replace","goBack","pop","last","ModalCtrl","options","uri","route","interval","setInterval","clearInterval","close","message","variant","ToastCtrl","openToast","closeToast","Buffer","global","process","env"],"sources":["C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\OptionsCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\ClientCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\utils\\CoreUtil.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\ConfigCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\utils\\ExplorerUtil.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\ExplorerCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\RouterCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\ModalCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\controllers\\ToastCtrl.ts","C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@web3modal\\core\\src\\utils\\PolyfillUtil.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  walletConnectVersion: 1\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  setAddress(address: OptionsCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: OptionsCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  setProfileName(profileName: OptionsCtrlState['profileName']) {\n    state.profileName = profileName\n  },\n\n  setProfileAvatar(profileAvatar: OptionsCtrlState['profileAvatar']) {\n    state.profileAvatar = profileAvatar\n  },\n\n  setProfileLoading(profileLoading: OptionsCtrlState['profileLoading']) {\n    state.profileLoading = profileLoading\n  },\n\n  setBalanceLoading(balanceLoading: OptionsCtrlState['balanceLoading']) {\n    state.balanceLoading = balanceLoading\n  },\n\n  setBalance(balance: OptionsCtrlState['balance']) {\n    state.balance = balance\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setWalletConnectVersion(walletConnectVersion: OptionsCtrlState['walletConnectVersion']) {\n    state.walletConnectVersion = walletConnectVersion\n  },\n\n  resetEnsProfile() {\n    state.profileName = undefined\n    state.profileAvatar = undefined\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    OptionsCtrl.resetEnsProfile()\n    OptionsCtrl.resetBalance()\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) {\n      return state.ethereumClient\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","export const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  themeMode: isDarkMode() ? 'dark' : 'light',\n  themeColor: 'default',\n  themeBackground: CoreUtil.isMobile() ? 'themeColor' : 'gradient',\n  themeZIndex: 89,\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  enableAccountView: true,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setWalletConnectVersion(config.walletConnectVersion ?? 1)\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    } else if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n    }\n\n    Object.assign(state, config)\n  },\n\n  setThemeConfig(theme: Pick<ConfigCtrlState, 'themeBackground' | 'themeColor' | 'themeMode'>) {\n    Object.assign(state, theme)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isConnected, isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}