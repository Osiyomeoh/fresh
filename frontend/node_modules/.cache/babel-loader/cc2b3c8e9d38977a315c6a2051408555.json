{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\demo-react\\\\src\\\\common\\\\form\\\\unstyled-input.tsx\",\n    _s = $RefreshSig$();\n\nimport { ExclamationCircleIcon } from '@heroicons/react/outline';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { useUUID } from '../hooks/use-uuid';\nimport { classNames } from '../../util/classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UnstyledInput = _ref => {\n  _s();\n\n  let {\n    label,\n    placeholder,\n    value,\n    validationError,\n    outerClassName,\n    innerClassName,\n    hideTooltip,\n    readOnly,\n    noGrow,\n    shrink,\n    disabled,\n    onTextChange,\n    onBlur,\n    onFocus,\n    onSubmit\n  } = _ref;\n  const uuid = useUUID();\n  const tooltipRef = useRef(null);\n  const [isFocused, setFocused] = useState(false);\n  useEffect(() => {\n    if (validationError && !isFocused && tooltipRef.current) {\n      ReactTooltip.show(tooltipRef.current);\n    } else if ((!validationError || isFocused) && tooltipRef.current) {\n      ReactTooltip.hide(tooltipRef.current);\n    }\n  }, [validationError, isFocused]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames('relative', !noGrow && 'flex-grow', shrink && 'flex-shrink'),\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      className: \"block text-sm font-light text-typography-inputlabel\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(outerClassName, !!label && 'mt-1'),\n      ref: tooltipRef,\n      \"data-for\": uuid,\n      \"data-tip\": ' ',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        disabled: disabled,\n        className: innerClassName || undefined,\n        placeholder: placeholder,\n        value: value,\n        onChange: e => onTextChange(e.target.value),\n        onBlur: () => {\n          setFocused(false);\n          onBlur && onBlur();\n        },\n        onFocus: () => {\n          setFocused(true);\n          onFocus && onFocus();\n        },\n        onKeyDown: e => {\n          if (onSubmit && (e.code.toLowerCase() === 'return' || e.code.toLowerCase() === 'enter')) {\n            onSubmit();\n          }\n        },\n        readOnly: readOnly,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"off\",\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {\n          className: \"w-5 h-5 text-red-500\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !hideTooltip &&\n    /*#__PURE__*/\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    _jsxDEV(ReactTooltip, {\n      type: \"error\",\n      effect: \"solid\",\n      id: uuid,\n      getContent: () => {\n        if (!validationError || isFocused) {\n          return null;\n        }\n\n        return validationError;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UnstyledInput, \"HlcHgonavPDdTPG2pAQ27R88cLY=\", false, function () {\n  return [useUUID];\n});\n\n_c = UnstyledInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnstyledInput\");","map":{"version":3,"names":["ExclamationCircleIcon","useEffect","useRef","useState","ReactTooltip","useUUID","classNames","UnstyledInput","label","placeholder","value","validationError","outerClassName","innerClassName","hideTooltip","readOnly","noGrow","shrink","disabled","onTextChange","onBlur","onFocus","onSubmit","uuid","tooltipRef","isFocused","setFocused","current","show","hide","undefined","e","target","code","toLowerCase"],"sources":["C:/Users/USER/Documents/demo-react/src/common/form/unstyled-input.tsx"],"sourcesContent":["import { ExclamationCircleIcon } from '@heroicons/react/outline';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { useUUID } from '../hooks/use-uuid';\r\nimport { classNames } from '../../util/classnames';\r\n\r\ntype Props = {\r\n  label?: string;\r\n  placeholder?: string;\r\n  value: string;\r\n  validationError?: string | null;\r\n  outerClassName: string | null;\r\n  innerClassName: string | null;\r\n  hideTooltip?: boolean;\r\n  readOnly?: boolean;\r\n  noGrow?: boolean;\r\n  shrink?: boolean;\r\n  disabled?: boolean;\r\n  onTextChange: (val: string) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  onSubmit?: () => void;\r\n};\r\n\r\nexport const UnstyledInput = ({\r\n  label,\r\n  placeholder,\r\n  value,\r\n  validationError,\r\n  outerClassName,\r\n  innerClassName,\r\n  hideTooltip,\r\n  readOnly,\r\n  noGrow,\r\n  shrink,\r\n  disabled,\r\n  onTextChange,\r\n  onBlur,\r\n  onFocus,\r\n  onSubmit,\r\n}: Props) => {\r\n  const uuid = useUUID();\r\n\r\n  const tooltipRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [isFocused, setFocused] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (validationError && !isFocused && tooltipRef.current) {\r\n      ReactTooltip.show(tooltipRef.current);\r\n    } else if ((!validationError || isFocused) && tooltipRef.current) {\r\n      ReactTooltip.hide(tooltipRef.current);\r\n    }\r\n  }, [validationError, isFocused]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        'relative',\r\n        !noGrow && 'flex-grow',\r\n        shrink && 'flex-shrink'\r\n      )}\r\n    >\r\n      {label && (\r\n        <label\r\n          htmlFor=\"name\"\r\n          className=\"block text-sm font-light text-typography-inputlabel\"\r\n        >\r\n          {label}\r\n        </label>\r\n      )}\r\n      <div\r\n        className={classNames(outerClassName, !!label && 'mt-1')}\r\n        ref={tooltipRef}\r\n        data-for={uuid}\r\n        data-tip={' '}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled={disabled}\r\n          className={innerClassName || undefined}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={(e) => onTextChange(e.target.value)}\r\n          onBlur={() => {\r\n            setFocused(false);\r\n            onBlur && onBlur();\r\n          }}\r\n          onFocus={() => {\r\n            setFocused(true);\r\n            onFocus && onFocus();\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (\r\n              onSubmit &&\r\n              (e.code.toLowerCase() === 'return' ||\r\n                e.code.toLowerCase() === 'enter')\r\n            ) {\r\n              onSubmit();\r\n            }\r\n          }}\r\n          readOnly={readOnly}\r\n          autoComplete=\"off\"\r\n          autoCorrect=\"off\"\r\n          autoCapitalize=\"off\"\r\n          spellCheck=\"false\"\r\n        />\r\n        {validationError && (\r\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n            <ExclamationCircleIcon\r\n              className=\"w-5 h-5 text-red-500\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {!hideTooltip && (\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        <ReactTooltip\r\n          type=\"error\"\r\n          effect=\"solid\"\r\n          id={uuid}\r\n          getContent={() => {\r\n            if (!validationError || isFocused) {\r\n              return null;\r\n            }\r\n            return validationError;\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}