{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-empty-function */\nimport { createContext } from 'react';\nimport { emptyConfig } from '../config';\nexport const ModalActionTypeOpen = 'open';\nexport const ModalActionTypeClose = 'close';\nexport const ModalTypeAddEvent = 'addEvent';\nexport const ModalTypeAddFile = 'addFile';\nexport const emptyAppContext = {\n  appMetadata: {\n    data: undefined,\n    loading: false,\n    fetch: async () => null\n  },\n  events: {\n    data: undefined,\n    loading: false,\n    fetch: async () => null,\n    addEvent: event => {}\n  },\n  roles: {\n    data: {},\n    fetch: async () => false,\n    fetchRoles: async () => {}\n  },\n  users: {\n    data: undefined,\n    loading: false,\n    fetch: async () => null\n  },\n  me: {\n    data: undefined,\n    loading: false,\n    fetch: async () => null,\n    patch: async nickname => null\n  },\n  files: {\n    data: undefined,\n    loading: false,\n    list: async () => null,\n    get: async id => null,\n    getPresignedURL: async id => null,\n    create: async file => null,\n    patch: async (id, input) => null,\n    delete: async id => null\n  }\n};\nexport const NavigationContext = /*#__PURE__*/createContext({\n  navigationItems: [],\n  selectedID: null,\n  showSignInButton: false,\n  setShowSignInButton: () => {}\n});\nexport const ConfigContext = /*#__PURE__*/createContext(emptyConfig);\nexport const ModalContext = /*#__PURE__*/createContext({\n  contents: null,\n  isShowing: false,\n  show: () => {},\n  hide: () => {},\n  setContents: () => {},\n  addListener: (type, fn) => () => {}\n});\nexport const AppContext = /*#__PURE__*/createContext(emptyAppContext);","map":{"version":3,"names":["createContext","emptyConfig","ModalActionTypeOpen","ModalActionTypeClose","ModalTypeAddEvent","ModalTypeAddFile","emptyAppContext","appMetadata","data","undefined","loading","fetch","events","addEvent","event","roles","fetchRoles","users","me","patch","nickname","files","list","get","id","getPresignedURL","create","file","input","delete","NavigationContext","navigationItems","selectedID","showSignInButton","setShowSignInButton","ConfigContext","ModalContext","contents","isShowing","show","hide","setContents","addListener","type","fn","AppContext"],"sources":["C:/Users/USER/Documents/demo-react/src/context/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { createContext } from 'react';\r\nimport { CreateFileInput, PatchFileInput } from '../api';\r\nimport { Config, emptyConfig } from '../config';\r\nimport { AppMetadata } from '../model/app-metadata';\r\nimport { SlashauthEvent } from '../model/event';\r\nimport { User } from '../model/user';\r\nimport { NavigationState } from '../providers/navigation-provider';\r\nimport { SlashauthFile } from '../model/file';\r\n\r\nexport type ModalActionType = string;\r\n\r\nexport const ModalActionTypeOpen = 'open';\r\nexport const ModalActionTypeClose = 'close';\r\n\r\nexport type ModalListenerFn = (action: ModalActionType) => void;\r\nexport type UnlistenFn = () => void;\r\n\r\nexport type ModalType = string;\r\nexport const ModalTypeAddEvent: ModalType = 'addEvent';\r\nexport const ModalTypeAddFile: ModalType = 'addFile';\r\n\r\nexport type ModalContextType = {\r\n  contents: React.ReactNode;\r\n  isShowing: boolean;\r\n  show: () => void;\r\n  hide: () => void;\r\n  setContents: (\r\n    type: ModalType,\r\n    contents: React.ReactNode,\r\n    show?: boolean\r\n  ) => void;\r\n  addListener: (type: ModalType, fn: ModalListenerFn) => UnlistenFn;\r\n};\r\n\r\nexport type AppContextType = {\r\n  appMetadata: {\r\n    data: AppMetadata | null;\r\n    loading: boolean;\r\n    fetch: () => Promise<AppMetadata>;\r\n  };\r\n  events: {\r\n    data: SlashauthEvent[] | null;\r\n    loading: boolean;\r\n    fetch: () => Promise<SlashauthEvent[] | null>;\r\n    addEvent: (event: SlashauthEvent) => void;\r\n  };\r\n  roles: {\r\n    data: {\r\n      [roleName: string]: {\r\n        data: boolean;\r\n        loading: boolean;\r\n      };\r\n    };\r\n    fetch: (roleName: string) => Promise<boolean>;\r\n    fetchRoles: () => Promise<void>;\r\n  };\r\n  me: {\r\n    data: User | null;\r\n    loading: boolean;\r\n    fetch: () => Promise<User | null>;\r\n    patch: (nickname: string) => Promise<User | null>;\r\n  };\r\n  files: {\r\n    data: Record<string, SlashauthFile> | null;\r\n    loading: boolean;\r\n    list: () => Promise<SlashauthFile[] | null>;\r\n    get: (fileID: string) => Promise<SlashauthFile | null>;\r\n    getPresignedURL: (fileID: string) => Promise<string | null>;\r\n    create: (file: CreateFileInput) => Promise<SlashauthFile | null>;\r\n    patch: (id: string, input: PatchFileInput) => Promise<SlashauthFile>;\r\n    delete: (id: string) => Promise<SlashauthFile>;\r\n  };\r\n};\r\n\r\nexport const emptyAppContext = {\r\n  appMetadata: {\r\n    data: undefined,\r\n    loading: false,\r\n    fetch: async () => null,\r\n  },\r\n  events: {\r\n    data: undefined,\r\n    loading: false,\r\n    fetch: async () => null,\r\n    addEvent: (event: SlashauthEvent) => {},\r\n  },\r\n  roles: {\r\n    data: {},\r\n    fetch: async () => false,\r\n    fetchRoles: async () => {},\r\n  },\r\n  users: {\r\n    data: undefined,\r\n    loading: false,\r\n    fetch: async () => null,\r\n  },\r\n  me: {\r\n    data: undefined,\r\n    loading: false,\r\n    fetch: async () => null,\r\n    patch: async (nickname: string) => null,\r\n  },\r\n  files: {\r\n    data: undefined,\r\n    loading: false,\r\n    list: async () => null,\r\n    get: async (id: string) => null,\r\n    getPresignedURL: async (id: string) => null,\r\n    create: async (file: CreateFileInput) => null,\r\n    patch: async (id: string, input: PatchFileInput) => null,\r\n    delete: async (id: string) => null,\r\n  },\r\n};\r\n\r\nexport const NavigationContext = createContext<NavigationState>({\r\n  navigationItems: [],\r\n  selectedID: null,\r\n  showSignInButton: false,\r\n  setShowSignInButton: () => {},\r\n});\r\n\r\nexport const ConfigContext = createContext<Config>(emptyConfig);\r\nexport const ModalContext = createContext<ModalContextType>({\r\n  contents: null,\r\n  isShowing: false,\r\n  show: () => {},\r\n  hide: () => {},\r\n  setContents: () => {},\r\n  addListener: (type: ModalType, fn: ModalListenerFn) => () => {},\r\n});\r\n\r\nexport const AppContext = createContext<AppContextType>(emptyAppContext);\r\n"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,OAA9B;AAEA,SAAiBC,WAAjB,QAAoC,WAApC;AASA,OAAO,MAAMC,mBAAmB,GAAG,MAA5B;AACP,OAAO,MAAMC,oBAAoB,GAAG,OAA7B;AAMP,OAAO,MAAMC,iBAA4B,GAAG,UAArC;AACP,OAAO,MAAMC,gBAA2B,GAAG,SAApC;AAuDP,OAAO,MAAMC,eAAe,GAAG;EAC7BC,WAAW,EAAE;IACXC,IAAI,EAAEC,SADK;IAEXC,OAAO,EAAE,KAFE;IAGXC,KAAK,EAAE,YAAY;EAHR,CADgB;EAM7BC,MAAM,EAAE;IACNJ,IAAI,EAAEC,SADA;IAENC,OAAO,EAAE,KAFH;IAGNC,KAAK,EAAE,YAAY,IAHb;IAINE,QAAQ,EAAGC,KAAD,IAA2B,CAAE;EAJjC,CANqB;EAY7BC,KAAK,EAAE;IACLP,IAAI,EAAE,EADD;IAELG,KAAK,EAAE,YAAY,KAFd;IAGLK,UAAU,EAAE,YAAY,CAAE;EAHrB,CAZsB;EAiB7BC,KAAK,EAAE;IACLT,IAAI,EAAEC,SADD;IAELC,OAAO,EAAE,KAFJ;IAGLC,KAAK,EAAE,YAAY;EAHd,CAjBsB;EAsB7BO,EAAE,EAAE;IACFV,IAAI,EAAEC,SADJ;IAEFC,OAAO,EAAE,KAFP;IAGFC,KAAK,EAAE,YAAY,IAHjB;IAIFQ,KAAK,EAAE,MAAOC,QAAP,IAA4B;EAJjC,CAtByB;EA4B7BC,KAAK,EAAE;IACLb,IAAI,EAAEC,SADD;IAELC,OAAO,EAAE,KAFJ;IAGLY,IAAI,EAAE,YAAY,IAHb;IAILC,GAAG,EAAE,MAAOC,EAAP,IAAsB,IAJtB;IAKLC,eAAe,EAAE,MAAOD,EAAP,IAAsB,IALlC;IAMLE,MAAM,EAAE,MAAOC,IAAP,IAAiC,IANpC;IAOLR,KAAK,EAAE,OAAOK,EAAP,EAAmBI,KAAnB,KAA6C,IAP/C;IAQLC,MAAM,EAAE,MAAOL,EAAP,IAAsB;EARzB;AA5BsB,CAAxB;AAwCP,OAAO,MAAMM,iBAAiB,gBAAG9B,aAAa,CAAkB;EAC9D+B,eAAe,EAAE,EAD6C;EAE9DC,UAAU,EAAE,IAFkD;EAG9DC,gBAAgB,EAAE,KAH4C;EAI9DC,mBAAmB,EAAE,MAAM,CAAE;AAJiC,CAAlB,CAAvC;AAOP,OAAO,MAAMC,aAAa,gBAAGnC,aAAa,CAASC,WAAT,CAAnC;AACP,OAAO,MAAMmC,YAAY,gBAAGpC,aAAa,CAAmB;EAC1DqC,QAAQ,EAAE,IADgD;EAE1DC,SAAS,EAAE,KAF+C;EAG1DC,IAAI,EAAE,MAAM,CAAE,CAH4C;EAI1DC,IAAI,EAAE,MAAM,CAAE,CAJ4C;EAK1DC,WAAW,EAAE,MAAM,CAAE,CALqC;EAM1DC,WAAW,EAAE,CAACC,IAAD,EAAkBC,EAAlB,KAA0C,MAAM,CAAE;AANL,CAAnB,CAAlC;AASP,OAAO,MAAMC,UAAU,gBAAG7C,aAAa,CAAiBM,eAAjB,CAAhC"},"metadata":{},"sourceType":"module"}