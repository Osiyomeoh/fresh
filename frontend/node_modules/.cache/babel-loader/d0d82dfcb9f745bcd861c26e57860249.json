{"ast":null,"code":"const ECLevel = require('./error-correction-level');\n\nconst EC_BLOCKS_TABLE = [// L  M  Q  H\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];\nconst EC_CODEWORDS_TABLE = [// L  M  Q  H\n7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\n\nexports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n\n    case ECLevel.M:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n\n    case ECLevel.Q:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n\n    case ECLevel.H:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\n\n\nexports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n\n    case ECLevel.M:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n\n    case ECLevel.Q:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n\n    case ECLevel.H:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};","map":{"version":3,"names":["ECLevel","require","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","exports","getBlocksCount","version","errorCorrectionLevel","L","M","Q","H","undefined","getTotalCodewordsCount"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@web3modal/ui/node_modules/qrcode/lib/core/error-correction-code.js"],"sourcesContent":["const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}