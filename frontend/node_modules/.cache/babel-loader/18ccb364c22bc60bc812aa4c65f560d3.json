{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;\n\nconst constants_1 = require(\"./constants\");\n\nfunction getDefaultLoggerOptions(opts) {\n  return Object.assign(Object.assign({}, opts), {\n    level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level\n  });\n}\n\nexports.getDefaultLoggerOptions = getDefaultLoggerOptions;\n\nfunction getBrowserLoggerContext(logger) {\n  let customContextKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  return logger[customContextKey] || \"\";\n}\n\nexports.getBrowserLoggerContext = getBrowserLoggerContext;\n\nfunction setBrowserLoggerContext(logger, context) {\n  let customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  logger[customContextKey] = context;\n  return logger;\n}\n\nexports.setBrowserLoggerContext = setBrowserLoggerContext;\n\nfunction getLoggerContext(logger) {\n  let customContextKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  let context = \"\";\n\n  if (typeof logger.bindings === \"undefined\") {\n    context = getBrowserLoggerContext(logger, customContextKey);\n  } else {\n    context = logger.bindings().context || \"\";\n  }\n\n  return context;\n}\n\nexports.getLoggerContext = getLoggerContext;\n\nfunction formatChildLoggerContext(logger, childContext) {\n  let customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  const parentContext = getLoggerContext(logger, customContextKey);\n  const context = parentContext.trim() ? `${parentContext}/${childContext}` : childContext;\n  return context;\n}\n\nexports.formatChildLoggerContext = formatChildLoggerContext;\n\nfunction generateChildLogger(logger, childContext) {\n  let customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  const context = formatChildLoggerContext(logger, childContext, customContextKey);\n  const child = logger.child({\n    context\n  });\n  return setBrowserLoggerContext(child, context, customContextKey);\n}\n\nexports.generateChildLogger = generateChildLogger;","map":{"version":3,"mappings":";;;;;;;AAEA;;AAEA,SAAgBA,uBAAhB,CAAwCC,IAAxC,EAA4D;EAC1D,uCACKA,IADL,GACS;IACPC,KAAK,EAAE,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,KAAN,KAAeC,iCAAqBD;EADpC,CADT;AAID;;AALDE;;AAOA,SAAgBC,uBAAhB,CACEC,MADF,EAEoD;EAAA,IAAlDC,gBAAkD,uEAAvBJ,mCAAuB;EAElD,OAAQG,MAAc,CAACC,gBAAD,CAAd,IAAoC,EAA5C;AACD;;AALDH;;AAOA,SAAgBI,uBAAhB,CACEF,MADF,EAEEG,OAFF,EAGoD;EAAA,IAAlDF,gBAAkD,uEAAvBJ,mCAAuB;EAEjDG,MAAc,CAACC,gBAAD,CAAd,GAAmCE,OAAnC;EACD,OAAOH,MAAP;AACD;;AAPDF;;AASA,SAAgBM,gBAAhB,CACEJ,MADF,EAEoD;EAAA,IAAlDC,gBAAkD,uEAAvBJ,mCAAuB;EAElD,IAAIM,OAAO,GAAG,EAAd;;EAEA,IAAI,OAAOH,MAAM,CAACK,QAAd,KAA2B,WAA/B,EAA4C;IAC1CF,OAAO,GAAGJ,uBAAuB,CAACC,MAAD,EAASC,gBAAT,CAAjC;EACD,CAFD,MAEO;IACLE,OAAO,GAAGH,MAAM,CAACK,QAAP,GAAkBF,OAAlB,IAA6B,EAAvC;EACD;;EACD,OAAOA,OAAP;AACD;;AAZDL;;AAcA,SAAgBQ,wBAAhB,CACEN,MADF,EAEEO,YAFF,EAGoD;EAAA,IAAlDN,gBAAkD,uEAAvBJ,mCAAuB;EAElD,MAAMW,aAAa,GAAGJ,gBAAgB,CAACJ,MAAD,EAASC,gBAAT,CAAtC;EACA,MAAME,OAAO,GAAGK,aAAa,CAACC,IAAd,KACZ,GAAGD,aAAa,IAAID,YAAY,EADpB,GAEZA,YAFJ;EAGA,OAAOJ,OAAP;AACD;;AAVDL;;AAYA,SAAgBY,mBAAhB,CACEV,MADF,EAEEO,YAFF,EAGoD;EAAA,IAAlDN,gBAAkD,uEAAvBJ,mCAAuB;EAElD,MAAMM,OAAO,GAAGG,wBAAwB,CACtCN,MADsC,EAEtCO,YAFsC,EAGtCN,gBAHsC,CAAxC;EAKA,MAAMU,KAAK,GAAGX,MAAM,CAACW,KAAP,CAAa;IAAER;EAAF,CAAb,CAAd;EACA,OAAOD,uBAAuB,CAACS,KAAD,EAAQR,OAAR,EAAiBF,gBAAjB,CAA9B;AACD;;AAZDH","names":["getDefaultLoggerOptions","opts","level","constants_1","exports","getBrowserLoggerContext","logger","customContextKey","setBrowserLoggerContext","context","getLoggerContext","bindings","formatChildLoggerContext","childContext","parentContext","trim","generateChildLogger","child"],"sources":["../../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}