{"ast":null,"code":"import { Connector, __privateAdd, __privateGet, __privateMethod, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\"; // src/walletConnect.ts\n\nimport { SwitchChainError, UserRejectedRequestError, getClient, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar defaultV2Config = {\n  namespace: \"eip155\",\n  methods: [\"eth_sendTransaction\", \"eth_sendRawTransaction\", \"eth_sign\", \"eth_signTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"wallet_switchEthereumChain\", \"wallet_addEthereumChain\"],\n  events: [\"accountsChanged\", \"chainChanged\"]\n};\n\nvar _provider, _initUniversalProviderPromise, _web3Modal, _createWeb3Modal, createWeb3Modal_fn, _initUniversalProvider, initUniversalProvider_fn, _createUniversalProvider, createUniversalProvider_fn, _isChainsAuthorized, isChainsAuthorized_fn, _switchChain, switchChain_fn;\n\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super(config);\n\n    __privateAdd(this, _createWeb3Modal);\n\n    __privateAdd(this, _initUniversalProvider);\n\n    __privateAdd(this, _createUniversalProvider);\n\n    __privateAdd(this, _isChainsAuthorized);\n\n    __privateAdd(this, _switchChain);\n\n    __publicField(this, \"id\", \"walletConnect\");\n\n    __publicField(this, \"name\", \"WalletConnect\");\n\n    __publicField(this, \"ready\", true);\n\n    __privateAdd(this, _provider, void 0);\n\n    __privateAdd(this, _initUniversalProviderPromise, void 0);\n\n    __privateAdd(this, _web3Modal, void 0);\n\n    __publicField(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    __publicField(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n\n    __publicField(this, \"onDisplayUri\", uri => {\n      this.emit(\"message\", {\n        type: \"display_uri\",\n        data: uri\n      });\n    });\n\n    if (this.version === \"2\") {\n      __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n\n      if (this.isQrCode) __privateMethod(this, _createWeb3Modal, createWeb3Modal_fn).call(this);\n    }\n  }\n\n  get isQrCode() {\n    return this.options.qrcode !== false;\n  }\n\n  get namespacedChains() {\n    return this.chains.map(chain => `${defaultV2Config.namespace}:${chain.id}`);\n  }\n\n  get version() {\n    if (\"version\" in this.options) return this.options.version;\n    return \"1\";\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const isV1 = this.version === \"1\";\n    const isV2 = this.version === \"2\";\n\n    try {\n      let targetChainId = chainId;\n\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n      }\n\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: isV1\n      });\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n\n      if (isV2) {\n        provider.on(\"session_delete\", this.onDisconnect);\n        provider.on(\"display_uri\", this.onDisplayUri);\n        const isChainsAuthorized = await __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this);\n        if (provider.session && !isChainsAuthorized) await provider.disconnect();\n\n        if (!provider.session || provider.session && !isChainsAuthorized) {\n          await Promise.race([provider.connect({\n            namespaces: {\n              [defaultV2Config.namespace]: {\n                methods: defaultV2Config.methods,\n                events: defaultV2Config.events,\n                chains: this.namespacedChains,\n                rpcMap: this.chains.reduce((rpc, chain) => ({ ...rpc,\n                  [chain.id]: chain.rpcUrls.default.http[0]\n                }), {})\n              }\n            }\n          }), ...(this.isQrCode ? [new Promise((_resolve, reject) => provider.on(\"display_uri\", async uri => {\n            await __privateGet(this, _web3Modal)?.openModal({\n              uri\n            });\n            __privateGet(this, _web3Modal)?.subscribeModal(_ref => {\n              let {\n                open\n              } = _ref;\n              if (!open) reject(new Error(\"user rejected\"));\n            });\n          }))] : [])]);\n          if (this.isQrCode) __privateGet(this, _web3Modal)?.closeModal();\n        }\n      }\n\n      setTimeout(() => this.emit(\"message\", {\n        type: \"connecting\"\n      }), 0);\n      const accounts = await Promise.race([provider.enable(), ...(isV1 && this.isQrCode ? [new Promise((_res, reject) => provider.connector.on(\"disconnect\", () => reject(new Error(\"user rejected\"))))] : [])]);\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n\n      if (isV1) {\n        const walletName = provider.connector?.peerMeta?.name ?? \"\";\n        const switchChainAllowedRegex = /(imtoken|metamask|omni|rainbow|trust wallet)/i;\n        if (switchChainAllowedRegex.test(walletName)) this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      } else this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (isV2 && this.isQrCode) __privateGet(this, _web3Modal)?.closeModal();\n\n      if (/user closed modal|user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = await this.getProvider();\n\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message)) throw error;\n    }\n\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.version === \"1\" && typeof localStorage !== \"undefined\") localStorage.removeItem(\"walletconnect\");else {\n      provider.removeListener(\"session_delete\", this.onDisconnect);\n      provider.removeListener(\"display_uri\", this.onDisplayUri);\n    }\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    let accounts;\n    if (this.version === \"1\") accounts = provider.accounts;else accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (this.version === \"1\") return normalizeChainId(provider.chainId);\n    return getClient().data?.chain?.id ?? normalizeChainId(await provider.request({\n      method: \"eth_chainId\"\n    }));\n  }\n\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.options.version === \"2\") {\n      if (!__privateGet(this, _provider)) await __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (chainId) __privateGet(this, _provider).setDefaultChain(`${defaultV2Config.namespace}:${chainId}`);\n      return __privateGet(this, _provider);\n    } else if (!__privateGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce((rpc2, chain) => ({ ...rpc2,\n        [chain.id]: chain.rpcUrls.default.http[0]\n      }), {}) : {};\n      const WalletConnectProvider = (await import(\"@walletconnect/ethereum-provider\")).default;\n\n      __privateSet(this, _provider, new WalletConnectProvider({ ...this.options,\n        chainId,\n        rpc: { ...rpc,\n          ...this.options?.rpc\n        }\n      }));\n\n      return __privateGet(this, _provider);\n    }\n\n    return __privateGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    let provider_ = provider;\n\n    if (this.version === \"2\") {\n      const chainId_ = await this.getChainId();\n      provider_ = { ...provider,\n\n        async request(args) {\n          return await provider.request(args, `${defaultV2Config.namespace}:${chainId ?? chainId_}`);\n        }\n\n      };\n    }\n\n    return new providers.Web3Provider(provider_, chainId).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const [account, isChainsAuthorized] = await Promise.all([this.getAccount(), __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this)]);\n      return !!account && isChainsAuthorized;\n    } catch {\n      return false;\n    }\n  }\n\n};\n_provider = new WeakMap();\n_initUniversalProviderPromise = new WeakMap();\n_web3Modal = new WeakMap();\n_createWeb3Modal = new WeakSet();\n\ncreateWeb3Modal_fn = async function () {\n  const {\n    Web3Modal\n  } = await import(\"@web3modal/standalone\");\n  const {\n    version\n  } = this.options;\n\n  __privateSet(this, _web3Modal, new Web3Modal({\n    projectId: version === \"2\" ? this.options.projectId : void 0,\n    standaloneChains: this.namespacedChains\n  }));\n};\n\n_initUniversalProvider = new WeakSet();\n\ninitUniversalProvider_fn = async function () {\n  const WalletConnectProvider = (await import(\"@walletconnect/universal-provider\")).default;\n\n  if (typeof WalletConnectProvider?.init === \"function\") {\n    __privateSet(this, _provider, await WalletConnectProvider.init(this.options));\n  }\n};\n\n_createUniversalProvider = new WeakSet();\n\ncreateUniversalProvider_fn = async function () {\n  if (!__privateGet(this, _initUniversalProviderPromise)) {\n    __privateSet(this, _initUniversalProviderPromise, __privateMethod(this, _initUniversalProvider, initUniversalProvider_fn).call(this));\n  }\n\n  return __privateGet(this, _initUniversalProviderPromise);\n};\n\n_isChainsAuthorized = new WeakSet();\n\nisChainsAuthorized_fn = async function () {\n  const provider = await this.getProvider();\n  if (this.version === \"1\") return true;\n  const providerChains = provider.namespaces?.[defaultV2Config.namespace]?.chains || [];\n  const authorizedChainIds = providerChains.map(chain => parseInt(chain.split(\":\")[1] || \"\"));\n  return !this.chains.some(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    return !authorizedChainIds.includes(id);\n  });\n};\n\n_switchChain = new WeakSet();\n\nswitchChain_fn = async function (chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n\n  try {\n    await Promise.race([provider.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{\n        chainId: id\n      }]\n    }), new Promise(res => this.on(\"change\", _ref3 => {\n      let {\n        chain\n      } = _ref3;\n      if (chain?.id === chainId) res(chainId);\n    }))]);\n\n    if (this.version === \"2\") {\n      ;\n      provider.setDefaultChain(`${defaultV2Config.namespace}:${chainId}`);\n      this.onChainChanged(chainId);\n    }\n\n    return this.chains.find(x => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      nativeCurrency: {\n        decimals: 18,\n        name: \"Ether\",\n        symbol: \"ETH\"\n      },\n      rpcUrls: {\n        default: {\n          http: [\"\"]\n        },\n        public: {\n          http: [\"\"]\n        }\n      }\n    };\n  } catch (error) {\n    const message = typeof error === \"string\" ? error : error?.message;\n    if (/user rejected request/i.test(message)) throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n};\n\nexport { WalletConnectConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateMethod","__privateSet","__publicField","SwitchChainError","UserRejectedRequestError","getClient","normalizeChainId","providers","getAddress","hexValue","defaultV2Config","namespace","methods","events","_provider","_initUniversalProviderPromise","_web3Modal","_createWeb3Modal","createWeb3Modal_fn","_initUniversalProvider","initUniversalProvider_fn","_createUniversalProvider","createUniversalProvider_fn","_isChainsAuthorized","isChainsAuthorized_fn","_switchChain","switchChain_fn","WalletConnectConnector","constructor","config","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","uri","type","data","version","call","isQrCode","options","qrcode","namespacedChains","chains","map","connect","isV1","isV2","targetChainId","lastUsedChainId","provider","getProvider","create","on","onAccountsChanged","onChainChanged","onDisconnect","onDisplayUri","isChainsAuthorized","session","disconnect","Promise","race","namespaces","rpcMap","reduce","rpc","rpcUrls","default","http","_resolve","reject","openModal","subscribeModal","open","Error","closeModal","setTimeout","enable","_res","connector","getChainId","walletName","peerMeta","name","switchChainAllowedRegex","test","switchChain","Web3Provider","error","message","removeListener","localStorage","removeItem","getAccount","request","method","setDefaultChain","infuraId","rpc2","WalletConnectProvider","getSigner","all","provider_","chainId_","args","isAuthorized","WeakMap","WeakSet","Web3Modal","projectId","standaloneChains","init","providerChains","authorizedChainIds","parseInt","split","some","includes","params","res","find","x","network","nativeCurrency","decimals","symbol","public"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@wagmi/connectors/dist/walletConnect.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/walletConnect.ts\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  getClient,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar defaultV2Config = {\n  namespace: \"eip155\",\n  methods: [\n    \"eth_sendTransaction\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\"\n  ],\n  events: [\"accountsChanged\", \"chainChanged\"]\n};\nvar _provider, _initUniversalProviderPromise, _web3Modal, _createWeb3Modal, createWeb3Modal_fn, _initUniversalProvider, initUniversalProvider_fn, _createUniversalProvider, createUniversalProvider_fn, _isChainsAuthorized, isChainsAuthorized_fn, _switchChain, switchChain_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super(config);\n    __privateAdd(this, _createWeb3Modal);\n    __privateAdd(this, _initUniversalProvider);\n    __privateAdd(this, _createUniversalProvider);\n    __privateAdd(this, _isChainsAuthorized);\n    __privateAdd(this, _switchChain);\n    __publicField(this, \"id\", \"walletConnect\");\n    __publicField(this, \"name\", \"WalletConnect\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initUniversalProviderPromise, void 0);\n    __privateAdd(this, _web3Modal, void 0);\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n    __publicField(this, \"onDisplayUri\", (uri) => {\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\n    });\n    if (this.version === \"2\") {\n      __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (this.isQrCode)\n        __privateMethod(this, _createWeb3Modal, createWeb3Modal_fn).call(this);\n    }\n  }\n  get isQrCode() {\n    return this.options.qrcode !== false;\n  }\n  get namespacedChains() {\n    return this.chains.map(\n      (chain) => `${defaultV2Config.namespace}:${chain.id}`\n    );\n  }\n  get version() {\n    if (\"version\" in this.options)\n      return this.options.version;\n    return \"1\";\n  }\n  async connect({ chainId } = {}) {\n    const isV1 = this.version === \"1\";\n    const isV2 = this.version === \"2\";\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: isV1\n      });\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      if (isV2) {\n        provider.on(\"session_delete\", this.onDisconnect);\n        provider.on(\"display_uri\", this.onDisplayUri);\n        const isChainsAuthorized = await __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this);\n        if (provider.session && !isChainsAuthorized)\n          await provider.disconnect();\n        if (!provider.session || provider.session && !isChainsAuthorized) {\n          await Promise.race([\n            provider.connect({\n              namespaces: {\n                [defaultV2Config.namespace]: {\n                  methods: defaultV2Config.methods,\n                  events: defaultV2Config.events,\n                  chains: this.namespacedChains,\n                  rpcMap: this.chains.reduce(\n                    (rpc, chain) => ({\n                      ...rpc,\n                      [chain.id]: chain.rpcUrls.default.http[0]\n                    }),\n                    {}\n                  )\n                }\n              }\n            }),\n            ...this.isQrCode ? [\n              new Promise(\n                (_resolve, reject) => provider.on(\"display_uri\", async (uri) => {\n                  await __privateGet(this, _web3Modal)?.openModal({ uri });\n                  __privateGet(this, _web3Modal)?.subscribeModal(({ open }) => {\n                    if (!open)\n                      reject(new Error(\"user rejected\"));\n                  });\n                })\n              )\n            ] : []\n          ]);\n          if (this.isQrCode)\n            __privateGet(this, _web3Modal)?.closeModal();\n        }\n      }\n      setTimeout(() => this.emit(\"message\", { type: \"connecting\" }), 0);\n      const accounts = await Promise.race([\n        provider.enable(),\n        ...isV1 && this.isQrCode ? [\n          new Promise(\n            (_res, reject) => provider.connector.on(\n              \"disconnect\",\n              () => reject(new Error(\"user rejected\"))\n            )\n          )\n        ] : []\n      ]);\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      if (isV1) {\n        const walletName = provider.connector?.peerMeta?.name ?? \"\";\n        const switchChainAllowedRegex = /(imtoken|metamask|omni|rainbow|trust wallet)/i;\n        if (switchChainAllowedRegex.test(walletName))\n          this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      } else\n        this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      return {\n        account,\n        chain: { id, unsupported },\n        provider: new providers.Web3Provider(\n          provider\n        )\n      };\n    } catch (error) {\n      if (isV2 && this.isQrCode)\n        __privateGet(this, _web3Modal)?.closeModal();\n      if (/user closed modal|user rejected/i.test(\n        error?.message\n      )) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message))\n        throw error;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.version === \"1\" && typeof localStorage !== \"undefined\")\n      localStorage.removeItem(\"walletconnect\");\n    else {\n      provider.removeListener(\"session_delete\", this.onDisconnect);\n      provider.removeListener(\"display_uri\", this.onDisplayUri);\n    }\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    let accounts;\n    if (this.version === \"1\")\n      accounts = provider.accounts;\n    else\n      accounts = await provider.request({\n        method: \"eth_accounts\"\n      });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (this.version === \"1\")\n      return normalizeChainId(provider.chainId);\n    return getClient().data?.chain?.id ?? normalizeChainId(await provider.request({ method: \"eth_chainId\" }));\n  }\n  async getProvider({\n    chainId,\n    create\n  } = {}) {\n    if (this.options.version === \"2\") {\n      if (!__privateGet(this, _provider))\n        await __privateMethod(this, _createUniversalProvider, createUniversalProvider_fn).call(this);\n      if (chainId)\n        __privateGet(this, _provider).setDefaultChain(\n          `${defaultV2Config.namespace}:${chainId}`\n        );\n      return __privateGet(this, _provider);\n    } else if (!__privateGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce(\n        (rpc2, chain) => ({\n          ...rpc2,\n          [chain.id]: chain.rpcUrls.default.http[0]\n        }),\n        {}\n      ) : {};\n      const WalletConnectProvider = (await import(\"@walletconnect/ethereum-provider\")).default;\n      __privateSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: { ...rpc, ...this.options?.rpc }\n      }));\n      return __privateGet(this, _provider);\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    let provider_ = provider;\n    if (this.version === \"2\") {\n      const chainId_ = await this.getChainId();\n      provider_ = {\n        ...provider,\n        async request(args) {\n          return await provider.request(\n            args,\n            `${defaultV2Config.namespace}:${chainId ?? chainId_}`\n          );\n        }\n      };\n    }\n    return new providers.Web3Provider(provider_, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const [account, isChainsAuthorized] = await Promise.all([\n        this.getAccount(),\n        __privateMethod(this, _isChainsAuthorized, isChainsAuthorized_fn).call(this)\n      ]);\n      return !!account && isChainsAuthorized;\n    } catch {\n      return false;\n    }\n  }\n};\n_provider = new WeakMap();\n_initUniversalProviderPromise = new WeakMap();\n_web3Modal = new WeakMap();\n_createWeb3Modal = new WeakSet();\ncreateWeb3Modal_fn = async function() {\n  const { Web3Modal } = await import(\"@web3modal/standalone\");\n  const { version } = this.options;\n  __privateSet(this, _web3Modal, new Web3Modal({\n    projectId: version === \"2\" ? this.options.projectId : void 0,\n    standaloneChains: this.namespacedChains\n  }));\n};\n_initUniversalProvider = new WeakSet();\ninitUniversalProvider_fn = async function() {\n  const WalletConnectProvider = (await import(\"@walletconnect/universal-provider\")).default;\n  if (typeof WalletConnectProvider?.init === \"function\") {\n    __privateSet(this, _provider, await WalletConnectProvider.init(\n      this.options\n    ));\n  }\n};\n_createUniversalProvider = new WeakSet();\ncreateUniversalProvider_fn = async function() {\n  if (!__privateGet(this, _initUniversalProviderPromise)) {\n    __privateSet(this, _initUniversalProviderPromise, __privateMethod(this, _initUniversalProvider, initUniversalProvider_fn).call(this));\n  }\n  return __privateGet(this, _initUniversalProviderPromise);\n};\n_isChainsAuthorized = new WeakSet();\nisChainsAuthorized_fn = async function() {\n  const provider = await this.getProvider();\n  if (this.version === \"1\")\n    return true;\n  const providerChains = provider.namespaces?.[defaultV2Config.namespace]?.chains || [];\n  const authorizedChainIds = providerChains.map(\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\n  );\n  return !this.chains.some(({ id }) => !authorizedChainIds.includes(id));\n};\n_switchChain = new WeakSet();\nswitchChain_fn = async function(chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n  try {\n    await Promise.race([\n      provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      }),\n      new Promise(\n        (res) => this.on(\"change\", ({ chain }) => {\n          if (chain?.id === chainId)\n            res(chainId);\n        })\n      )\n    ]);\n    if (this.version === \"2\") {\n      ;\n      provider.setDefaultChain(\n        `${defaultV2Config.namespace}:${chainId}`\n      );\n      this.onChainChanged(chainId);\n    }\n    return this.chains.find((x) => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      nativeCurrency: { decimals: 18, name: \"Ether\", symbol: \"ETH\" },\n      rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n    };\n  } catch (error) {\n    const message = typeof error === \"string\" ? error : error?.message;\n    if (/user rejected request/i.test(message))\n      throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n};\nexport {\n  WalletConnectConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}