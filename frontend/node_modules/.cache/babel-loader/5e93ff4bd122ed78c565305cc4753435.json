{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\n\nconst types_1 = require(\"../types\");\n\nconst util_1 = require(\"../util\");\n\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\n\nconst JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\n\nclass FilterPolyfill {\n  constructor(provider) {\n    this.logFilters = new Map(); // <id, filter>\n\n    this.blockFilters = new Set(); // <id>\n\n    this.pendingTransactionFilters = new Set(); // <id, true>\n\n    this.cursors = new Map(); // <id, cursor>\n\n    this.timeouts = new Map(); // <id, setTimeout id>\n\n    this.nextFilterId = (0, types_1.IntNumber)(1);\n    this.provider = provider;\n  }\n\n  async newFilter(param) {\n    const filter = filterFromParam(param);\n    const id = this.makeFilterId();\n    const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n    console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n    this.logFilters.set(id, filter);\n    this.setFilterTimeout(id);\n    return (0, util_1.hexStringFromIntNumber)(id);\n  }\n\n  async newBlockFilter() {\n    const id = this.makeFilterId();\n    const cursor = await this.setInitialCursorPosition(id, \"latest\");\n    console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n    this.blockFilters.add(id);\n    this.setFilterTimeout(id);\n    return (0, util_1.hexStringFromIntNumber)(id);\n  }\n\n  async newPendingTransactionFilter() {\n    const id = this.makeFilterId();\n    const cursor = await this.setInitialCursorPosition(id, \"latest\");\n    console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n    this.pendingTransactionFilters.add(id);\n    this.setFilterTimeout(id);\n    return (0, util_1.hexStringFromIntNumber)(id);\n  }\n\n  uninstallFilter(filterId) {\n    const id = (0, util_1.intNumberFromHexString)(filterId);\n    console.log(`Uninstalling filter (${id})`);\n    this.deleteFilter(id);\n    return true;\n  }\n\n  getFilterChanges(filterId) {\n    const id = (0, util_1.intNumberFromHexString)(filterId);\n\n    if (this.timeouts.has(id)) {\n      // extend timeout\n      this.setFilterTimeout(id);\n    }\n\n    if (this.logFilters.has(id)) {\n      return this.getLogFilterChanges(id);\n    } else if (this.blockFilters.has(id)) {\n      return this.getBlockFilterChanges(id);\n    } else if (this.pendingTransactionFilters.has(id)) {\n      return this.getPendingTransactionFilterChanges(id);\n    }\n\n    return Promise.resolve(filterNotFoundError());\n  }\n\n  async getFilterLogs(filterId) {\n    const id = (0, util_1.intNumberFromHexString)(filterId);\n    const filter = this.logFilters.get(id);\n\n    if (!filter) {\n      return filterNotFoundError();\n    }\n\n    return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n      method: \"eth_getLogs\",\n      params: [paramFromFilter(filter)]\n    }));\n  }\n\n  makeFilterId() {\n    return (0, types_1.IntNumber)(++this.nextFilterId);\n  }\n\n  sendAsyncPromise(request) {\n    return new Promise((resolve, reject) => {\n      this.provider.sendAsync(request, (err, response) => {\n        if (err) {\n          return reject(err);\n        }\n\n        if (Array.isArray(response) || response == null) {\n          return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n        }\n\n        resolve(response);\n      });\n    });\n  }\n\n  deleteFilter(id) {\n    console.log(`Deleting filter (${id})`);\n    this.logFilters.delete(id);\n    this.blockFilters.delete(id);\n    this.pendingTransactionFilters.delete(id);\n    this.cursors.delete(id);\n    this.timeouts.delete(id);\n  }\n\n  async getLogFilterChanges(id) {\n    const filter = this.logFilters.get(id);\n    const cursorPosition = this.cursors.get(id);\n\n    if (!cursorPosition || !filter) {\n      return filterNotFoundError();\n    }\n\n    const currentBlockHeight = await this.getCurrentBlockHeight();\n    const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n\n    if (cursorPosition > currentBlockHeight) {\n      return emptyResult();\n    }\n\n    if (cursorPosition > filter.toBlock) {\n      return emptyResult();\n    }\n\n    console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n    const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n      method: \"eth_getLogs\",\n      params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n        fromBlock: cursorPosition,\n        toBlock\n      }))]\n    }));\n\n    if (Array.isArray(response.result)) {\n      const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n      const highestBlock = Math.max(...blocks);\n\n      if (highestBlock && highestBlock > cursorPosition) {\n        const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n      }\n    }\n\n    return response;\n  }\n\n  async getBlockFilterChanges(id) {\n    const cursorPosition = this.cursors.get(id);\n\n    if (!cursorPosition) {\n      return filterNotFoundError();\n    }\n\n    const currentBlockHeight = await this.getCurrentBlockHeight();\n\n    if (cursorPosition > currentBlockHeight) {\n      return emptyResult();\n    }\n\n    console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n    const blocks = (await Promise.all( // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash); // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n\n    const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n    console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n    this.cursors.set(id, newCursorPosition);\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n      result: blocks\n    });\n  }\n\n  async getPendingTransactionFilterChanges(_id) {\n    // pending transaction filters are not supported\n    return Promise.resolve(emptyResult());\n  }\n\n  async setInitialCursorPosition(id, startBlock) {\n    const currentBlockHeight = await this.getCurrentBlockHeight();\n    const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n    this.cursors.set(id, initialCursorPosition);\n    return initialCursorPosition;\n  }\n\n  setFilterTimeout(id) {\n    const existing = this.timeouts.get(id);\n\n    if (existing) {\n      window.clearTimeout(existing);\n    }\n\n    const timeout = window.setTimeout(() => {\n      console.log(`Filter (${id}) timed out`);\n      this.deleteFilter(id);\n    }, TIMEOUT);\n    this.timeouts.set(id, timeout);\n  }\n\n  async getCurrentBlockHeight() {\n    const {\n      result\n    } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n      method: \"eth_blockNumber\",\n      params: []\n    }));\n    return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n  }\n\n  async getBlockHashByNumber(blockNumber) {\n    const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n      method: \"eth_getBlockByNumber\",\n      params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false]\n    }));\n\n    if (response.result && typeof response.result.hash === \"string\") {\n      return (0, util_1.ensureHexString)(response.result.hash);\n    }\n\n    return null;\n  }\n\n}\n\nexports.FilterPolyfill = FilterPolyfill;\n\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\n\nexports.filterFromParam = filterFromParam;\n\nfunction paramFromFilter(filter) {\n  const param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n\n  return param;\n}\n\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return (0, types_1.IntNumber)(0);\n  } else if ((0, util_1.isHexString)(value)) {\n    return (0, util_1.intNumberFromHexString)(value);\n  }\n\n  throw new Error(`Invalid block option: ${String(value)}`);\n}\n\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n\n  return (0, util_1.hexStringFromIntNumber)(value);\n}\n\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\n\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","require","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","constructor","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","newFilter","param","filter","makeFilterId","cursor","setInitialCursorPosition","fromBlock","console","log","set","setFilterTimeout","hexStringFromIntNumber","newBlockFilter","add","newPendingTransactionFilter","uninstallFilter","filterId","intNumberFromHexString","deleteFilter","getFilterChanges","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","getFilterLogs","get","sendAsyncPromise","assign","method","params","paramFromFilter","request","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","cursorPosition","currentBlockHeight","getCurrentBlockHeight","toBlock","emptyResult","result","blocks","map","blockNumber","highestBlock","Math","max","newCursorPosition","all","range","i","getBlockHashByNumber","hash","length","_id","startBlock","initialCursorPosition","existing","window","clearTimeout","timeout","setTimeout","ensureHexString","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","String","error","code","message"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@coinbase/wallet-sdk/dist/provider/FilterPolyfill.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0,\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = (0, types_1.IntNumber)(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    uninstallFilter(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock })),\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash);\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return (0, util_1.ensureHexString)(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || [],\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics,\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return (0, types_1.IntNumber)(0);\n    }\n    else if ((0, util_1.isHexString)(value)) {\n        return (0, util_1.intNumberFromHexString)(value);\n    }\n    throw new Error(`Invalid block option: ${String(value)}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}