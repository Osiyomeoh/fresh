{"ast":null,"code":"import { AppMetadata } from '../model/app-metadata';\nimport { SlashauthEvent } from '../model/event';\nimport { SlashauthFile } from '../model/file';\nimport { User } from '../model/user';\nexport class API {\n  constructor(config, accessToken) {\n    this.config = config;\n    this._config = void 0;\n    this._accessToken = void 0;\n    this._config = config;\n    this._accessToken = accessToken;\n  }\n\n  async getAppMetadata() {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/metadata', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      console.error('Failed to fetch app');\n      return null;\n    }\n\n    const elem = await response.json();\n    return new AppMetadata(elem.name, elem.description);\n  }\n\n  async getMe() {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/me', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to add event');\n    }\n\n    const elem = await response.json();\n    return new User(elem.address, elem.nickname, elem.roles, elem.dateTime);\n  }\n\n  async patchMe(nickname) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/me', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        nickname\n      })\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to add event');\n    }\n\n    const elem = await response.json();\n    return new User(elem.address, elem.nickname, elem.roles, elem.dateTime);\n  }\n\n  async addEvent(event) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/events', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'POST',\n      body: JSON.stringify(event.toJSONBlob())\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to add event');\n    }\n\n    return event;\n  }\n\n  async mintToken(roleName) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/tokens', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        roleLevel: roleName\n      })\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to mint token');\n    }\n\n    const elem = await response.json();\n    return elem;\n  }\n\n  async getEvents() {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/events', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      console.error('Failed to get events');\n      return [];\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    const data = (await response.json()).map(elem => {\n      return new SlashauthEvent(elem.name, elem.description, elem.link, elem.dateTime);\n    });\n    return data;\n  }\n\n  async getUsers() {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/users', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      console.error('Failed to get users');\n      return [];\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    const data = (await response.json()).map(elem => {\n      return new User(elem.address, elem.nickname, elem.roles, elem.dateTime);\n    });\n    return data;\n  } // TODO: Add paging parameters.\n\n\n  async listFiles() {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/files', {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      console.error('Failed to index files');\n      return [];\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    const data = (await response.json()).data.map(elem => {\n      return new SlashauthFile(elem);\n    });\n    return data;\n  }\n\n  async getFile(fileID) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + '/files/' + fileID, {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      console.error('Failed to get file');\n      return null;\n    }\n\n    const elem = await response.json();\n    return new SlashauthFile(elem.data);\n  }\n\n  async getPresignedURLForFile(fileID) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + `/files/${fileID}/url`, {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'GET'\n    });\n\n    if (response.status !== 200) {\n      console.error('Failed to get url for file');\n      return null;\n    }\n\n    const elem = await response.json();\n    return elem.data.url;\n  }\n\n  async createFile(input) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const data = new FormData();\n    Object.keys(input).forEach(key => {\n      // roles_required is an array and needs to be stringified\n      if (key === 'roles_required') {\n        data.append(key, JSON.stringify(input[key]));\n      } else {\n        data.append(key, input[key]);\n      }\n    });\n    const response = await fetch(this._config.restDomain + '/files', {\n      headers: {\n        'X-Slashauth-Client': this._config.appClientID,\n        ...authHeader\n      },\n      method: 'POST',\n      body: data\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to patch file');\n    }\n\n    const elem = await response.json();\n    return new SlashauthFile(elem.data);\n  }\n\n  async patchFile(fileID, _ref) {\n    let {\n      name,\n      rolesRequired,\n      description\n    } = _ref;\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + `/files/${fileID}`, {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        name,\n        roles_required: rolesRequired,\n        description\n      })\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to patch file');\n    }\n\n    const elem = await response.json();\n    return new SlashauthFile(elem.data);\n  }\n\n  async deleteFile(fileID) {\n    const authHeader = {};\n\n    if (this._accessToken) {\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\n    }\n\n    const response = await fetch(this._config.restDomain + `/files/${fileID}`, {\n      headers: { ...this.defaultHeaders(),\n        ...authHeader\n      },\n      method: 'DELETE'\n    });\n\n    if (response.status > 299 || response.status < 200) {\n      console.error('Failed to delete file');\n    }\n\n    const elem = await response.json();\n    return new SlashauthFile(elem.data);\n  }\n\n  defaultHeaders() {\n    return {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'X-Slashauth-Client': this._config.appClientID\n    };\n  }\n\n}","map":{"version":3,"names":["AppMetadata","SlashauthEvent","SlashauthFile","User","API","constructor","config","accessToken","_config","_accessToken","getAppMetadata","authHeader","response","fetch","restDomain","headers","defaultHeaders","method","status","console","error","elem","json","name","description","getMe","address","nickname","roles","dateTime","patchMe","body","JSON","stringify","addEvent","event","toJSONBlob","mintToken","roleName","roleLevel","getEvents","data","map","link","getUsers","listFiles","getFile","fileID","getPresignedURLForFile","url","createFile","input","FormData","Object","keys","forEach","key","append","appClientID","patchFile","rolesRequired","roles_required","deleteFile","Accept"],"sources":["C:/Users/USER/Documents/demo-react/src/api/index.ts"],"sourcesContent":["import { Config } from '../config';\r\nimport { AppMetadata } from '../model/app-metadata';\r\nimport { SlashauthEvent } from '../model/event';\r\nimport { SlashauthFile, FileConstructorProps } from '../model/file';\r\nimport { User } from '../model/user';\r\n\r\ntype MintResponse = {\r\n  success: boolean;\r\n  txHash: string;\r\n  scanUrl: string;\r\n};\r\n\r\nexport type CreateFileInput = {\r\n  name: string;\r\n  roles_required: string[];\r\n  description?: string;\r\n  file: File;\r\n};\r\n\r\nexport type PatchFileInput = {\r\n  name?: string;\r\n  rolesRequired?: string[];\r\n  description?: string;\r\n};\r\n\r\nexport class API {\r\n  private readonly _config: Config;\r\n  private readonly _accessToken: string | null;\r\n\r\n  constructor(private readonly config: Config, accessToken: string) {\r\n    this._config = config;\r\n    this._accessToken = accessToken;\r\n  }\r\n\r\n  public async getAppMetadata(): Promise<AppMetadata | null> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/metadata', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'GET',\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.error('Failed to fetch app');\r\n      return null;\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new AppMetadata(elem.name, elem.description);\r\n  }\r\n\r\n  public async getMe(): Promise<User> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/me', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'GET',\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to add event');\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new User(elem.address, elem.nickname, elem.roles, elem.dateTime);\r\n  }\r\n\r\n  public async patchMe(nickname: string): Promise<User> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/me', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'PATCH',\r\n      body: JSON.stringify({ nickname }),\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to add event');\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new User(elem.address, elem.nickname, elem.roles, elem.dateTime);\r\n  }\r\n\r\n  public async addEvent(event: SlashauthEvent): Promise<SlashauthEvent> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/events', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(event.toJSONBlob()),\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to add event');\r\n    }\r\n\r\n    return event;\r\n  }\r\n\r\n  public async mintToken(roleName: string): Promise<MintResponse> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/tokens', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        roleLevel: roleName,\r\n      }),\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to mint token');\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return elem;\r\n  }\r\n\r\n  public async getEvents(): Promise<SlashauthEvent[]> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/events', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'GET',\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.error('Failed to get events');\r\n      return [] as SlashauthEvent[];\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const data = (await response.json()).map((elem: Record<string, any>) => {\r\n      return new SlashauthEvent(\r\n        elem.name,\r\n        elem.description,\r\n        elem.link,\r\n        elem.dateTime\r\n      );\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  public async getUsers(): Promise<User[]> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/users', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'GET',\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.error('Failed to get users');\r\n      return [] as User[];\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const data = (await response.json()).map((elem: Record<string, any>) => {\r\n      return new User(elem.address, elem.nickname, elem.roles, elem.dateTime);\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  // TODO: Add paging parameters.\r\n  public async listFiles(): Promise<SlashauthFile[]> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/files', {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'GET',\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.error('Failed to index files');\r\n      return [] as SlashauthFile[];\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const data = (await response.json()).data.map(\r\n      (elem: Record<string, unknown>) => {\r\n        return new SlashauthFile(elem as FileConstructorProps);\r\n      }\r\n    );\r\n\r\n    return data;\r\n  }\r\n\r\n  public async getFile(fileID: string): Promise<SlashauthFile> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + '/files/' + fileID, {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'GET',\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.error('Failed to get file');\r\n      return null;\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new SlashauthFile(elem.data);\r\n  }\r\n\r\n  public async getPresignedURLForFile(fileID: string): Promise<string> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(\r\n      this._config.restDomain + `/files/${fileID}/url`,\r\n      {\r\n        headers: {\r\n          ...this.defaultHeaders(),\r\n          ...authHeader,\r\n        },\r\n        method: 'GET',\r\n      }\r\n    );\r\n\r\n    if (response.status !== 200) {\r\n      console.error('Failed to get url for file');\r\n      return null;\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return elem.data.url;\r\n  }\r\n\r\n  public async createFile(input: CreateFileInput): Promise<SlashauthFile> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const data = new FormData();\r\n    Object.keys(input).forEach((key) => {\r\n      // roles_required is an array and needs to be stringified\r\n      if (key === 'roles_required') {\r\n        data.append(key, JSON.stringify(input[key]));\r\n      } else {\r\n        data.append(key, input[key]);\r\n      }\r\n    });\r\n\r\n    const response = await fetch(this._config.restDomain + '/files', {\r\n      headers: {\r\n        'X-Slashauth-Client': this._config.appClientID,\r\n        ...authHeader,\r\n      },\r\n      method: 'POST',\r\n      body: data,\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to patch file');\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new SlashauthFile(elem.data);\r\n  }\r\n\r\n  public async patchFile(\r\n    fileID: string,\r\n    { name, rolesRequired, description }: PatchFileInput\r\n  ): Promise<SlashauthFile> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + `/files/${fileID}`, {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        name,\r\n        roles_required: rolesRequired,\r\n        description,\r\n      }),\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to patch file');\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new SlashauthFile(elem.data);\r\n  }\r\n\r\n  public async deleteFile(fileID: string): Promise<SlashauthFile> {\r\n    const authHeader = {};\r\n    if (this._accessToken) {\r\n      authHeader['Authorization'] = `Bearer ${this._accessToken}`;\r\n    }\r\n    const response = await fetch(this._config.restDomain + `/files/${fileID}`, {\r\n      headers: {\r\n        ...this.defaultHeaders(),\r\n        ...authHeader,\r\n      },\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.status > 299 || response.status < 200) {\r\n      console.error('Failed to delete file');\r\n    }\r\n\r\n    const elem = await response.json();\r\n    return new SlashauthFile(elem.data);\r\n  }\r\n\r\n  private defaultHeaders(): Record<string, string> {\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      'X-Slashauth-Client': this._config.appClientID,\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}