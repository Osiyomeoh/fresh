{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst events_1 = require(\"events\");\n\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone(arr) {\n  const n = arr.length;\n  const copy = new Array(n);\n\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nclass SafeEventEmitter extends events_1.EventEmitter {\n  emit(type) {\n    let doError = type === 'error';\n    const events = this._events;\n\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    } // If there is no 'error' event listener then throw.\n\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (doError) {\n      let er;\n\n      if (args.length > 0) {\n        [er] = args;\n      }\n\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      } // At least give some kind of context to the user\n\n\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n      err.context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === 'function') {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n\n}\n\nexports.default = SafeEventEmitter;","map":{"version":3,"mappings":";;;;;;AAAA;;AAOA,SAASA,SAAT,CAAwCC,OAAxC,EAAgFC,OAAhF,EAA4FC,IAA5F,EAAmG;EACjG,IAAI;IACFC,OAAO,CAACC,KAAR,CAAcJ,OAAd,EAAuBC,OAAvB,EAAgCC,IAAhC;EACD,CAFD,CAEE,OAAOG,GAAP,EAAY;IACZ;IACAC,UAAU,CAAC,MAAK;MACd,MAAMD,GAAN;IACD,CAFS,CAAV;EAGD;AACF;;AAED,SAASE,UAAT,CAAwBC,GAAxB,EAAgC;EAC9B,MAAMC,CAAC,GAAGD,GAAG,CAACE,MAAd;EACA,MAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CAAb;;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAApB,EAAuBI,CAAC,IAAI,CAA5B,EAA+B;IAC7BF,IAAI,CAACE,CAAD,CAAJ,GAAUL,GAAG,CAACK,CAAD,CAAb;EACD;;EACD,OAAOF,IAAP;AACD;;AAED,MAAqBG,gBAArB,SAA8CC,qBAA9C,CAA0D;EACxDC,IAAI,CAAEC,IAAF,EAA8B;IAChC,IAAIC,OAAO,GAAGD,IAAI,KAAK,OAAvB;IAEA,MAAME,MAAM,GAAc,KAAaC,OAAvC;;IACA,IAAID,MAAM,KAAKE,SAAf,EAA0B;MACxBH,OAAO,GAAGA,OAAO,IAAIC,MAAM,CAACG,KAAP,KAAiBD,SAAtC;IACD,CAFD,MAEO,IAAI,CAACH,OAAL,EAAc;MACnB,OAAO,KAAP;IACD,CAR+B,CAUhC;;;IAVgC,kCAAXhB,IAAW;MAAXA,IAAW;IAAA;;IAWhC,IAAIgB,OAAJ,EAAa;MACX,IAAIK,EAAJ;;MACA,IAAIrB,IAAI,CAACQ,MAAL,GAAc,CAAlB,EAAqB;QACnB,CAACa,EAAD,IAAOrB,IAAP;MACD;;MACD,IAAIqB,EAAE,YAAYC,KAAlB,EAAyB;QACvB;QACA;QACA,MAAMD,EAAN,CAHuB,CAGb;MACX,CATU,CAUX;;;MACA,MAAMlB,GAAG,GAAG,IAAImB,KAAJ,CAAU,mBAAmBD,EAAE,GAAG,KAAKA,EAAE,CAACE,OAAO,GAAlB,GAAwB,EAAE,EAAzD,CAAZ;MACCpB,GAAW,CAACJ,OAAZ,GAAsBsB,EAAtB;MACD,MAAMlB,GAAN,CAbW,CAaA;IACZ;;IAED,MAAML,OAAO,GAAGmB,MAAM,CAACF,IAAD,CAAtB;;IAEA,IAAIjB,OAAO,KAAKqB,SAAhB,EAA2B;MACzB,OAAO,KAAP;IACD;;IAED,IAAI,OAAOrB,OAAP,KAAmB,UAAvB,EAAmC;MACjCD,SAAS,CAACC,OAAD,EAAU,IAAV,EAAgBE,IAAhB,CAAT;IACD,CAFD,MAEO;MACL,MAAMwB,GAAG,GAAG1B,OAAO,CAACU,MAApB;MACA,MAAMiB,SAAS,GAAGpB,UAAU,CAACP,OAAD,CAA5B;;MACA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,GAApB,EAAyBb,CAAC,IAAI,CAA9B,EAAiC;QAC/Bd,SAAS,CAAC4B,SAAS,CAACd,CAAD,CAAV,EAAe,IAAf,EAAqBX,IAArB,CAAT;MACD;IACF;;IAED,OAAO,IAAP;EACD;;AA7CuD;;AAA1D0B","names":["safeApply","handler","context","args","Reflect","apply","err","setTimeout","arrayClone","arr","n","length","copy","Array","i","SafeEventEmitter","events_1","emit","type","doError","events","_events","undefined","error","er","Error","message","len","listeners","exports"],"sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}