{"ast":null,"code":"\"use strict\"; // Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar binary_1 = require(\"@stablelib/binary\");\n\nvar wipe_1 = require(\"@stablelib/wipe\");\n\nexports.DIGEST_LENGTH = 64;\nexports.BLOCK_SIZE = 128;\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\n\nvar SHA512 =\n/** @class */\nfunction () {\n  function SHA512() {\n    /** Length of hash output */\n    this.digestLength = exports.DIGEST_LENGTH;\n    /** Block size */\n\n    this.blockSize = exports.BLOCK_SIZE; // Note: Int32Array is used instead of Uint32Array for performance reasons.\n\n    this._stateHi = new Int32Array(8); // hash state, high bytes\n\n    this._stateLo = new Int32Array(8); // hash state, low bytes\n\n    this._tempHi = new Int32Array(16); // temporary state, high bytes\n\n    this._tempLo = new Int32Array(16); // temporary state, low bytes\n\n    this._buffer = new Uint8Array(256); // buffer for data to hash\n\n    this._bufferLength = 0; // number of bytes in buffer\n\n    this._bytesHashed = 0; // number of total bytes hashed\n\n    this._finished = false; // indicates whether the hash was finalized\n\n    this.reset();\n  }\n\n  SHA512.prototype._initState = function () {\n    this._stateHi[0] = 0x6a09e667;\n    this._stateHi[1] = 0xbb67ae85;\n    this._stateHi[2] = 0x3c6ef372;\n    this._stateHi[3] = 0xa54ff53a;\n    this._stateHi[4] = 0x510e527f;\n    this._stateHi[5] = 0x9b05688c;\n    this._stateHi[6] = 0x1f83d9ab;\n    this._stateHi[7] = 0x5be0cd19;\n    this._stateLo[0] = 0xf3bcc908;\n    this._stateLo[1] = 0x84caa73b;\n    this._stateLo[2] = 0xfe94f82b;\n    this._stateLo[3] = 0x5f1d36f1;\n    this._stateLo[4] = 0xade682d1;\n    this._stateLo[5] = 0x2b3e6c1f;\n    this._stateLo[6] = 0xfb41bd6b;\n    this._stateLo[7] = 0x137e2179;\n  };\n  /**\n   * Resets hash state making it possible\n   * to re-use this instance to hash other data.\n   */\n\n\n  SHA512.prototype.reset = function () {\n    this._initState();\n\n    this._bufferLength = 0;\n    this._bytesHashed = 0;\n    this._finished = false;\n    return this;\n  };\n  /**\n   * Cleans internal buffers and resets hash state.\n   */\n\n\n  SHA512.prototype.clean = function () {\n    wipe_1.wipe(this._buffer);\n    wipe_1.wipe(this._tempHi);\n    wipe_1.wipe(this._tempLo);\n    this.reset();\n  };\n  /**\n   * Updates hash state with the given data.\n   *\n   * Throws error when trying to update already finalized hash:\n   * instance must be reset to update it again.\n   */\n\n\n  SHA512.prototype.update = function (data, dataLength) {\n    if (dataLength === void 0) {\n      dataLength = data.length;\n    }\n\n    if (this._finished) {\n      throw new Error(\"SHA512: can't update because hash was finished.\");\n    }\n\n    var dataPos = 0;\n    this._bytesHashed += dataLength;\n\n    if (this._bufferLength > 0) {\n      while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {\n        this._buffer[this._bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n\n      if (this._bufferLength === this.blockSize) {\n        hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);\n        this._bufferLength = 0;\n      }\n    }\n\n    if (dataLength >= this.blockSize) {\n      dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);\n      dataLength %= this.blockSize;\n    }\n\n    while (dataLength > 0) {\n      this._buffer[this._bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n\n    return this;\n  };\n  /**\n   * Finalizes hash state and puts hash into out.\n   * If hash was already finalized, puts the same value.\n   */\n\n\n  SHA512.prototype.finish = function (out) {\n    if (!this._finished) {\n      var bytesHashed = this._bytesHashed;\n      var left = this._bufferLength;\n      var bitLenHi = bytesHashed / 0x20000000 | 0;\n      var bitLenLo = bytesHashed << 3;\n      var padLength = bytesHashed % 128 < 112 ? 128 : 256;\n      this._buffer[left] = 0x80;\n\n      for (var i = left + 1; i < padLength - 8; i++) {\n        this._buffer[i] = 0;\n      }\n\n      binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n      binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n      hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n      this._finished = true;\n    }\n\n    for (var i = 0; i < this.digestLength / 8; i++) {\n      binary_1.writeUint32BE(this._stateHi[i], out, i * 8);\n      binary_1.writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n    }\n\n    return this;\n  };\n  /**\n   * Returns the final hash digest.\n   */\n\n\n  SHA512.prototype.digest = function () {\n    var out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  };\n  /**\n   * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n   * used with restoreState(). Only chain value is saved, not buffers or\n   * other state variables.\n   */\n\n\n  SHA512.prototype.saveState = function () {\n    if (this._finished) {\n      throw new Error(\"SHA256: cannot save finished state\");\n    }\n\n    return {\n      stateHi: new Int32Array(this._stateHi),\n      stateLo: new Int32Array(this._stateLo),\n      buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n      bufferLength: this._bufferLength,\n      bytesHashed: this._bytesHashed\n    };\n  };\n  /**\n   * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n   * saveState() and sets bytesHashed to the given value.\n   */\n\n\n  SHA512.prototype.restoreState = function (savedState) {\n    this._stateHi.set(savedState.stateHi);\n\n    this._stateLo.set(savedState.stateLo);\n\n    this._bufferLength = savedState.bufferLength;\n\n    if (savedState.buffer) {\n      this._buffer.set(savedState.buffer);\n    }\n\n    this._bytesHashed = savedState.bytesHashed;\n    this._finished = false;\n    return this;\n  };\n  /**\n   * Cleans state returned by saveState().\n   */\n\n\n  SHA512.prototype.cleanSavedState = function (savedState) {\n    wipe_1.wipe(savedState.stateHi);\n    wipe_1.wipe(savedState.stateLo);\n\n    if (savedState.buffer) {\n      wipe_1.wipe(savedState.buffer);\n    }\n\n    savedState.bufferLength = 0;\n    savedState.bytesHashed = 0;\n  };\n\n  return SHA512;\n}();\n\nexports.SHA512 = SHA512; // Constants\n\nvar K = new Int32Array([0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817]);\n\nfunction hashBlocks(wh, wl, hh, hl, m, pos, len) {\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n  var h, l;\n  var th, tl;\n  var a, b, c, d;\n\n  while (len >= 128) {\n    for (var i = 0; i < 16; i++) {\n      var j = 8 * i + pos;\n      wh[i] = binary_1.readUint32BE(m, j);\n      wl[i] = binary_1.readUint32BE(m, j + 4);\n    }\n\n    for (var i = 0; i < 80; i++) {\n      var bh0 = ah0;\n      var bh1 = ah1;\n      var bh2 = ah2;\n      var bh3 = ah3;\n      var bh4 = ah4;\n      var bh5 = ah5;\n      var bh6 = ah6;\n      var bh7 = ah7;\n      var bl0 = al0;\n      var bl1 = al1;\n      var bl2 = al2;\n      var bl3 = al3;\n      var bl4 = al4;\n      var bl5 = al5;\n      var bl6 = al6;\n      var bl7 = al7; // add\n\n      h = ah7;\n      l = al7;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16; // Sigma1\n\n      h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));\n      l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16; // Ch\n\n      h = ah4 & ah5 ^ ~ah4 & ah6;\n      l = al4 & al5 ^ ~al4 & al6;\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16; // K\n\n      h = K[i * 2];\n      l = K[i * 2 + 1];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16; // w\n\n      h = wh[i % 16];\n      l = wl[i % 16];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16; // add\n\n      h = th;\n      l = tl;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16; // Sigma0\n\n      h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));\n      l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16; // Maj\n\n      h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;\n      l = al0 & al1 ^ al0 & al2 ^ al1 & al2;\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      bh7 = c & 0xffff | d << 16;\n      bl7 = a & 0xffff | b << 16; // add\n\n      h = bh3;\n      l = bl3;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = th;\n      l = tl;\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      bh3 = c & 0xffff | d << 16;\n      bl3 = a & 0xffff | b << 16;\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i % 16 === 15) {\n        for (var j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n          a = l & 0xffff;\n          b = l >>> 16;\n          c = h & 0xffff;\n          d = h >>> 16;\n          h = wh[(j + 9) % 16];\n          l = wl[(j + 9) % 16];\n          a += l & 0xffff;\n          b += l >>> 16;\n          c += h & 0xffff;\n          d += h >>> 16; // sigma0\n\n          th = wh[(j + 1) % 16];\n          tl = wl[(j + 1) % 16];\n          h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;\n          l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);\n          a += l & 0xffff;\n          b += l >>> 16;\n          c += h & 0xffff;\n          d += h >>> 16; // sigma1\n\n          th = wh[(j + 14) % 16];\n          tl = wl[(j + 14) % 16];\n          h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;\n          l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);\n          a += l & 0xffff;\n          b += l >>> 16;\n          c += h & 0xffff;\n          d += h >>> 16;\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n          wh[j] = c & 0xffff | d << 16;\n          wl[j] = a & 0xffff | b << 16;\n        }\n      }\n    } // add\n\n\n    h = ah0;\n    l = al0;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[0];\n    l = hl[0];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[0] = ah0 = c & 0xffff | d << 16;\n    hl[0] = al0 = a & 0xffff | b << 16;\n    h = ah1;\n    l = al1;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[1];\n    l = hl[1];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[1] = ah1 = c & 0xffff | d << 16;\n    hl[1] = al1 = a & 0xffff | b << 16;\n    h = ah2;\n    l = al2;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[2];\n    l = hl[2];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[2] = ah2 = c & 0xffff | d << 16;\n    hl[2] = al2 = a & 0xffff | b << 16;\n    h = ah3;\n    l = al3;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[3];\n    l = hl[3];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[3] = ah3 = c & 0xffff | d << 16;\n    hl[3] = al3 = a & 0xffff | b << 16;\n    h = ah4;\n    l = al4;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[4];\n    l = hl[4];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[4] = ah4 = c & 0xffff | d << 16;\n    hl[4] = al4 = a & 0xffff | b << 16;\n    h = ah5;\n    l = al5;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[5];\n    l = hl[5];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[5] = ah5 = c & 0xffff | d << 16;\n    hl[5] = al5 = a & 0xffff | b << 16;\n    h = ah6;\n    l = al6;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[6];\n    l = hl[6];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[6] = ah6 = c & 0xffff | d << 16;\n    hl[6] = al6 = a & 0xffff | b << 16;\n    h = ah7;\n    l = al7;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[7];\n    l = hl[7];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[7] = ah7 = c & 0xffff | d << 16;\n    hl[7] = al7 = a & 0xffff | b << 16;\n    pos += 128;\n    len -= 128;\n  }\n\n  return pos;\n}\n\nfunction hash(data) {\n  var h = new SHA512();\n  h.update(data);\n  var digest = h.digest();\n  h.clean();\n  return digest;\n}\n\nexports.hash = hash;","map":{"version":3,"mappings":"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","names":["exports","Int32Array","Uint8Array","reset","SHA512","_stateHi","_stateLo","_initState","_bufferLength","_bytesHashed","_finished","wipe_1","_buffer","_tempHi","_tempLo","data","dataLength","length","Error","dataPos","blockSize","hashBlocks","out","bytesHashed","left","bitLenHi","bitLenLo","padLength","i","binary_1","digestLength","finish","stateHi","stateLo","buffer","undefined","bufferLength","savedState","set","K","wh","wl","hh","hl","m","pos","len","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","h","l","th","tl","a","b","c","d","j","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","hash","update","digest","clean"],"sources":["C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@stablelib\\sha512\\sha512.ts"],"sourcesContent":["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha512 implements SHA-2-512 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 64;\nexport const BLOCK_SIZE = 128;\n\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\nexport class SHA512 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _stateHi = new Int32Array(8); // hash state, high bytes\n    protected _stateLo = new Int32Array(8); // hash state, low bytes\n    private _tempHi = new Int32Array(16); // temporary state, high bytes\n    private _tempLo = new Int32Array(16); // temporary state, low bytes\n    private _buffer = new Uint8Array(256); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._stateHi[0] = 0x6a09e667;\n        this._stateHi[1] = 0xbb67ae85;\n        this._stateHi[2] = 0x3c6ef372;\n        this._stateHi[3] = 0xa54ff53a;\n        this._stateHi[4] = 0x510e527f;\n        this._stateHi[5] = 0x9b05688c;\n        this._stateHi[6] = 0x1f83d9ab;\n        this._stateHi[7] = 0x5be0cd19;\n\n        this._stateLo[0] = 0xf3bcc908;\n        this._stateLo[1] = 0x84caa73b;\n        this._stateLo[2] = 0xfe94f82b;\n        this._stateLo[3] = 0x5f1d36f1;\n        this._stateLo[4] = 0xade682d1;\n        this._stateLo[5] = 0x2b3e6c1f;\n        this._stateLo[6] = 0xfb41bd6b;\n        this._stateLo[7] = 0x137e2179;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._tempHi);\n        wipe(this._tempLo);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA512: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < BLOCK_SIZE && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\n                    this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\n                data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 128 < 112) ? 128 : 256;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 8; i++) {\n            writeUint32BE(this._stateHi[i], out, i * 8);\n            writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n     * used with restoreState(). Only chain value is saved, not buffers or\n     * other state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            stateHi: new Int32Array(this._stateHi),\n            stateLo: new Int32Array(this._stateLo),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n     * saveState() and sets bytesHashed to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._stateHi.set(savedState.stateHi);\n        this._stateLo.set(savedState.stateLo);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.stateHi);\n        wipe(savedState.stateLo);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    stateHi: Int32Array;\n    stateLo: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\n\n\nfunction hashBlocks(wh: Int32Array, wl: Int32Array, hh: Int32Array, hl: Int32Array,\n    m: Uint8Array, pos: number, len: number): number {\n\n    let ah0 = hh[0],\n        ah1 = hh[1],\n        ah2 = hh[2],\n        ah3 = hh[3],\n        ah4 = hh[4],\n        ah5 = hh[5],\n        ah6 = hh[6],\n        ah7 = hh[7],\n\n        al0 = hl[0],\n        al1 = hl[1],\n        al2 = hl[2],\n        al3 = hl[3],\n        al4 = hl[4],\n        al5 = hl[5],\n        al6 = hl[6],\n        al7 = hl[7];\n\n    let h: number, l: number;\n    let th: number, tl: number;\n    let a: number, b: number, c: number, d: number;\n\n    while (len >= 128) {\n        for (let i = 0; i < 16; i++) {\n            const j = 8 * i + pos;\n            wh[i] = readUint32BE(m, j);\n            wl[i] = readUint32BE(m, j + 4);\n        }\n        for (let i = 0; i < 80; i++) {\n            let bh0 = ah0;\n            let bh1 = ah1;\n            let bh2 = ah2;\n            let bh3 = ah3;\n            let bh4 = ah4;\n            let bh5 = ah5;\n            let bh6 = ah6;\n            let bh7 = ah7;\n\n            let bl0 = al0;\n            let bl1 = al1;\n            let bl2 = al2;\n            let bl3 = al3;\n            let bl4 = al4;\n            let bl5 = al5;\n            let bl6 = al6;\n            let bl7 = al7;\n\n            // add\n            h = ah7;\n            l = al7;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            // Sigma1\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            th = c & 0xffff | d << 16;\n            tl = a & 0xffff | b << 16;\n\n            // add\n            h = th;\n            l = tl;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            // Sigma0\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n\n            // add\n            h = bh3;\n            l = bl3;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            h = th;\n            l = tl;\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n\n            if (i % 16 === 15) {\n                for (let j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n\n                    a = l & 0xffff; b = l >>> 16;\n                    c = h & 0xffff; d = h >>> 16;\n\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\n                        (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n\n        // add\n        h = ah0;\n        l = al0;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[0];\n        l = hl[0];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n        h = ah1;\n        l = al1;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[1];\n        l = hl[1];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n        h = ah2;\n        l = al2;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[2];\n        l = hl[2];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n        h = ah3;\n        l = al3;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[3];\n        l = hl[3];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n        h = ah4;\n        l = al4;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[4];\n        l = hl[4];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n        h = ah5;\n        l = al5;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[5];\n        l = hl[5];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n        h = ah6;\n        l = al6;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[6];\n        l = hl[6];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n        h = ah7;\n        l = al7;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[7];\n        l = hl[7];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n        pos += 128;\n        len -= 128;\n    }\n\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA512();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n"]},"metadata":{},"sourceType":"script"}