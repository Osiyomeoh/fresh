{"ast":null,"code":"import { allocUnsafe } from './alloc.js';\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n\n  const result = allocUnsafe(a.length);\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n\n  return result;\n}","map":{"version":3,"names":["allocUnsafe","xor","a","b","length","Error","result","i"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/uint8arrays/esm/src/xor.js"],"sourcesContent":["import { allocUnsafe } from './alloc.js';\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAO,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;EACxB,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;IACzB,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;EACD;;EACD,MAAMC,MAAM,GAAGN,WAAW,CAACE,CAAC,CAACE,MAAH,CAA1B;;EACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAAC,CAACE,MAAtB,EAA8BG,CAAC,EAA/B,EAAmC;IACjCD,MAAM,CAACC,CAAD,CAAN,GAAYL,CAAC,CAACK,CAAD,CAAD,GAAOJ,CAAC,CAACI,CAAD,CAApB;EACD;;EACD,OAAOD,MAAP;AACD"},"metadata":{},"sourceType":"module"}