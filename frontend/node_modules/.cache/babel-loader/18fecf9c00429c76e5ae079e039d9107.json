{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\demo-react\\\\src\\\\providers\\\\navigation-provider.tsx\",\n    _s = $RefreshSig$();\n\nimport { CalendarIcon, PaperAirplaneIcon, UserIcon } from '@heroicons/react/outline';\nimport { useMemo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { RoleNameAdmin, RoleNameMember } from '../constants';\nimport { NavigationContext } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let LeftBarID;\n\n(function (LeftBarID) {\n  LeftBarID[\"Home\"] = \"home\";\n  LeftBarID[\"Account\"] = \"account\";\n  LeftBarID[\"Events\"] = \"events\";\n  LeftBarID[\"Contact\"] = \"contact\";\n  LeftBarID[\"Admin\"] = \"admin\";\n})(LeftBarID || (LeftBarID = {}));\n\nconst items = [{\n  id: LeftBarID.Home,\n  name: 'Home',\n  pathname: '/',\n  icon: PaperAirplaneIcon\n}, {\n  id: LeftBarID.Account,\n  name: 'Data Room',\n  pathname: '/files',\n  roleRequired: RoleNameMember,\n  icon: UserIcon\n}, {\n  id: LeftBarID.Events,\n  name: 'Events',\n  pathname: '/events',\n  roleRequired: RoleNameMember,\n  icon: CalendarIcon\n}, {\n  id: LeftBarID.Contact,\n  name: 'Contact',\n  pathname: '/contact',\n  roleRequired: RoleNameMember,\n  icon: PaperAirplaneIcon\n}, {\n  id: LeftBarID.Admin,\n  name: 'Admin',\n  pathname: '/admin',\n  roleRequired: RoleNameAdmin,\n  icon: UserIcon\n}];\nexport const NavigationProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const location = useLocation();\n  const [showSignInButton, setShowSignInButton] = useState(true);\n  const selectedItem = useMemo(() => items.find(elem => location.pathname.toLowerCase() === elem.pathname || elem.alternatePathnames && elem.alternatePathnames.some(altPath => location.pathname.toLowerCase().startsWith(altPath))) || null, [location.pathname]);\n  const navigation = {\n    navigationItems: items.filter(val => !val.hidden),\n    selectedID: (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id) || null,\n    showSignInButton,\n    setShowSignInButton\n  };\n  return /*#__PURE__*/_jsxDEV(NavigationContext.Provider, {\n    value: navigation,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavigationProvider, \"DeJsR49wgyFVLTic/HsZvZhW3+4=\", false, function () {\n  return [useLocation];\n});\n\n_c = NavigationProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationProvider\");","map":{"version":3,"names":["CalendarIcon","PaperAirplaneIcon","UserIcon","useMemo","useState","useLocation","RoleNameAdmin","RoleNameMember","NavigationContext","LeftBarID","items","id","Home","name","pathname","icon","Account","roleRequired","Events","Contact","Admin","NavigationProvider","children","location","showSignInButton","setShowSignInButton","selectedItem","find","elem","toLowerCase","alternatePathnames","some","altPath","startsWith","navigation","navigationItems","filter","val","hidden","selectedID"],"sources":["C:/Users/USER/Documents/demo-react/src/providers/navigation-provider.tsx"],"sourcesContent":["import {\r\n  CalendarIcon,\r\n  PaperAirplaneIcon,\r\n  UserIcon,\r\n} from '@heroicons/react/outline';\r\nimport { useMemo, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { RoleNameAdmin, RoleNameMember } from '../constants';\r\nimport { NavigationContext } from '../context';\r\n\r\nexport enum LeftBarID {\r\n  Home = 'home',\r\n  Account = 'account',\r\n  Events = 'events',\r\n  Contact = 'contact',\r\n  Admin = 'admin',\r\n}\r\n\r\nexport type SidebarItem = {\r\n  hidden?: boolean;\r\n  newPage?: boolean;\r\n  id: string;\r\n  name: string;\r\n  pathname: string;\r\n  alternatePathnames?: string[];\r\n  roleRequired?: string;\r\n  icon: React.ElementType;\r\n};\r\n\r\nconst items: SidebarItem[] = [\r\n  {\r\n    id: LeftBarID.Home,\r\n    name: 'Home',\r\n    pathname: '/',\r\n    icon: PaperAirplaneIcon,\r\n  },\r\n  {\r\n    id: LeftBarID.Account,\r\n    name: 'Data Room',\r\n    pathname: '/files',\r\n    roleRequired: RoleNameMember,\r\n    icon: UserIcon,\r\n  },\r\n  {\r\n    id: LeftBarID.Events,\r\n    name: 'Events',\r\n    pathname: '/events',\r\n    roleRequired: RoleNameMember,\r\n    icon: CalendarIcon,\r\n  },\r\n  {\r\n    id: LeftBarID.Contact,\r\n    name: 'Contact',\r\n    pathname: '/contact',\r\n    roleRequired: RoleNameMember,\r\n    icon: PaperAirplaneIcon,\r\n  },\r\n  {\r\n    id: LeftBarID.Admin,\r\n    name: 'Admin',\r\n    pathname: '/admin',\r\n    roleRequired: RoleNameAdmin,\r\n    icon: UserIcon,\r\n  },\r\n];\r\n\r\nexport type NavigationState = {\r\n  navigationItems: SidebarItem[];\r\n  selectedID: string | null;\r\n  showSignInButton: boolean;\r\n  setShowSignInButton: (show: boolean) => void;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const NavigationProvider = ({ children }: Props) => {\r\n  const location = useLocation();\r\n  const [showSignInButton, setShowSignInButton] = useState(true);\r\n\r\n  const selectedItem = useMemo<SidebarItem | null>(\r\n    () =>\r\n      items.find(\r\n        (elem) =>\r\n          location.pathname.toLowerCase() === elem.pathname ||\r\n          (elem.alternatePathnames &&\r\n            elem.alternatePathnames.some((altPath) =>\r\n              location.pathname.toLowerCase().startsWith(altPath)\r\n            ))\r\n      ) || null,\r\n    [location.pathname]\r\n  );\r\n\r\n  const navigation = {\r\n    navigationItems: items.filter((val) => !val.hidden),\r\n    selectedID: selectedItem?.id || null,\r\n    showSignInButton,\r\n    setShowSignInButton,\r\n  };\r\n\r\n  return (\r\n    <NavigationContext.Provider value={navigation}>\r\n      {children}\r\n    </NavigationContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SACEA,YADF,EAEEC,iBAFF,EAGEC,QAHF,QAIO,0BAJP;AAKA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,cAA9C;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,WAAYC,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAmBZ,MAAMC,KAAoB,GAAG,CAC3B;EACEC,EAAE,EAAEF,SAAS,CAACG,IADhB;EAEEC,IAAI,EAAE,MAFR;EAGEC,QAAQ,EAAE,GAHZ;EAIEC,IAAI,EAAEd;AAJR,CAD2B,EAO3B;EACEU,EAAE,EAAEF,SAAS,CAACO,OADhB;EAEEH,IAAI,EAAE,WAFR;EAGEC,QAAQ,EAAE,QAHZ;EAIEG,YAAY,EAAEV,cAJhB;EAKEQ,IAAI,EAAEb;AALR,CAP2B,EAc3B;EACES,EAAE,EAAEF,SAAS,CAACS,MADhB;EAEEL,IAAI,EAAE,QAFR;EAGEC,QAAQ,EAAE,SAHZ;EAIEG,YAAY,EAAEV,cAJhB;EAKEQ,IAAI,EAAEf;AALR,CAd2B,EAqB3B;EACEW,EAAE,EAAEF,SAAS,CAACU,OADhB;EAEEN,IAAI,EAAE,SAFR;EAGEC,QAAQ,EAAE,UAHZ;EAIEG,YAAY,EAAEV,cAJhB;EAKEQ,IAAI,EAAEd;AALR,CArB2B,EA4B3B;EACEU,EAAE,EAAEF,SAAS,CAACW,KADhB;EAEEP,IAAI,EAAE,OAFR;EAGEC,QAAQ,EAAE,QAHZ;EAIEG,YAAY,EAAEX,aAJhB;EAKES,IAAI,EAAEb;AALR,CA5B2B,CAA7B;AAgDA,OAAO,MAAMmB,kBAAkB,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACzD,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;EACA,MAAM,CAACmB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,IAAD,CAAxD;EAEA,MAAMsB,YAAY,GAAGvB,OAAO,CAC1B,MACEO,KAAK,CAACiB,IAAN,CACGC,IAAD,IACEL,QAAQ,CAACT,QAAT,CAAkBe,WAAlB,OAAoCD,IAAI,CAACd,QAAzC,IACCc,IAAI,CAACE,kBAAL,IACCF,IAAI,CAACE,kBAAL,CAAwBC,IAAxB,CAA8BC,OAAD,IAC3BT,QAAQ,CAACT,QAAT,CAAkBe,WAAlB,GAAgCI,UAAhC,CAA2CD,OAA3C,CADF,CAJN,KAOK,IATmB,EAU1B,CAACT,QAAQ,CAACT,QAAV,CAV0B,CAA5B;EAaA,MAAMoB,UAAU,GAAG;IACjBC,eAAe,EAAEzB,KAAK,CAAC0B,MAAN,CAAcC,GAAD,IAAS,CAACA,GAAG,CAACC,MAA3B,CADA;IAEjBC,UAAU,EAAE,CAAAb,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEf,EAAd,KAAoB,IAFf;IAGjBa,gBAHiB;IAIjBC;EAJiB,CAAnB;EAOA,oBACE,QAAC,iBAAD,CAAmB,QAAnB;IAA4B,KAAK,EAAES,UAAnC;IAAA,UACGZ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA7BM;;GAAMD,kB;UACMhB,W;;;KADNgB,kB"},"metadata":{},"sourceType":"module"}