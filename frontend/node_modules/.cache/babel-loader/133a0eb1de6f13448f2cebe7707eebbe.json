{"ast":null,"code":"import { IEvents as e } from \"@walletconnect/events\";\nimport c, { EventEmitter as i } from \"events\";\n\nclass n extends e {\n  constructor(s) {\n    super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n  }\n\n}\n\nclass l {\n  constructor(s, t, o) {\n    this.core = s, this.logger = t;\n  }\n\n}\n\nclass h extends e {\n  constructor(s, t) {\n    super(), this.core = s, this.logger = t, this.records = new Map();\n  }\n\n}\n\nclass a {\n  constructor(s, t) {\n    this.logger = s, this.core = t;\n  }\n\n}\n\nclass u extends e {\n  constructor(s, t) {\n    super(), this.relayer = s, this.logger = t;\n  }\n\n}\n\nclass g extends e {\n  constructor(s) {\n    super();\n  }\n\n}\n\nclass p {\n  constructor(s, t, o, S) {\n    this.core = s, this.logger = t, this.name = o;\n  }\n\n}\n\nclass I {\n  constructor() {\n    this.map = new Map();\n  }\n\n}\n\nclass x extends e {\n  constructor(s, t) {\n    super(), this.relayer = s, this.logger = t;\n  }\n\n}\n\nclass d {\n  constructor(s, t) {\n    this.core = s, this.logger = t;\n  }\n\n}\n\nclass E extends e {\n  constructor(s, t) {\n    super(), this.core = s, this.logger = t;\n  }\n\n}\n\nclass m {\n  constructor(s, t) {\n    this.logger = s, this.core = t;\n  }\n\n}\n\nclass v extends c {\n  constructor() {\n    super();\n  }\n\n}\n\nclass y {\n  constructor(s) {\n    this.opts = s, this.protocol = \"wc\", this.version = 2;\n  }\n\n}\n\nclass b extends i {\n  constructor() {\n    super();\n  }\n\n}\n\nclass C {\n  constructor(s) {\n    this.client = s;\n  }\n\n}\n\nexport { n as ICore, l as ICrypto, C as IEngine, b as IEngineEvents, E as IExpirer, h as IJsonRpcHistory, d as IKeyChain, a as IMessageTracker, m as IPairing, u as IPublisher, g as IRelayer, y as ISignClient, v as ISignClientEvents, p as IStore, x as ISubscriber, I as ISubscriberTopicMap };","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["import{IEvents as e}from\"@walletconnect/events\";import c,{EventEmitter as i}from\"events\";class n extends e{constructor(s){super(),this.opts=s,this.protocol=\"wc\",this.version=2}}class l{constructor(s,t,o){this.core=s,this.logger=t}}class h extends e{constructor(s,t){super(),this.core=s,this.logger=t,this.records=new Map}}class a{constructor(s,t){this.logger=s,this.core=t}}class u extends e{constructor(s,t){super(),this.relayer=s,this.logger=t}}class g extends e{constructor(s){super()}}class p{constructor(s,t,o,S){this.core=s,this.logger=t,this.name=o}}class I{constructor(){this.map=new Map}}class x extends e{constructor(s,t){super(),this.relayer=s,this.logger=t}}class d{constructor(s,t){this.core=s,this.logger=t}}class E extends e{constructor(s,t){super(),this.core=s,this.logger=t}}class m{constructor(s,t){this.logger=s,this.core=t}}class v extends c{constructor(){super()}}class y{constructor(s){this.opts=s,this.protocol=\"wc\",this.version=2}}class b extends i{constructor(){super()}}class C{constructor(s){this.client=s}}export{n as ICore,l as ICrypto,C as IEngine,b as IEngineEvents,E as IExpirer,h as IJsonRpcHistory,d as IKeyChain,a as IMessageTracker,m as IPairing,u as IPublisher,g as IRelayer,y as ISignClient,v as ISignClientEvents,p as IStore,x as ISubscriber,I as ISubscriberTopicMap};\n"]},"metadata":{},"sourceType":"module"}