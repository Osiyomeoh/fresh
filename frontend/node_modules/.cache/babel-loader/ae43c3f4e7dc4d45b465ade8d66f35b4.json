{"ast":null,"code":"module.exports = {\n  minBlockRef,\n  maxBlockRef,\n  sortBlockRefs,\n  bnToHex,\n  blockRefIsNumber,\n  hexToInt,\n  incrementHexInt,\n  intToHex,\n  unsafeRandomBytes\n};\n\nfunction minBlockRef() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  const sortedRefs = sortBlockRefs(refs);\n  return sortedRefs[0];\n}\n\nfunction maxBlockRef() {\n  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    refs[_key2] = arguments[_key2];\n  }\n\n  const sortedRefs = sortBlockRefs(refs);\n  return sortedRefs[sortedRefs.length - 1];\n}\n\nfunction sortBlockRefs(refs) {\n  return refs.sort((refA, refB) => {\n    if (refA === 'latest' || refB === 'earliest') return 1;\n    if (refB === 'latest' || refA === 'earliest') return -1;\n    return hexToInt(refA) - hexToInt(refB);\n  });\n}\n\nfunction bnToHex(bn) {\n  return '0x' + bn.toString(16);\n}\n\nfunction blockRefIsNumber(blockRef) {\n  return blockRef && !['earliest', 'latest', 'pending'].includes(blockRef);\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  return Number.parseInt(hexString, 16);\n}\n\nfunction incrementHexInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  const value = hexToInt(hexString);\n  return intToHex(value + 1);\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int;\n  let hexString = int.toString(16);\n  const needsLeftPad = hexString.length % 2;\n  if (needsLeftPad) hexString = '0' + hexString;\n  return '0x' + hexString;\n}\n\nfunction unsafeRandomBytes(byteCount) {\n  let result = '0x';\n\n  for (let i = 0; i < byteCount; i++) {\n    result += unsafeRandomNibble();\n    result += unsafeRandomNibble();\n  }\n\n  return result;\n}\n\nfunction unsafeRandomNibble() {\n  return Math.floor(Math.random() * 16).toString(16);\n}","map":{"version":3,"names":["module","exports","minBlockRef","maxBlockRef","sortBlockRefs","bnToHex","blockRefIsNumber","hexToInt","incrementHexInt","intToHex","unsafeRandomBytes","refs","sortedRefs","length","sort","refA","refB","bn","toString","blockRef","includes","hexString","undefined","Number","parseInt","value","int","needsLeftPad","byteCount","result","i","unsafeRandomNibble","Math","floor","random"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/eth-json-rpc-filters/hexUtils.js"],"sourcesContent":["\nmodule.exports = {\n  minBlockRef,\n  maxBlockRef,\n  sortBlockRefs,\n  bnToHex,\n  blockRefIsNumber,\n  hexToInt,\n  incrementHexInt,\n  intToHex,\n  unsafeRandomBytes,\n}\n\nfunction minBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[0]\n}\n\nfunction maxBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[sortedRefs.length-1]\n}\n\nfunction sortBlockRefs(refs) {\n  return refs.sort((refA, refB) => {\n    if (refA === 'latest' || refB === 'earliest') return 1\n    if (refB === 'latest' || refA === 'earliest') return -1\n    return hexToInt(refA) - hexToInt(refB)\n  })\n}\n\nfunction bnToHex(bn) {\n  return '0x' + bn.toString(16)\n}\n\nfunction blockRefIsNumber(blockRef){\n  return blockRef && !['earliest', 'latest', 'pending'].includes(blockRef)\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  let hexString = int.toString(16)\n  const needsLeftPad = hexString.length % 2\n  if (needsLeftPad) hexString = '0' + hexString\n  return '0x' + hexString\n}\n\nfunction unsafeRandomBytes(byteCount) {\n  let result = '0x'\n  for (let i = 0; i < byteCount; i++) {\n    result += unsafeRandomNibble()\n    result += unsafeRandomNibble()\n  }\n  return result\n}\n\nfunction unsafeRandomNibble() {\n  return Math.floor(Math.random() * 16).toString(16)\n}\n"],"mappings":"AACAA,MAAM,CAACC,OAAP,GAAiB;EACfC,WADe;EAEfC,WAFe;EAGfC,aAHe;EAIfC,OAJe;EAKfC,gBALe;EAMfC,QANe;EAOfC,eAPe;EAQfC,QARe;EASfC;AATe,CAAjB;;AAYA,SAASR,WAAT,GAA8B;EAAA,kCAANS,IAAM;IAANA,IAAM;EAAA;;EAC5B,MAAMC,UAAU,GAAGR,aAAa,CAACO,IAAD,CAAhC;EACA,OAAOC,UAAU,CAAC,CAAD,CAAjB;AACD;;AAED,SAAST,WAAT,GAA8B;EAAA,mCAANQ,IAAM;IAANA,IAAM;EAAA;;EAC5B,MAAMC,UAAU,GAAGR,aAAa,CAACO,IAAD,CAAhC;EACA,OAAOC,UAAU,CAACA,UAAU,CAACC,MAAX,GAAkB,CAAnB,CAAjB;AACD;;AAED,SAAST,aAAT,CAAuBO,IAAvB,EAA6B;EAC3B,OAAOA,IAAI,CAACG,IAAL,CAAU,CAACC,IAAD,EAAOC,IAAP,KAAgB;IAC/B,IAAID,IAAI,KAAK,QAAT,IAAqBC,IAAI,KAAK,UAAlC,EAA8C,OAAO,CAAP;IAC9C,IAAIA,IAAI,KAAK,QAAT,IAAqBD,IAAI,KAAK,UAAlC,EAA8C,OAAO,CAAC,CAAR;IAC9C,OAAOR,QAAQ,CAACQ,IAAD,CAAR,GAAiBR,QAAQ,CAACS,IAAD,CAAhC;EACD,CAJM,CAAP;AAKD;;AAED,SAASX,OAAT,CAAiBY,EAAjB,EAAqB;EACnB,OAAO,OAAOA,EAAE,CAACC,QAAH,CAAY,EAAZ,CAAd;AACD;;AAED,SAASZ,gBAAT,CAA0Ba,QAA1B,EAAmC;EACjC,OAAOA,QAAQ,IAAI,CAAC,CAAC,UAAD,EAAa,QAAb,EAAuB,SAAvB,EAAkCC,QAAlC,CAA2CD,QAA3C,CAApB;AACD;;AAED,SAASZ,QAAT,CAAkBc,SAAlB,EAA6B;EAC3B,IAAIA,SAAS,KAAKC,SAAd,IAA2BD,SAAS,KAAK,IAA7C,EAAmD,OAAOA,SAAP;EACnD,OAAOE,MAAM,CAACC,QAAP,CAAgBH,SAAhB,EAA2B,EAA3B,CAAP;AACD;;AAED,SAASb,eAAT,CAAyBa,SAAzB,EAAmC;EACjC,IAAIA,SAAS,KAAKC,SAAd,IAA2BD,SAAS,KAAK,IAA7C,EAAmD,OAAOA,SAAP;EACnD,MAAMI,KAAK,GAAGlB,QAAQ,CAACc,SAAD,CAAtB;EACA,OAAOZ,QAAQ,CAACgB,KAAK,GAAG,CAAT,CAAf;AACD;;AAED,SAAShB,QAAT,CAAkBiB,GAAlB,EAAuB;EACrB,IAAIA,GAAG,KAAKJ,SAAR,IAAqBI,GAAG,KAAK,IAAjC,EAAuC,OAAOA,GAAP;EACvC,IAAIL,SAAS,GAAGK,GAAG,CAACR,QAAJ,CAAa,EAAb,CAAhB;EACA,MAAMS,YAAY,GAAGN,SAAS,CAACR,MAAV,GAAmB,CAAxC;EACA,IAAIc,YAAJ,EAAkBN,SAAS,GAAG,MAAMA,SAAlB;EAClB,OAAO,OAAOA,SAAd;AACD;;AAED,SAASX,iBAAT,CAA2BkB,SAA3B,EAAsC;EACpC,IAAIC,MAAM,GAAG,IAAb;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAApB,EAA+BE,CAAC,EAAhC,EAAoC;IAClCD,MAAM,IAAIE,kBAAkB,EAA5B;IACAF,MAAM,IAAIE,kBAAkB,EAA5B;EACD;;EACD,OAAOF,MAAP;AACD;;AAED,SAASE,kBAAT,GAA8B;EAC5B,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,EAA+BhB,QAA/B,CAAwC,EAAxC,CAAP;AACD"},"metadata":{},"sourceType":"script"}