{"ast":null,"code":"import { Connector, __privateAdd, __privateGet, __privateMethod, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\"; // src/coinbaseWallet.ts\n\nimport { AddChainError, ChainNotConfiguredError, SwitchChainError, UserRejectedRequestError, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\n\nvar _client, _provider, _isUserRejectedRequestError, isUserRejectedRequestError_fn;\n\nvar CoinbaseWalletConnector = class extends Connector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n\n    __privateAdd(this, _isUserRejectedRequestError);\n\n    __publicField(this, \"id\", \"coinbaseWallet\");\n\n    __publicField(this, \"name\", \"Coinbase Wallet\");\n\n    __publicField(this, \"ready\", true);\n\n    __privateAdd(this, _client, void 0);\n\n    __privateAdd(this, _provider, void 0);\n\n    __publicField(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    __publicField(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    if (!__privateGet(this, _provider)) return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n\n  async getProvider() {\n    if (!__privateGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import(\"@coinbase/wallet-sdk\")).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\") CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n\n      __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n\n      class WalletProvider {}\n\n      class Client {}\n\n      const walletExtensionChainId = __privateGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(chain2 => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n\n      __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n\n    return __privateGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = hexValue(chainId);\n\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpcUrls: {\n          default: {\n            http: [\"\"]\n          },\n          public: {\n            http: [\"\"]\n          }\n        }\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError({\n        chainId,\n        connectorId: this.id\n      });\n\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, addError)) throw new UserRejectedRequestError(addError);\n          throw new AddChainError();\n        }\n      }\n\n      if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref2) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref2;\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n};\n_client = new WeakMap();\n_provider = new WeakMap();\n_isUserRejectedRequestError = new WeakSet();\n\nisUserRejectedRequestError_fn = function (error) {\n  return /(user rejected)/i.test(error.message);\n};\n\nexport { CoinbaseWalletConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateMethod","__privateSet","__publicField","AddChainError","ChainNotConfiguredError","SwitchChainError","UserRejectedRequestError","normalizeChainId","providers","getAddress","hexValue","_client","_provider","_isUserRejectedRequestError","isUserRejectedRequestError_fn","CoinbaseWalletConnector","constructor","chains","options","reloadOnDisconnect","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","connect","provider","getProvider","on","onAccountsChanged","onChainChanged","onDisconnect","type","enable","getChainId","switchChain","Web3Provider","error","test","message","disconnect","removeListener","close","getAccount","request","method","CoinbaseWalletSDK","default","WalletProvider","Client","walletExtensionChainId","walletExtension","find","chain2","jsonRpcUrl","rpcUrls","http","makeWeb3Provider","getSigner","Promise","all","isAuthorized","params","x","name","network","nativeCurrency","decimals","symbol","public","connectorId","code","chainName","blockExplorerUrls","getBlockExplorerUrls","addError","call","watchAsset","address","image","WeakMap","WeakSet"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@wagmi/connectors/dist/coinbaseWallet.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/coinbaseWallet.ts\nimport {\n  AddChainError,\n  ChainNotConfiguredError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar _client, _provider, _isUserRejectedRequestError, isUserRejectedRequestError_fn;\nvar CoinbaseWalletConnector = class extends Connector {\n  constructor({ chains, options }) {\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    __privateAdd(this, _isUserRejectedRequestError);\n    __publicField(this, \"id\", \"coinbaseWallet\");\n    __publicField(this, \"name\", \"Coinbase Wallet\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _client, void 0);\n    __privateAdd(this, _provider, void 0);\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: { id, unsupported },\n        provider: new providers.Web3Provider(\n          provider\n        )\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(\n        error.message\n      ))\n        throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!__privateGet(this, _provider))\n      return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!__privateGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import(\"@coinbase/wallet-sdk\")).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\")\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n      class WalletProvider {\n      }\n      class Client {\n      }\n      const walletExtensionChainId = __privateGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(\n        (chain2) => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId\n      ) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n      __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    return new providers.Web3Provider(\n      provider,\n      chainId\n    ).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredError({ chainId, connectorId: this.id });\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (addError) {\n          if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, addError))\n            throw new UserRejectedRequestError(addError);\n          throw new AddChainError();\n        }\n      }\n      if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n};\n_client = new WeakMap();\n_provider = new WeakMap();\n_isUserRejectedRequestError = new WeakSet();\nisUserRejectedRequestError_fn = function(error) {\n  return /(user rejected)/i.test(error.message);\n};\nexport {\n  CoinbaseWalletConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}