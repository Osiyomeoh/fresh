{"ast":null,"code":"\"use strict\"; // Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SystemRandomSource = void 0;\n\nconst browser_1 = require(\"./browser\");\n\nconst node_1 = require(\"./node\");\n\nclass SystemRandomSource {\n  constructor() {\n    this.isAvailable = false;\n    this.name = \"\"; // Try browser.\n\n    this._source = new browser_1.BrowserRandomSource();\n\n    if (this._source.isAvailable) {\n      this.isAvailable = true;\n      this.name = \"Browser\";\n      return;\n    } // If no browser source, try Node.\n\n\n    this._source = new node_1.NodeRandomSource();\n\n    if (this._source.isAvailable) {\n      this.isAvailable = true;\n      this.name = \"Node\";\n      return;\n    } // No sources, we're out of options.\n\n  }\n\n  randomBytes(length) {\n    if (!this.isAvailable) {\n      throw new Error(\"System random byte generator is not available.\");\n    }\n\n    return this._source.randomBytes(length);\n  }\n\n}\n\nexports.SystemRandomSource = SystemRandomSource;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;AAGA;;AACA;;AAEA,MAAaA,kBAAb,CAA+B;EAK3BC;IAJA,mBAAc,KAAd;IACA,YAAO,EAAP,CAGA,CACI;;IACA,KAAKC,OAAL,GAAe,IAAIC,6BAAJ,EAAf;;IACA,IAAI,KAAKD,OAAL,CAAaE,WAAjB,EAA8B;MAC1B,KAAKA,WAAL,GAAmB,IAAnB;MACA,KAAKC,IAAL,GAAY,SAAZ;MACA;IACH,CAPL,CASI;;;IACA,KAAKH,OAAL,GAAe,IAAII,uBAAJ,EAAf;;IACA,IAAI,KAAKJ,OAAL,CAAaE,WAAjB,EAA8B;MAC1B,KAAKA,WAAL,GAAmB,IAAnB;MACA,KAAKC,IAAL,GAAY,MAAZ;MACA;IACH,CAfL,CAiBI;;EACH;;EAEDE,WAAW,CAACC,MAAD,EAAe;IACtB,IAAI,CAAC,KAAKJ,WAAV,EAAuB;MACnB,MAAM,IAAIK,KAAJ,CAAU,gDAAV,CAAN;IACH;;IACD,OAAO,KAAKP,OAAL,CAAaK,WAAb,CAAyBC,MAAzB,CAAP;EACH;;AA9B0B;;AAA/BE","names":["SystemRandomSource","constructor","_source","browser_1","isAvailable","name","node_1","randomBytes","length","Error","exports"],"sources":["C:\\Users\\USER\\Documents\\demo-react\\node_modules\\@stablelib\\random\\source\\system.ts"],"sourcesContent":["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n"]},"metadata":{},"sourceType":"script"}