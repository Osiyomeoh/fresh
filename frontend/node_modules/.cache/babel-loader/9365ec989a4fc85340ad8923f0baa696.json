{"ast":null,"code":"const pify = require('pify');\n\nconst BaseBlockTracker = require('./base');\n\nconst sec = 1000;\n\nclass PollingBlockTracker extends BaseBlockTracker {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.');\n    const pollingInterval = opts.pollingInterval || 20 * sec;\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10;\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true;\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false; // BaseBlockTracker constructor\n\n    super(Object.assign({\n      blockResetDuration: pollingInterval\n    }, opts)); // config\n\n    this._provider = opts.provider;\n    this._pollingInterval = pollingInterval;\n    this._retryTimeout = retryTimeout;\n    this._keepEventLoopActive = keepEventLoopActive;\n    this._setSkipCacheFlag = setSkipCacheFlag;\n  } //\n  // public\n  //\n  // trigger block polling\n\n\n  async checkForLatestBlock() {\n    await this._updateLatestBlock();\n    return await this.getLatestBlock();\n  } //\n  // private\n  //\n\n\n  _start() {\n    this._performSync().catch(err => this.emit('error', err));\n  }\n\n  async _performSync() {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock();\n        await timeout(this._pollingInterval, !this._keepEventLoopActive);\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`);\n\n        try {\n          this.emit('error', newErr);\n        } catch (emitErr) {\n          console.error(newErr);\n        }\n\n        await timeout(this._retryTimeout, !this._keepEventLoopActive);\n      }\n    }\n  }\n\n  async _updateLatestBlock() {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock();\n\n    this._newPotentialLatest(latestBlock);\n  }\n\n  async _fetchLatestBlock() {\n    const req = {\n      jsonrpc: \"2.0\",\n      id: 1,\n      method: 'eth_blockNumber',\n      params: []\n    };\n    if (this._setSkipCacheFlag) req.skipCache = true;\n    const res = await pify(cb => this._provider.sendAsync(req, cb))();\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`);\n    return res.result;\n  }\n\n}\n\nmodule.exports = PollingBlockTracker;\n\nfunction timeout(duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration); // don't keep process open\n\n    if (timoutRef.unref && unref) {\n      timoutRef.unref();\n    }\n  });\n}","map":{"version":3,"names":["pify","require","BaseBlockTracker","sec","PollingBlockTracker","constructor","opts","provider","Error","pollingInterval","retryTimeout","keepEventLoopActive","undefined","setSkipCacheFlag","Object","assign","blockResetDuration","_provider","_pollingInterval","_retryTimeout","_keepEventLoopActive","_setSkipCacheFlag","checkForLatestBlock","_updateLatestBlock","getLatestBlock","_start","_performSync","catch","err","emit","_isRunning","timeout","newErr","stack","emitErr","console","error","latestBlock","_fetchLatestBlock","_newPotentialLatest","req","jsonrpc","id","method","params","skipCache","res","cb","sendAsync","result","module","exports","duration","unref","Promise","resolve","timoutRef","setTimeout"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/eth-block-tracker/src/polling.js"],"sourcesContent":["const pify = require('pify')\nconst BaseBlockTracker = require('./base')\n\nconst sec = 1000\n\nclass PollingBlockTracker extends BaseBlockTracker {\n\n  constructor (opts = {}) {\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')\n    const pollingInterval = opts.pollingInterval || 20 * sec\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval,\n    }, opts))\n    // config\n    this._provider = opts.provider\n    this._pollingInterval = pollingInterval\n    this._retryTimeout = retryTimeout\n    this._keepEventLoopActive = keepEventLoopActive\n    this._setSkipCacheFlag = setSkipCacheFlag\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock () {\n    await this._updateLatestBlock()\n    return await this.getLatestBlock()\n  }\n\n  //\n  // private\n  //\n\n  _start () {\n    this._performSync().catch(err => this.emit('error', err))\n  }\n\n  async _performSync () {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock()\n        await timeout(this._pollingInterval, !this._keepEventLoopActive)\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`)\n        try {\n          this.emit('error', newErr)\n        } catch (emitErr) {\n          console.error(newErr)\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive)\n      }\n    }\n  }\n\n  async _updateLatestBlock () {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock()\n    this._newPotentialLatest(latestBlock)\n  }\n\n  async _fetchLatestBlock () {\n    const req = { jsonrpc: \"2.0\", id: 1, method: 'eth_blockNumber', params: [] }\n    if (this._setSkipCacheFlag) req.skipCache = true\n    const res = await pify((cb) => this._provider.sendAsync(req, cb))()\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`)\n    return res.result\n  }\n\n}\n\nmodule.exports = PollingBlockTracker\n\nfunction timeout (duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration)\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref()\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}