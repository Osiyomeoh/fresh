{"ast":null,"code":"import { InjectedConnector } from \"./chunk-BVC4KGLQ.js\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-MQXBDTVK.js\"; // src/utils/configureChains.ts\n\nimport { providers } from \"ethers\";\n\nfunction configureChains(defaultChains, providers2) {\n  let {\n    minQuorum = 1,\n    pollingInterval = 4e3,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error(\"must have at least one chain\");\n  if (targetQuorum < minQuorum) throw new Error(\"quorum cannot be lower than minQuorum\");\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n\n  for (const chain of defaultChains) {\n    let configExists = false;\n\n    for (const provider of providers2) {\n      const apiConfig = provider(chain);\n      if (!apiConfig) continue;\n      configExists = true;\n\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n\n      providers_[chain.id] = [...(providers_[chain.id] || []), apiConfig.provider];\n\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [...(webSocketProviders_[chain.id] || []), apiConfig.webSocketProvider];\n      }\n    }\n\n    if (!configExists) {\n      throw new Error([`Could not find valid provider configuration for chain \"${chain.name}\".\n`, \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", \"Read more: https://wagmi.sh/core/providers/jsonRpc\"].join(\"\\n\"));\n    }\n  }\n\n  return {\n    chains,\n    provider: _ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainProviders = providers_[activeChain.id];\n      if (!chainProviders || !chainProviders[0]) throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      let provider;\n\n      if (chainProviders.length === 1) {\n        provider = chainProviders[0]();\n      } else {\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n          stallTimeout\n        });\n      }\n\n      if (activeChain.id === 42220) {\n        provider.formatter.formats.block = { ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n\n      return Object.assign(provider, {\n        chains,\n        pollingInterval\n      });\n    },\n    webSocketProvider: _ref3 => {\n      let {\n        chainId\n      } = _ref3;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\n      if (!chainWebSocketProviders) return void 0;\n      const provider = chainWebSocketProviders[0]?.();\n\n      if (provider && activeChain.id === 42220) {\n        provider.formatter.formats.block = { ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n\n      return Object.assign(provider || {}, {\n        chains\n      });\n    }\n  };\n}\n\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: provider.priority ?? index,\n        stallTimeout: provider.stallTimeout ?? stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    if (error?.message?.includes(\"quorum will always fail; larger than total weight\")) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n\n    throw error;\n  }\n} // src/client.ts\n\n\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\"; // src/utils/assertActiveChain.ts\n\nfunction assertActiveChain(_ref5) {\n  let {\n    chainId,\n    signer\n  } = _ref5;\n  const {\n    chain: activeChain,\n    chains\n  } = getNetwork();\n  const activeChainId = activeChain?.id;\n\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find(x => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find(x => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n\n  if (signer) {\n    const signerChainId = signer.provider?.network?.chainId;\n\n    if (signerChainId && chainId !== signerChainId) {\n      const connector = getClient().connector;\n      throw new ChainNotConfiguredError({\n        chainId,\n        connectorId: connector?.id ?? \"unknown\"\n      });\n    }\n  }\n} // src/utils/debounce.ts\n\n\nfunction debounce(fn) {\n  let waitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (!waitTime) return fn(...args);\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      fn(...args);\n    }, waitTime);\n  };\n} // src/utils/deepEqual.ts\n\n\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n} // src/utils/deserialize.ts\n\n\nimport { BigNumber } from \"ethers\";\n\nvar findAndReplace = (cacheRef, _ref6) => {\n  let {\n    find,\n    replace\n  } = _ref6;\n\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref7) => {\n      let [key, value] = _ref7;\n      return { ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n\n  return cacheRef;\n};\n\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: data => data.type === \"BigNumber\",\n    replace: data => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n} // src/utils/normalizeFunctionName.ts\n\n\nimport { BigNumber as BigNumber2 } from \"ethers\";\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\n\nfunction normalizeFunctionName(_ref8) {\n  let {\n    contract,\n    functionName,\n    args = []\n  } = _ref8;\n  if (functionName in contract.functions) return functionName;\n  const argsLength = args?.length ?? 0;\n  const overloadFunctions = Object.keys(contract.functions).filter(x => x.startsWith(`${functionName}(`)).map(x => ({\n    name: x,\n    fragment: FunctionFragment.fromString(x)\n  })).filter(x => argsLength === x.fragment.inputs.length);\n\n  for (const overloadFunction of overloadFunctions) {\n    const matched = args.every((arg, index) => {\n      const abiParameter = overloadFunction.fragment.inputs[index];\n      return isArgOfType(arg, abiParameter);\n    });\n    if (matched) return overloadFunction.name;\n  }\n\n  return functionName;\n}\n\nfunction isArgOfType(arg, abiParameter) {\n  const argType = typeof arg;\n  const abiParameterType = abiParameter.type;\n\n  switch (abiParameterType) {\n    case \"address\":\n      return isAddress(arg);\n\n    case \"bool\":\n      return argType === \"boolean\";\n\n    case \"function\":\n      return argType === \"string\";\n\n    case \"string\":\n      return argType === \"string\";\n\n    default:\n      {\n        if (abiParameterType === \"tuple\" && \"components\" in abiParameter) return Object.values(abiParameter.components).every((component, index) => {\n          return isArgOfType(Object.values(arg)[index], component);\n        });\n        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType)) return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\n        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType)) return argType === \"string\" || arg instanceof Uint8Array;\n\n        if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n          return Array.isArray(arg) && arg.every(x => isArgOfType(x, { ...abiParameter,\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\n          }));\n        }\n\n        return false;\n      }\n  }\n} // src/utils/logger.ts\n\n\nfunction logWarn(message) {\n  getClient()?.config.logger?.warn?.(message);\n} // src/utils/minimizeContractInterface.ts\n\n\nimport { Contract } from \"ethers\";\nimport { FormatTypes } from \"ethers/lib/utils.js\";\n\nfunction minimizeContractInterface(config) {\n  try {\n    const minimizedAbi = config.abi.filter(x => x.type === \"function\" && x.name === config.functionName);\n    if (minimizedAbi.length === 0) throw new Error(\"Invalid ABI\");\n    return minimizedAbi;\n  } catch (error) {\n    const abi = Contract.getInterface(config.abi).format(FormatTypes.full);\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\n    return minimizedInterface.filter(i => i.includes(config.functionName));\n  }\n} // src/utils/normalizeChainId.ts\n\n\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  if (typeof chainId === \"bigint\") return Number(chainId);\n  return chainId;\n} // src/utils/parseContractResult.ts\n\n\nimport { Contract as Contract2 } from \"ethers\";\n\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\n\nfunction parseContractResult(_ref9) {\n  let {\n    abi,\n    data,\n    functionName\n  } = _ref9;\n\n  if (data && isPlainArray(data)) {\n    const iface = Contract2.getInterface(abi);\n    const fragment = iface.getFunction(functionName);\n    const isTuple = (fragment.outputs?.length || 0) > 1;\n    const data_ = isTuple ? data : [data];\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(functionName, encodedResult);\n    return isTuple ? decodedResult : decodedResult[0];\n  }\n\n  return data;\n} // src/utils/serialize.ts\n\n\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\n\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n\n  return 0;\n}\n\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\n\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent ?? void 0);\n} // src/storage.ts\n\n\nvar noopStorage = {\n  getItem: _key => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\n\nfunction createStorage(_ref10) {\n  let {\n    deserialize: deserialize2 = deserialize,\n    key: prefix = \"wagmi\",\n    serialize: serialize2 = serialize,\n    storage\n  } = _ref10;\n  return { ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(`${prefix}.${key}`);\n\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(`${prefix}.${key}`)\n  };\n} // src/client.ts\n\n\nvar storeKey = \"store\";\n\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\n\nvar Client = class {\n  constructor(_ref11) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider,\n      storage = createStorage({\n        storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n      }),\n      logger = {\n        warn: console.warn\n      },\n      webSocketProvider\n    } = _ref11;\n\n    __privateAdd(this, _addEffects);\n\n    this.providers = /* @__PURE__ */new Map();\n    this.webSocketProviders = /* @__PURE__ */new Map();\n\n    __privateAdd(this, _isAutoConnecting, void 0);\n\n    __privateAdd(this, _lastUsedConnector, void 0);\n\n    this.config = {\n      autoConnect,\n      connectors,\n      logger,\n      provider,\n      storage,\n      webSocketProvider\n    };\n    let status = \"disconnected\";\n    let chainId;\n\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {}\n    }\n\n    this.store = createStore(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === \"function\" ? connectors() : connectors,\n      provider: this.getProvider({\n        chainId\n      }),\n      status,\n      webSocketProvider: this.getWebSocketProvider({\n        chainId\n      })\n    }), {\n      name: storeKey,\n      storage,\n      partialize: state => ({ ...(autoConnect && {\n          data: {\n            account: state?.data?.account,\n            chain: state?.data?.chain\n          }\n        }),\n        chains: state?.chains\n      }),\n      version: 2\n    })));\n    this.storage = storage;\n\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n\n    if (autoConnect && typeof window !== \"undefined\") setTimeout(async () => await this.autoConnect(), 0);\n  }\n\n  get chains() {\n    return this.store.getState().chains;\n  }\n\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n\n  get connector() {\n    return this.store.getState().connector;\n  }\n\n  get data() {\n    return this.store.getState().data;\n  }\n\n  get error() {\n    return this.store.getState().error;\n  }\n\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n\n  get provider() {\n    return this.store.getState().provider;\n  }\n\n  get status() {\n    return this.store.getState().status;\n  }\n\n  get subscribe() {\n    return this.store.subscribe;\n  }\n\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n\n  clearState() {\n    this.setState(x => ({ ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n\n  async destroy() {\n    if (this.connector) await this.connector.disconnect?.();\n\n    __privateSet(this, _isAutoConnecting, false);\n\n    this.clearState();\n    this.store.destroy();\n  }\n\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting)) return;\n\n    __privateSet(this, _isAutoConnecting, true);\n\n    this.setState(x => ({ ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({ ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n\n    if (!connected) this.setState(x => ({ ...x,\n      data: void 0,\n      status: \"disconnected\"\n    }));\n\n    __privateSet(this, _isAutoConnecting, false);\n\n    return this.data;\n  }\n\n  getProvider() {\n    let {\n      bust,\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let provider_ = this.providers.get(chainId ?? -1);\n    if (provider_ && !bust) return provider_;\n    const {\n      provider\n    } = this.config;\n    provider_ = typeof provider === \"function\" ? provider({\n      chainId\n    }) : provider;\n    this.providers.set(chainId ?? -1, provider_);\n    return provider_;\n  }\n\n  getWebSocketProvider() {\n    let {\n      bust,\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);\n    if (webSocketProvider_ && !bust) return webSocketProvider_;\n    const {\n      webSocketProvider\n    } = this.config;\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({\n      chainId\n    }) : webSocketProvider;\n    if (webSocketProvider_) this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);\n    return webSocketProvider_;\n  }\n\n  setLastUsedConnector() {\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\n\naddEffects_fn = function () {\n  const onChange = data => {\n    this.setState(x => ({ ...x,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n  };\n\n  const onDisconnect = () => {\n    this.clearState();\n  };\n\n  const onError = error => {\n    this.setState(x => ({ ...x,\n      error\n    }));\n  };\n\n  this.store.subscribe(_ref12 => {\n    let {\n      connector\n    } = _ref12;\n    return connector;\n  }, (connector, prevConnector) => {\n    prevConnector?.off?.(\"change\", onChange);\n    prevConnector?.off?.(\"disconnect\", onDisconnect);\n    prevConnector?.off?.(\"error\", onError);\n    if (!connector) return;\n    connector.on?.(\"change\", onChange);\n    connector.on?.(\"disconnect\", onDisconnect);\n    connector.on?.(\"error\", onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === \"function\";\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref13 => {\n    let {\n      data\n    } = _ref13;\n    return data?.chain?.id;\n  }, chainId => {\n    this.setState(x => ({ ...x,\n      provider: this.getProvider({\n        bust: true,\n        chainId\n      }),\n      webSocketProvider: this.getWebSocketProvider({\n        bust: true,\n        chainId\n      })\n    }));\n  });\n};\n\nvar client;\n\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\n\nfunction getClient() {\n  if (!client) {\n    throw new Error(\"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\");\n  }\n\n  return client;\n} // src/actions/accounts/connect.ts\n\n\nasync function connect(_ref14) {\n  let {\n    chainId,\n    connector\n  } = _ref14;\n  const client2 = getClient();\n  const activeConnector = client2.connector;\n  if (activeConnector && connector.id === activeConnector.id) throw new ConnectorAlreadyConnectedError();\n\n  try {\n    client2.setState(x => ({ ...x,\n      status: \"connecting\"\n    }));\n    const data = await connector.connect({\n      chainId\n    });\n    client2.setLastUsedConnector(connector.id);\n    client2.setState(x => ({ ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    client2.storage.setItem(\"connected\", true);\n    return { ...data,\n      connector\n    };\n  } catch (err) {\n    client2.setState(x => {\n      return { ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n} // src/actions/accounts/disconnect.ts\n\n\nasync function disconnect() {\n  const client2 = getClient();\n  if (client2.connector) await client2.connector.disconnect();\n  client2.clearState();\n  client2.storage.removeItem(\"connected\");\n} // src/actions/accounts/fetchBalance.ts\n\n\nimport { formatUnits as formatUnits3, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\"; // src/constants/abis.ts\n\nvar erc20ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc20ABI_bytes32 = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc721ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"ApprovalForAll\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"approved\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"getApproved\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"isApprovedForAll\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"ownerOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"id\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"setApprovalForAll\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenURI\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"tokeId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}];\nvar multicallABI = [{\n  inputs: [{\n    components: [{\n      name: \"target\",\n      type: \"address\"\n    }, {\n      name: \"allowFailure\",\n      type: \"bool\"\n    }, {\n      name: \"callData\",\n      type: \"bytes\"\n    }],\n    name: \"calls\",\n    type: \"tuple[]\"\n  }],\n  name: \"aggregate3\",\n  outputs: [{\n    components: [{\n      name: \"success\",\n      type: \"bool\"\n    }, {\n      name: \"returnData\",\n      type: \"bytes\"\n    }],\n    name: \"returnData\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nvar erc4626ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Deposit\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Withdraw\",\n  type: \"event\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"asset\",\n  outputs: [{\n    name: \"assetTokenAddress\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"convertToAssets\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"convertToShares\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"deposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxDeposit\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxMint\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxRedeem\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxWithdraw\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"mint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewDeposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewMint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewRedeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewWithdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"redeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalAssets\",\n  outputs: [{\n    name: \"totalManagedAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"withdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}]; // src/constants/units.ts\n\nvar units = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"]; // src/actions/contracts/fetchToken.ts\n\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\n\nasync function fetchToken(_ref15) {\n  let {\n    address,\n    chainId,\n    formatUnits: units2 = \"ether\"\n  } = _ref15;\n\n  async function fetchToken_(_ref16) {\n    let {\n      abi\n    } = _ref16;\n    const erc20Config = {\n      address,\n      abi,\n      chainId\n    };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [{ ...erc20Config,\n        functionName: \"decimals\"\n      }, { ...erc20Config,\n        functionName: \"name\"\n      }, { ...erc20Config,\n        functionName: \"symbol\"\n      }, { ...erc20Config,\n        functionName: \"totalSupply\"\n      }]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, units2),\n        value: totalSupply\n      }\n    };\n  }\n\n  try {\n    return await fetchToken_({\n      abi: erc20ABI\n    });\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) {\n      const {\n        name,\n        symbol,\n        ...rest\n      } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: parseBytes32String(name),\n        symbol: parseBytes32String(symbol),\n        ...rest\n      };\n    }\n\n    throw err;\n  }\n} // src/actions/contracts/getContract.ts\n\n\nimport { Contract as EthersContract } from \"ethers\";\n\nfunction getContract(_ref17) {\n  let {\n    address,\n    abi,\n    signerOrProvider\n  } = _ref17;\n  return new EthersContract(address, abi, signerOrProvider);\n} // src/actions/contracts/prepareWriteContract.ts\n\n\nasync function prepareWriteContract(_ref18) {\n  let {\n    abi,\n    address,\n    chainId,\n    functionName,\n    overrides,\n    signer: signer_,\n    ...config\n  } = _ref18;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: signer\n  });\n  const args = config.args;\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\n  if (!populateTransactionFn) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  const unsignedTransaction = await populateTransactionFn(...params);\n  const gasLimit = unsignedTransaction.gasLimit || (await signer.estimateGas(unsignedTransaction));\n  const minimizedAbi = minimizeContractInterface({\n    abi,\n    functionName\n  });\n  return {\n    abi: minimizedAbi,\n    address,\n    chainId,\n    functionName,\n    mode: \"prepared\",\n    request: { ...unsignedTransaction,\n      gasLimit\n    }\n  };\n} // src/actions/providers/getProvider.ts\n\n\nfunction getProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  if (chainId) return client2.getProvider({\n    chainId\n  }) || client2.provider;\n  return client2.provider;\n} // src/actions/providers/getWebSocketProvider.ts\n\n\nfunction getWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  if (chainId) return client2.getWebSocketProvider({\n    chainId\n  }) || client2.webSocketProvider;\n  return client2.webSocketProvider;\n} // src/actions/providers/watchProvider.ts\n\n\nfunction watchProvider(args, callback) {\n  const client2 = getClient();\n\n  const handleChange = async () => callback(getProvider(args));\n\n  const unsubscribe = client2.subscribe(_ref19 => {\n    let {\n      provider\n    } = _ref19;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n} // src/actions/providers/watchWebSocketProvider.ts\n\n\nfunction watchWebSocketProvider(args, callback) {\n  const client2 = getClient();\n\n  const handleChange = async () => callback(getWebSocketProvider(args));\n\n  const unsubscribe = client2.subscribe(_ref20 => {\n    let {\n      webSocketProvider\n    } = _ref20;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n} // src/actions/contracts/multicall.ts\n\n\nasync function multicall(_ref21) {\n  let {\n    allowFailure = true,\n    chainId,\n    contracts,\n    overrides\n  } = _ref21;\n  const provider = getProvider({\n    chainId\n  });\n  if (!provider.chains) throw new ProviderChainsNotFound();\n  const chain = provider.chains.find(chain2 => chain2.id === chainId) || provider.chains[0];\n  if (!chain) throw new ProviderChainsNotFound();\n  if (!chain?.contracts?.multicall3) throw new ChainDoesNotSupportMulticallError({\n    chain\n  });\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < (chain.contracts.multicall3.blockCreated ?? 0)) throw new ChainDoesNotSupportMulticallError({\n    blockNumber: overrides?.blockTag,\n    chain\n  });\n  const multicallContract = getContract({\n    address: chain.contracts.multicall3.address,\n    abi: multicallABI,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(_ref22 => {\n    let {\n      address,\n      abi,\n      functionName,\n      ...config\n    } = _ref22;\n    const {\n      args\n    } = config || {};\n    const contract = getContract({\n      address,\n      abi\n    });\n    const params2 = args ?? [];\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n\n    try {\n      const contractFunction = contract[normalizedFunctionName];\n      if (!contractFunction) logWarn(`\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`);\n      const callData = contract.interface.encodeFunctionData(normalizedFunctionName, params2);\n      return {\n        target: address,\n        allowFailure,\n        callData\n      };\n    } catch (err) {\n      if (!allowFailure) throw err;\n      return {\n        target: address,\n        allowFailure,\n        callData: \"0x\"\n      };\n    }\n  });\n  const params = [...[calls], ...(overrides ? [overrides] : [])];\n  const results = await multicallContract.aggregate3(...params);\n  return results.map((_ref23, i) => {\n    let {\n      returnData,\n      success\n    } = _ref23;\n    const {\n      address,\n      abi,\n      functionName,\n      ...rest\n    } = contracts[i];\n    const contract = getContract({\n      address,\n      abi\n    });\n    const args = rest.args;\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n\n    if (!success) {\n      let error;\n\n      try {\n        contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      } catch (err) {\n        error = new ContractMethodRevertedError({\n          address,\n          args,\n          chainId: chain.id,\n          functionName: normalizedFunctionName,\n          errorMessage: err.message\n        });\n        if (!allowFailure) throw error;\n        logWarn(error.message);\n      }\n\n      return null;\n    }\n\n    if (returnData === \"0x\") {\n      const error = new ContractMethodNoResultError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n\n    try {\n      const result = contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      const error = new ContractResultDecodeError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName,\n        errorMessage: err.message\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n  });\n} // src/actions/contracts/readContract.ts\n\n\nasync function readContract(_ref24) {\n  let {\n    address,\n    chainId,\n    abi,\n    functionName,\n    overrides,\n    ...config\n  } = _ref24;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: provider\n  });\n  const args = config.args;\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const contractFunction = contract[normalizedFunctionName];\n  if (!contractFunction) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  return contractFunction?.(...params);\n} // src/actions/contracts/readContracts.ts\n\n\nasync function readContracts(_ref25) {\n  let {\n    allowFailure = true,\n    contracts,\n    overrides\n  } = _ref25;\n\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? provider.network.chainId;\n      return { ...contracts2,\n        [chainId]: [...(contracts2[chainId] || []), {\n          contract,\n          index\n        }]\n      };\n    }, {});\n\n    const promises = () => Object.entries(contractsByChainId).map(_ref26 => {\n      let [chainId, contracts2] = _ref26;\n      return multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(_ref27 => {\n          let {\n            contract\n          } = _ref27;\n          return contract;\n        }),\n        overrides\n      });\n    });\n\n    let multicallResults;\n\n    if (allowFailure) {\n      multicallResults = (await Promise.allSettled(promises())).map(result => {\n        if (result.status === \"fulfilled\") return result.value;\n\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          logWarn(result.reason.message);\n          throw result.reason;\n        }\n\n        return null;\n      }).flat();\n    } else {\n      multicallResults = (await Promise.all(promises())).flat();\n    }\n\n    const resultIndexes = Object.values(contractsByChainId).map(contracts2 => contracts2.map(_ref28 => {\n      let {\n        index\n      } = _ref28;\n      return index;\n    })).flat();\n    return multicallResults.reduce((results, result, index) => {\n      if (results) results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) throw err;\n    if (err instanceof ContractMethodNoResultError) throw err;\n    if (err instanceof ContractMethodRevertedError) throw err;\n\n    const promises = () => contracts.map(contract => readContract({ ...contract,\n      overrides\n    }));\n\n    if (allowFailure) return (await Promise.allSettled(promises())).map((result, i) => {\n      if (result.status === \"fulfilled\") return result.value;\n      const {\n        address,\n        args,\n        chainId,\n        functionName\n      } = contracts[i];\n      const error = new ContractMethodRevertedError({\n        address,\n        functionName,\n        chainId: chainId ?? 1,\n        args,\n        errorMessage: result.reason\n      });\n      logWarn(error.message);\n      return null;\n    });\n    return await Promise.all(promises());\n  }\n} // src/actions/contracts/watchContractEvent.ts\n\n\nimport { shallow } from \"zustand/shallow\";\n\nfunction watchContractEvent(_ref29, callback) {\n  let {\n    address,\n    abi,\n    chainId,\n    eventName,\n    once\n  } = _ref29;\n\n  const handler = function () {\n    return callback(...arguments);\n  };\n\n  let contract;\n\n  const watchEvent = async () => {\n    if (contract) contract?.off(eventName, handler);\n    const signerOrProvider = getWebSocketProvider({\n      chainId\n    }) || getProvider({\n      chainId\n    });\n    contract = getContract({\n      address,\n      abi,\n      signerOrProvider\n    });\n    if (once) contract.once(eventName, handler);else contract.on(eventName, handler);\n  };\n\n  watchEvent();\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref30 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref30;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: shallow\n  });\n  return () => {\n    contract?.off(eventName, handler);\n    unsubscribe();\n  };\n} // src/actions/network-status/watchBlockNumber.ts\n\n\nimport { shallow as shallow2 } from \"zustand/shallow\"; // src/actions/network-status/fetchBlockNumber.ts\n\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n} // src/actions/network-status/watchBlockNumber.ts\n\n\nfunction watchBlockNumber(args, callback) {\n  const debouncedCallback = debounce(callback, 1);\n  let previousProvider;\n\n  const createListener = provider => {\n    if (previousProvider) {\n      previousProvider?.off(\"block\", debouncedCallback);\n    }\n\n    provider.on(\"block\", debouncedCallback);\n    previousProvider = provider;\n  };\n\n  const provider_ = getWebSocketProvider({\n    chainId: args.chainId\n  }) ?? getProvider({\n    chainId: args.chainId\n  });\n  if (args.listen) createListener(provider_);\n  let active = true;\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref31 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref31;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref32 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref32;\n    const provider_2 = webSocketProvider ?? provider;\n\n    if (args.listen && !args.chainId && provider_2) {\n      createListener(provider_2);\n    }\n\n    const blockNumber = await fetchBlockNumber({\n      chainId: args.chainId\n    });\n    if (!active) return;\n    callback(blockNumber);\n  }, {\n    equalityFn: shallow2\n  });\n  return () => {\n    active = false;\n    unsubscribe();\n    provider_?.off(\"block\", debouncedCallback);\n    previousProvider?.off(\"block\", debouncedCallback);\n  };\n} // src/actions/contracts/watchMulticall.ts\n\n\nfunction watchMulticall(config, callback) {\n  const client2 = getClient();\n\n  const handleChange = async () => callback(await multicall(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref33 => {\n    let {\n      provider\n    } = _ref33;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n} // src/actions/contracts/watchReadContract.ts\n\n\nfunction watchReadContract(config, callback) {\n  const client2 = getClient();\n\n  const handleChange = async () => callback(await readContract(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref34 => {\n    let {\n      provider\n    } = _ref34;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n} // src/actions/contracts/watchReadContracts.ts\n\n\nfunction watchReadContracts(config, callback) {\n  const client2 = getClient();\n\n  const handleChange = async () => callback(await readContracts(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(_ref35 => {\n    let {\n      provider\n    } = _ref35;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n} // src/actions/transactions/fetchTransaction.ts\n\n\nasync function fetchTransaction(_ref36) {\n  let {\n    chainId,\n    hash\n  } = _ref36;\n  const provider = getProvider({\n    chainId\n  });\n  return provider.getTransaction(hash);\n} // src/actions/transactions/prepareSendTransaction.ts\n\n\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\"; // src/actions/ens/fetchEnsAddress.ts\n\nimport { getAddress } from \"ethers/lib/utils.js\";\n\nasync function fetchEnsAddress(_ref37) {\n  let {\n    chainId,\n    name\n  } = _ref37;\n  const provider = getProvider({\n    chainId\n  });\n  const address = await provider.resolveName(name);\n\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n} // src/actions/ens/fetchEnsAvatar.ts\n\n\nasync function fetchEnsAvatar(_ref38) {\n  let {\n    address,\n    chainId\n  } = _ref38;\n  const provider = getProvider({\n    chainId\n  });\n  const avatar = await provider.getAvatar(address);\n  return avatar;\n} // src/actions/ens/fetchEnsName.ts\n\n\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\n\nasync function fetchEnsName(_ref39) {\n  let {\n    address,\n    chainId\n  } = _ref39;\n  const provider = getProvider({\n    chainId\n  });\n  return provider.lookupAddress(getAddress2(address));\n} // src/actions/ens/fetchEnsResolver.ts\n\n\nasync function fetchEnsResolver(_ref40) {\n  let {\n    chainId,\n    name\n  } = _ref40;\n  const provider = getProvider({\n    chainId\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n} // src/actions/transactions/prepareSendTransaction.ts\n\n\nasync function prepareSendTransaction(_ref41) {\n  let {\n    chainId,\n    request,\n    signer: signer_\n  } = _ref41;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  const [to, gasLimit] = await Promise.all([isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({\n    name: request.to\n  }), request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)]);\n  if (!to) throw new Error(\"Could not resolve ENS name\");\n  return { ...(chainId ? {\n      chainId\n    } : {}),\n    request: { ...request,\n      gasLimit,\n      to\n    },\n    mode: \"prepared\"\n  };\n} // src/actions/transactions/sendTransaction.ts\n\n\nasync function sendTransaction(_ref42) {\n  let {\n    chainId,\n    mode,\n    request\n  } = _ref42;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n\n  if (mode === \"prepared\") {\n    if (!request.gasLimit) throw new Error(\"`gasLimit` is required\");\n    if (!request.to) throw new Error(\"`to` is required\");\n  }\n\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n\n  try {\n    const uncheckedSigner = signer.connectUnchecked?.();\n    const {\n      hash,\n      wait\n    } = await (uncheckedSigner ?? signer).sendTransaction(request);\n    return {\n      hash,\n      wait\n    };\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\") throw new UserRejectedRequestError(error);\n    throw error;\n  }\n} // src/actions/transactions/waitForTransaction.ts\n\n\nimport { toUtf8String } from \"ethers/lib/utils.js\"; // src/actions/network-status/fetchFeeData.ts\n\nimport { formatUnits as formatUnits2 } from \"ethers/lib/utils.js\";\n\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units2 = \"wei\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits2(feeData.gasPrice, units2) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits2(feeData.maxFeePerGas, units2) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits2(feeData.maxPriorityFeePerGas, units2) : null\n  };\n  return { ...feeData,\n    formatted\n  };\n} // src/actions/transactions/waitForTransaction.ts\n\n\nasync function waitForTransaction(_ref43) {\n  let {\n    chainId,\n    confirmations = 1,\n    hash,\n    onSpeedUp,\n    timeout = 0\n  } = _ref43;\n  const provider = getProvider({\n    chainId\n  });\n  const [blockNumber, transaction] = await Promise.all([fetchBlockNumber(), fetchTransaction({\n    hash\n  })]);\n  let replaceable = null;\n\n  if (confirmations !== 0 && transaction?.to) {\n    replaceable = {\n      data: transaction.data,\n      from: transaction.from,\n      nonce: transaction.nonce,\n      startBlock: blockNumber,\n      to: transaction.to,\n      value: transaction.value\n    };\n  }\n\n  try {\n    const receipt = await provider._waitForTransaction(hash, confirmations, timeout, replaceable);\n\n    if (receipt.status === 0) {\n      const code = await provider.call(receipt, receipt.blockNumber);\n      const reason = toUtf8String(`0x${code.substring(138)}`);\n      throw new Error(reason);\n    }\n\n    return receipt;\n  } catch (err) {\n    if (err?.reason === \"repriced\") {\n      onSpeedUp?.(err.replacement);\n      return waitForTransaction({\n        hash: err.replacement?.hash,\n        confirmations,\n        timeout\n      });\n    }\n\n    throw err;\n  }\n} // src/actions/transactions/watchPendingTransactions.ts\n\n\nimport { shallow as shallow3 } from \"zustand/shallow\";\n\nfunction watchPendingTransactions(args, callback) {\n  let previousProvider;\n\n  const createListener = provider => {\n    if (previousProvider) {\n      previousProvider?.off(\"pending\", callback);\n    }\n\n    provider.on(\"pending\", callback);\n    previousProvider = provider;\n  };\n\n  const provider_ = getWebSocketProvider({\n    chainId: args.chainId\n  }) ?? getProvider({\n    chainId: args.chainId\n  });\n  createListener(provider_);\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(_ref44 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref44;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref45 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref45;\n    const provider_2 = webSocketProvider ?? provider;\n\n    if (!args.chainId && provider_2) {\n      createListener(provider_2);\n    }\n  }, {\n    equalityFn: shallow3\n  });\n  return () => {\n    unsubscribe();\n    provider_?.off(\"pending\", callback);\n    previousProvider?.off(\"pending\", callback);\n  };\n} // src/actions/contracts/writeContract.ts\n\n\nasync function writeContract(config) {\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  if (config.chainId) assertActiveChain({\n    chainId: config.chainId,\n    signer\n  });\n  let request;\n\n  if (config.mode === \"prepared\") {\n    request = config.request;\n  } else {\n    request = (await prepareWriteContract({\n      address: config.address,\n      args: config.args,\n      chainId: config.chainId,\n      abi: config.abi,\n      functionName: config.functionName,\n      overrides: config.overrides\n    })).request;\n  }\n\n  const transaction = await sendTransaction({\n    request,\n    mode: \"prepared\"\n  });\n  return transaction;\n} // src/actions/accounts/fetchBalance.ts\n\n\nasync function fetchBalance(_ref46) {\n  let {\n    address,\n    chainId,\n    formatUnits: unit,\n    token\n  } = _ref46;\n  const client2 = getClient();\n  const provider = getProvider({\n    chainId\n  });\n\n  if (token) {\n    const fetchContractBalance = async _ref47 => {\n      let {\n        abi\n      } = _ref47;\n      const erc20Config = {\n        abi,\n        address: token,\n        chainId\n      };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [{ ...erc20Config,\n          functionName: \"balanceOf\",\n          args: [address]\n        }, { ...erc20Config,\n          functionName: \"decimals\"\n        }, { ...erc20Config,\n          functionName: \"symbol\"\n        }]\n      });\n      return {\n        decimals,\n        formatted: formatUnits3(value2 ?? \"0\", unit ?? decimals),\n        symbol,\n        value: value2\n      };\n    };\n\n    try {\n      return await fetchContractBalance({\n        abi: erc20ABI\n      });\n    } catch (err) {\n      if (err instanceof ContractResultDecodeError) {\n        const {\n          symbol,\n          ...rest\n        } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: parseBytes32String2(symbol),\n          ...rest\n        };\n      }\n\n      throw err;\n    }\n  }\n\n  const chains = [...(client2.provider.chains || []), ...(client2.chains ?? [])];\n  const value = await provider.getBalance(address);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits3(value ?? \"0\", unit ?? \"ether\"),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n} // src/actions/accounts/fetchSigner.ts\n\n\nasync function fetchSigner() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client2 = getClient();\n  const signer = (await client2.connector?.getSigner?.({\n    chainId\n  })) || null;\n  return signer;\n} // src/actions/accounts/getAccount.ts\n\n\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getClient();\n\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n} // src/actions/accounts/getNetwork.ts\n\n\nfunction getNetwork() {\n  const client2 = getClient();\n  const chainId = client2.data?.chain?.id;\n  const activeChains = client2.chains ?? [];\n  const activeChain = [...(client2.provider.chains || []), ...activeChains].find(x => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: {\n      name: \"Ether\",\n      decimals: 18,\n      symbol: \"ETH\"\n    },\n    rpcUrls: {\n      default: {\n        http: [\"\"]\n      },\n      public: {\n        http: [\"\"]\n      }\n    }\n  };\n  return {\n    chain: chainId ? { ...activeChain,\n      ...client2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n} // src/actions/accounts/signMessage.ts\n\n\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\") throw new UserRejectedRequestError(error);\n    throw error;\n  }\n} // src/actions/accounts/signTypedData.ts\n\n\nasync function signTypedData(_ref48) {\n  let {\n    domain,\n    types,\n    value\n  } = _ref48;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  const {\n    chainId: chainId_\n  } = domain;\n  const chainId = chainId_ ? normalizeChainId(chainId_) : void 0;\n  if (chainId) assertActiveChain({\n    chainId,\n    signer\n  });\n  const types_ = Object.entries(types).filter(_ref49 => {\n    let [key] = _ref49;\n    return key !== \"EIP712Domain\";\n  }).reduce((types2, _ref50) => {\n    let [key, attributes] = _ref50;\n    types2[key] = attributes.filter(attr => attr.type !== \"EIP712Domain\");\n    return types2;\n  }, {});\n\n  try {\n    return await signer._signTypedData(domain, types_, value);\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\") throw new UserRejectedRequestError(error);\n    throw error;\n  }\n} // src/actions/accounts/switchNetwork.ts\n\n\nasync function switchNetwork(_ref51) {\n  let {\n    chainId\n  } = _ref51;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return connector.switchChain(chainId);\n} // src/actions/accounts/watchAccount.ts\n\n\nimport { shallow as shallow4 } from \"zustand/shallow\";\n\nfunction watchAccount(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client2 = getClient();\n\n  const handleChange = () => callback(getAccount());\n\n  const unsubscribe = client2.subscribe(_ref52 => {\n    let {\n      data,\n      connector,\n      status\n    } = _ref52;\n    return selector({\n      address: data?.account,\n      connector,\n      status\n    });\n  }, handleChange, {\n    equalityFn: shallow4\n  });\n  return unsubscribe;\n} // src/actions/accounts/watchNetwork.ts\n\n\nimport { shallow as shallow5 } from \"zustand/shallow\";\n\nfunction watchNetwork(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client2 = getClient();\n\n  const handleChange = () => callback(getNetwork());\n\n  const unsubscribe = client2.subscribe(_ref53 => {\n    let {\n      data,\n      chains\n    } = _ref53;\n    return selector({\n      chainId: data?.chain?.id,\n      chains\n    });\n  }, handleChange, {\n    equalityFn: shallow5\n  });\n  return unsubscribe;\n} // src/actions/accounts/watchSigner.ts\n\n\nimport { shallow as shallow6 } from \"zustand/shallow\";\n\nfunction watchSigner(_ref54, callback) {\n  let {\n    chainId\n  } = _ref54;\n  const client2 = getClient();\n\n  const handleChange = async () => {\n    const signer = await fetchSigner({\n      chainId\n    });\n    if (!getClient().connector) return callback(null);\n    return callback(signer);\n  };\n\n  const unsubscribe = client2.subscribe(_ref55 => {\n    let {\n      data,\n      connector\n    } = _ref55;\n    return {\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: shallow6\n  });\n  return unsubscribe;\n} // src/errors.ts\n\n\nvar RpcError = class extends Error {\n  constructor(message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== \"string\") throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n\n};\nvar ProviderRpcError = class extends RpcError {\n  constructor(message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999)) throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n\n};\nvar AddChainError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"AddChainError\";\n    this.message = \"Error adding chain\";\n  }\n\n};\nvar ChainDoesNotSupportMulticallError = class extends Error {\n  constructor(_ref56) {\n    let {\n      blockNumber,\n      chain\n    } = _ref56;\n    super(`Chain \"${chain.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`);\n    this.name = \"ChainDoesNotSupportMulticall\";\n  }\n\n};\nvar ChainMismatchError = class extends Error {\n  constructor(_ref57) {\n    let {\n      activeChain,\n      targetChain\n    } = _ref57;\n    super(`Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`);\n    this.name = \"ChainMismatchError\";\n  }\n\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor(_ref58) {\n    let {\n      chainId,\n      connectorId\n    } = _ref58;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfigured\";\n  }\n\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n\n};\nvar ContractMethodDoesNotExistError = class extends Error {\n  constructor(_ref59) {\n    let {\n      address,\n      chainId,\n      functionName\n    } = _ref59;\n    const {\n      chains,\n      network\n    } = getProvider();\n    const chain = chains?.find(_ref60 => {\n      let {\n        id\n      } = _ref60;\n      return id === (chainId || network.chainId);\n    });\n    const blockExplorer = chain?.blockExplorers?.default;\n    super([`Function \"${functionName}\" on contract \"${address}\" does not exist.`, ...(blockExplorer ? [\"\", `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`] : [])].join(\"\\n\"));\n    this.name = \"ContractMethodDoesNotExistError\";\n  }\n\n};\nvar ContractMethodNoResultError = class extends Error {\n  constructor(_ref61) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName\n    } = _ref61;\n    super([\"Contract read returned an empty response. This could be due to any of the following:\", `- The contract does not have the function \"${functionName}\",`, \"- The parameters passed to the contract function may be invalid, or\", \"- The address is not a contract.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId,\n      args\n    }, null, 2)].join(\"\\n\"));\n    this.name = \"ContractMethodNoResultError\";\n  }\n\n};\nvar ContractMethodRevertedError = class extends Error {\n  constructor(_ref62) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName,\n      errorMessage\n    } = _ref62;\n    super([\"Contract method reverted with an error.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId,\n      args\n    }, null, 2), \"\", `Details: ${errorMessage}`].join(\"\\n\"));\n    this.name = \"ContractMethodRevertedError\";\n  }\n\n};\nvar ContractResultDecodeError = class extends Error {\n  constructor(_ref63) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName,\n      errorMessage\n    } = _ref63;\n    super([\"Failed to decode contract function result.\", \"\", `Config:`, JSON.stringify({\n      address,\n      abi: \"...\",\n      functionName,\n      chainId,\n      args\n    }, null, 2), \"\", `Details: ${errorMessage}`].join(\"\\n\"));\n    this.name = \"ContractResultDecodeError\";\n  }\n\n};\nvar ProviderChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ProviderChainsNotFound\";\n    this.message = [\"No chains were found on the wagmi provider. Some functions that require a chain may not work.\", \"\", \"It is recommended to add a list of chains to the provider in `createClient`.\", \"\", \"Example:\", \"\", \"```\", \"import { getDefaultProvider } from 'ethers'\", \"import { chain, createClient } from 'wagmi'\", \"\", \"createClient({\", \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\", \"})\", \"```\"].join(\"\\n\");\n  }\n\n};\nvar ResourceUnavailableError = class extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    this.name = \"ResourceUnavailable\";\n  }\n\n};\nvar SwitchChainError = class extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    this.name = \"SwitchChainError\";\n  }\n\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor(_ref64) {\n    let {\n      connector\n    } = _ref64;\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n\n};\nvar UserRejectedRequestError = class extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    this.name = \"UserRejectedRequestError\";\n  }\n\n};\nexport { configureChains, RpcError, ProviderRpcError, AddChainError, ChainDoesNotSupportMulticallError, ChainMismatchError, ChainNotConfiguredError, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ContractMethodDoesNotExistError, ContractMethodNoResultError, ContractMethodRevertedError, ContractResultDecodeError, ProviderChainsNotFound, ResourceUnavailableError, SwitchChainError, SwitchChainNotSupportedError, UserRejectedRequestError, debounce, deepEqual, deserialize, minimizeContractInterface, normalizeChainId, parseContractResult, serialize, noopStorage, createStorage, Client, createClient, getClient, connect, disconnect, erc20ABI, erc721ABI, erc4626ABI, units, fetchToken, getContract, prepareWriteContract, getProvider, getWebSocketProvider, watchProvider, watchWebSocketProvider, multicall, readContract, readContracts, watchContractEvent, fetchBlockNumber, watchBlockNumber, watchMulticall, watchReadContract, watchReadContracts, fetchTransaction, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, prepareSendTransaction, sendTransaction, fetchFeeData, waitForTransaction, watchPendingTransactions, writeContract, fetchBalance, fetchSigner, getAccount, getNetwork, signMessage, signTypedData, switchNetwork, watchAccount, watchNetwork, watchSigner };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateMethod","__privateSet","providers","configureChains","defaultChains","providers2","minQuorum","pollingInterval","targetQuorum","stallTimeout","length","Error","chains","providers_","webSocketProviders_","chain","configExists","provider","apiConfig","some","id","webSocketProvider","name","join","chainId","activeChain","find","x","chainProviders","fallbackProvider","formatter","formats","block","difficulty","gasLimit","Object","assign","chainWebSocketProviders","FallbackProvider","map","chainProvider","index","priority","weight","error","message","includes","persist","subscribeWithSelector","createStore","assertActiveChain","signer","getNetwork","activeChainId","ChainMismatchError","targetChain","signerChainId","network","connector","getClient","ChainNotConfiguredError","connectorId","debounce","fn","waitTime","timeout","args","clearTimeout","setTimeout","deepEqual","a","b","constructor","i","Array","isArray","valueOf","prototype","toString","keys","hasOwnProperty","call","key","BigNumber","findAndReplace","cacheRef","replace","item","entries","reduce","curr","value","deserialize","cachedString","cache","JSON","parse","deserializedCacheWithBigNumbers","data","type","from","hex","BigNumber2","FunctionFragment","isAddress","normalizeFunctionName","contract","functionName","functions","argsLength","overloadFunctions","filter","startsWith","fragment","fromString","inputs","overloadFunction","matched","every","arg","abiParameter","isArgOfType","argType","abiParameterType","values","components","component","test","isBigNumber","Uint8Array","logWarn","config","logger","warn","Contract","FormatTypes","minimizeContractInterface","minimizedAbi","abi","getInterface","format","full","minimizedInterface","normalizeChainId","Number","parseInt","trim","substring","Contract2","isPlainArray","parseContractResult","iface","getFunction","isTuple","outputs","data_","encodedResult","encodeFunctionResult","decodedResult","decodeFunctionResult","getReferenceKey","cutoff","slice","getCutoff","array","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","splice","valueCutoff","serialize","indent","stringify","noopStorage","getItem","_key","setItem","_value","removeItem","createStorage","deserialize2","prefix","serialize2","storage","defaultState","console","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","addEffects_fn","Client","autoConnect","connectors","window","localStorage","Map","webSocketProviders","status","rawState","state","account","_error","store","getProvider","getWebSocketProvider","partialize","version","getState","lastUsedChainId","subscribe","setState","updater","newState","clearState","destroy","disconnect","sorted","sort","connected","ready","isAuthorized","connect","bust","provider_","get","set","webSocketProvider_","setLastUsedConnector","lastUsedConnector","WeakMap","WeakSet","onChange","onDisconnect","onError","prevConnector","off","on","subscribeProvider","subscribeWebSocketProvider","client","createClient","client_","client2","activeConnector","ConnectorAlreadyConnectedError","formatUnits","formatUnits3","parseBytes32String","parseBytes32String2","erc20ABI","indexed","stateMutability","erc20ABI_bytes32","erc721ABI","multicallABI","erc4626ABI","anonymous","units","fetchToken","address","units2","fetchToken_","erc20Config","decimals","symbol","totalSupply","readContracts","allowFailure","contracts","formatted","ContractResultDecodeError","rest","EthersContract","getContract","signerOrProvider","prepareWriteContract","overrides","signer_","fetchSigner","ConnectorNotFoundError","normalizedFunctionName","populateTransactionFn","populateTransaction","ContractMethodDoesNotExistError","params","unsignedTransaction","estimateGas","mode","request","watchProvider","callback","handleChange","unsubscribe","watchWebSocketProvider","multicall","ProviderChainsNotFound","chain2","multicall3","ChainDoesNotSupportMulticallError","blockTag","blockCreated","blockNumber","multicallContract","calls","params2","contractFunction","callData","interface","encodeFunctionData","target","results","aggregate3","returnData","success","ContractMethodRevertedError","errorMessage","ContractMethodNoResultError","result","readContract","contractsByChainId","contracts2","promises","multicallResults","Promise","allSettled","reason","flat","all","resultIndexes","shallow","watchContractEvent","eventName","once","handler","watchEvent","equalityFn","shallow2","fetchBlockNumber","getBlockNumber","watchBlockNumber","debouncedCallback","previousProvider","createListener","listen","active","provider_2","watchMulticall","unwatch","listenToBlock","watchReadContract","watchReadContracts","fetchTransaction","hash","getTransaction","isAddress2","getAddress","fetchEnsAddress","resolveName","fetchEnsAvatar","avatar","getAvatar","getAddress2","fetchEnsName","lookupAddress","fetchEnsResolver","resolver","getResolver","prepareSendTransaction","to","resolve","sendTransaction","uncheckedSigner","connectUnchecked","wait","code","UserRejectedRequestError","toUtf8String","formatUnits2","fetchFeeData","feeData","getFeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","waitForTransaction","confirmations","onSpeedUp","transaction","replaceable","nonce","startBlock","receipt","_waitForTransaction","replacement","shallow3","watchPendingTransactions","writeContract","fetchBalance","unit","token","fetchContractBalance","value2","getBalance","nativeCurrency","getSigner","getAccount","isConnected","isConnecting","isDisconnected","isReconnecting","activeChains","rpcUrls","default","http","public","signMessage","signTypedData","domain","types","chainId_","types_","types2","attributes","attr","_signTypedData","switchNetwork","switchChain","SwitchChainNotSupportedError","shallow4","watchAccount","selector","shallow5","watchNetwork","shallow6","watchSigner","RpcError","options","cause","isInteger","ProviderRpcError","AddChainError","arguments","blockExplorer","blockExplorers","url","ResourceUnavailableError","SwitchChainError"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@wagmi/core/dist/chunk-55IO54NW.js"],"sourcesContent":["import {\n  InjectedConnector\n} from \"./chunk-BVC4KGLQ.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { providers } from \"ethers\";\nfunction configureChains(defaultChains, providers2, {\n  minQuorum = 1,\n  pollingInterval = 4e3,\n  targetQuorum = 1,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length)\n    throw new Error(\"must have at least one chain\");\n  if (targetQuorum < minQuorum)\n    throw new Error(\"quorum cannot be lower than minQuorum\");\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers2) {\n      const apiConfig = provider(chain);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      providers_[chain.id] = [\n        ...providers_[chain.id] || [],\n        apiConfig.provider\n      ];\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [\n          ...webSocketProviders_[chain.id] || [],\n          apiConfig.webSocketProvider\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    provider: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainProviders = providers_[activeChain.id];\n      if (!chainProviders || !chainProviders[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      let provider;\n      if (chainProviders.length === 1) {\n        provider = chainProviders[0]();\n      } else {\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n          stallTimeout\n        });\n      }\n      if (activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider, {\n        chains,\n        pollingInterval\n      });\n    },\n    webSocketProvider: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\n      if (!chainWebSocketProviders)\n        return void 0;\n      const provider = chainWebSocketProviders[0]?.();\n      if (provider && activeChain.id === 42220) {\n        provider.formatter.formats.block = {\n          ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n      return Object.assign(provider || {}, {\n        chains\n      });\n    }\n  };\n}\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, { stallTimeout }) {\n  try {\n    return new providers.FallbackProvider(\n      providers_.map((chainProvider, index) => {\n        const provider = chainProvider();\n        return {\n          provider,\n          priority: provider.priority ?? index,\n          stallTimeout: provider.stallTimeout ?? stallTimeout,\n          weight: provider.weight\n        };\n      }),\n      targetQuorum\n    );\n  } catch (error) {\n    if (error?.message?.includes(\n      \"quorum will always fail; larger than total weight\"\n    )) {\n      if (targetQuorum === minQuorum)\n        throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n    throw error;\n  }\n}\n\n// src/client.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({\n  chainId,\n  signer\n}) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n  if (signer) {\n    const signerChainId = signer.provider?.network?.chainId;\n    if (signerChainId && chainId !== signerChainId) {\n      const connector = getClient().connector;\n      throw new ChainNotConfiguredError({\n        chainId,\n        connectorId: connector?.id ?? \"unknown\"\n      });\n    }\n  }\n}\n\n// src/utils/debounce.ts\nfunction debounce(fn, waitTime = 0) {\n  let timeout;\n  return function(...args) {\n    if (!waitTime)\n      return fn(...args);\n    if (timeout)\n      clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      fn(...args);\n    }, waitTime);\n  };\n}\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nimport { BigNumber } from \"ethers\";\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: (data) => data.type === \"BigNumber\",\n    replace: (data) => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n\n// src/utils/normalizeFunctionName.ts\nimport { BigNumber as BigNumber2 } from \"ethers\";\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\nfunction normalizeFunctionName({\n  contract,\n  functionName,\n  args = []\n}) {\n  if (functionName in contract.functions)\n    return functionName;\n  const argsLength = args?.length ?? 0;\n  const overloadFunctions = Object.keys(contract.functions).filter((x) => x.startsWith(`${functionName}(`)).map((x) => ({ name: x, fragment: FunctionFragment.fromString(x) })).filter((x) => argsLength === x.fragment.inputs.length);\n  for (const overloadFunction of overloadFunctions) {\n    const matched = args.every((arg, index) => {\n      const abiParameter = overloadFunction.fragment.inputs[index];\n      return isArgOfType(arg, abiParameter);\n    });\n    if (matched)\n      return overloadFunction.name;\n  }\n  return functionName;\n}\nfunction isArgOfType(arg, abiParameter) {\n  const argType = typeof arg;\n  const abiParameterType = abiParameter.type;\n  switch (abiParameterType) {\n    case \"address\":\n      return isAddress(arg);\n    case \"bool\":\n      return argType === \"boolean\";\n    case \"function\":\n      return argType === \"string\";\n    case \"string\":\n      return argType === \"string\";\n    default: {\n      if (abiParameterType === \"tuple\" && \"components\" in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg)[index],\n              component\n            );\n          }\n        );\n      if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n        abiParameterType\n      ))\n        return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === \"string\" || arg instanceof Uint8Array;\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return Array.isArray(arg) && arg.every(\n          (x) => isArgOfType(x, {\n            ...abiParameter,\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\n          })\n        );\n      }\n      return false;\n    }\n  }\n}\n\n// src/utils/logger.ts\nfunction logWarn(message) {\n  getClient()?.config.logger?.warn?.(message);\n}\n\n// src/utils/minimizeContractInterface.ts\nimport { Contract } from \"ethers\";\nimport { FormatTypes } from \"ethers/lib/utils.js\";\nfunction minimizeContractInterface(config) {\n  try {\n    const minimizedAbi = config.abi.filter(\n      (x) => x.type === \"function\" && x.name === config.functionName\n    );\n    if (minimizedAbi.length === 0)\n      throw new Error(\"Invalid ABI\");\n    return minimizedAbi;\n  } catch (error) {\n    const abi = Contract.getInterface(config.abi).format(\n      FormatTypes.full\n    );\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\n    return minimizedInterface.filter((i) => i.includes(config.functionName));\n  }\n}\n\n// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\")\n    return Number.parseInt(\n      chainId,\n      chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10\n    );\n  if (typeof chainId === \"bigint\")\n    return Number(chainId);\n  return chainId;\n}\n\n// src/utils/parseContractResult.ts\nimport { Contract as Contract2 } from \"ethers\";\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\nfunction parseContractResult({\n  abi,\n  data,\n  functionName\n}) {\n  if (data && isPlainArray(data)) {\n    const iface = Contract2.getInterface(abi);\n    const fragment = iface.getFunction(functionName);\n    const isTuple = (fragment.outputs?.length || 0) > 1;\n    const data_ = isTuple ? data : [data];\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(\n      functionName,\n      encodedResult\n    );\n    return isTuple ? decodedResult : decodedResult[0];\n  }\n  return data;\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer(replacer, circularReplacer),\n    indent ?? void 0\n  );\n}\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/client.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Client = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new InjectedConnector()],\n    provider,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketProvider\n  }) {\n    __privateAdd(this, _addEffects);\n    this.providers = /* @__PURE__ */ new Map();\n    this.webSocketProviders = /* @__PURE__ */ new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.config = {\n      autoConnect,\n      connectors,\n      logger,\n      provider,\n      storage,\n      webSocketProvider\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {\n      }\n    }\n    this.store = createStore(\n      subscribeWithSelector(\n        persist(\n          () => ({\n            connectors: typeof connectors === \"function\" ? connectors() : connectors,\n            provider: this.getProvider({ chainId }),\n            status,\n            webSocketProvider: this.getWebSocketProvider({ chainId })\n          }),\n          {\n            name: storeKey,\n            storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: state?.data?.account,\n                  chain: state?.data?.chain\n                }\n              },\n              chains: state?.chains\n            }),\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get provider() {\n    return this.store.getState().provider;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting))\n      return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  getProvider({ bust, chainId } = {}) {\n    let provider_ = this.providers.get(chainId ?? -1);\n    if (provider_ && !bust)\n      return provider_;\n    const { provider } = this.config;\n    provider_ = typeof provider === \"function\" ? provider({ chainId }) : provider;\n    this.providers.set(chainId ?? -1, provider_);\n    return provider_;\n  }\n  getWebSocketProvider({\n    bust,\n    chainId\n  } = {}) {\n    let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);\n    if (webSocketProvider_ && !bust)\n      return webSocketProvider_;\n    const { webSocketProvider } = this.config;\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({ chainId }) : webSocketProvider;\n    if (webSocketProvider_)\n      this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);\n    return webSocketProvider_;\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      prevConnector?.off?.(\"change\", onChange);\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\n      prevConnector?.off?.(\"error\", onError);\n      if (!connector)\n        return;\n      connector.on?.(\"change\", onChange);\n      connector.on?.(\"disconnect\", onDisconnect);\n      connector.on?.(\"error\", onError);\n    }\n  );\n  const { provider, webSocketProvider } = this.config;\n  const subscribeProvider = typeof provider === \"function\";\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\n  if (subscribeProvider || subscribeWebSocketProvider)\n    this.store.subscribe(\n      ({ data }) => data?.chain?.id,\n      (chainId) => {\n        this.setState((x) => ({\n          ...x,\n          provider: this.getProvider({ bust: true, chainId }),\n          webSocketProvider: this.getWebSocketProvider({\n            bust: true,\n            chainId\n          })\n        }));\n      }\n    );\n};\nvar client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error(\n      \"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\"\n    );\n  }\n  return client;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({\n  chainId,\n  connector\n}) {\n  const client2 = getClient();\n  const activeConnector = client2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    client2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId });\n    client2.setLastUsedConnector(connector.id);\n    client2.setState((x) => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    client2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    client2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const client2 = getClient();\n  if (client2.connector)\n    await client2.connector.disconnect();\n  client2.clearState();\n  client2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport { formatUnits as formatUnits3, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\";\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar multicallABI = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: \"target\",\n            type: \"address\"\n          },\n          {\n            name: \"allowFailure\",\n            type: \"bool\"\n          },\n          {\n            name: \"callData\",\n            type: \"bytes\"\n          }\n        ],\n        name: \"calls\",\n        type: \"tuple[]\"\n      }\n    ],\n    name: \"aggregate3\",\n    outputs: [\n      {\n        components: [\n          {\n            name: \"success\",\n            type: \"bool\"\n          },\n          {\n            name: \"returnData\",\n            type: \"bytes\"\n          }\n        ],\n        name: \"returnData\",\n        type: \"tuple[]\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/constants/units.ts\nvar units = [\n  \"wei\",\n  \"kwei\",\n  \"mwei\",\n  \"gwei\",\n  \"szabo\",\n  \"finney\",\n  \"ether\"\n];\n\n// src/actions/contracts/fetchToken.ts\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: units2 = \"ether\"\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, units2),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: parseBytes32String(name),\n        symbol: parseBytes32String(symbol),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/contracts/getContract.ts\nimport { Contract as EthersContract } from \"ethers\";\nfunction getContract({\n  address,\n  abi,\n  signerOrProvider\n}) {\n  return new EthersContract(\n    address,\n    abi,\n    signerOrProvider\n  );\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  chainId,\n  functionName,\n  overrides,\n  signer: signer_,\n  ...config\n}) {\n  const signer = signer_ ?? await fetchSigner({ chainId });\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId, signer });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: signer\n  });\n  const args = config.args;\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\n  if (!populateTransactionFn)\n    throw new ContractMethodDoesNotExistError({\n      address,\n      functionName: normalizedFunctionName\n    });\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\n  const unsignedTransaction = await populateTransactionFn(\n    ...params\n  );\n  const gasLimit = unsignedTransaction.gasLimit || await signer.estimateGas(unsignedTransaction);\n  const minimizedAbi = minimizeContractInterface({\n    abi,\n    functionName\n  });\n  return {\n    abi: minimizedAbi,\n    address,\n    chainId,\n    functionName,\n    mode: \"prepared\",\n    request: {\n      ...unsignedTransaction,\n      gasLimit\n    }\n  };\n}\n\n// src/actions/providers/getProvider.ts\nfunction getProvider({\n  chainId\n} = {}) {\n  const client2 = getClient();\n  if (chainId)\n    return client2.getProvider({ chainId }) || client2.provider;\n  return client2.provider;\n}\n\n// src/actions/providers/getWebSocketProvider.ts\nfunction getWebSocketProvider({\n  chainId\n} = {}) {\n  const client2 = getClient();\n  if (chainId)\n    return client2.getWebSocketProvider({ chainId }) || client2.webSocketProvider;\n  return client2.webSocketProvider;\n}\n\n// src/actions/providers/watchProvider.ts\nfunction watchProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getProvider(args));\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/providers/watchWebSocketProvider.ts\nfunction watchWebSocketProvider(args, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(getWebSocketProvider(args));\n  const unsubscribe = client2.subscribe(\n    ({ webSocketProvider }) => webSocketProvider,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  allowFailure = true,\n  chainId,\n  contracts,\n  overrides\n}) {\n  const provider = getProvider({ chainId });\n  if (!provider.chains)\n    throw new ProviderChainsNotFound();\n  const chain = provider.chains.find((chain2) => chain2.id === chainId) || provider.chains[0];\n  if (!chain)\n    throw new ProviderChainsNotFound();\n  if (!chain?.contracts?.multicall3)\n    throw new ChainDoesNotSupportMulticallError({ chain });\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < (chain.contracts.multicall3.blockCreated ?? 0))\n    throw new ChainDoesNotSupportMulticallError({\n      blockNumber: overrides?.blockTag,\n      chain\n    });\n  const multicallContract = getContract({\n    address: chain.contracts.multicall3.address,\n    abi: multicallABI,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(\n    ({ address, abi, functionName, ...config }) => {\n      const { args } = config || {};\n      const contract = getContract({ address, abi });\n      const params2 = args ?? [];\n      const normalizedFunctionName = normalizeFunctionName({\n        contract,\n        functionName,\n        args\n      });\n      try {\n        const contractFunction = contract[normalizedFunctionName];\n        if (!contractFunction)\n          logWarn(\n            `\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`\n          );\n        const callData = contract.interface.encodeFunctionData(\n          normalizedFunctionName,\n          params2\n        );\n        return {\n          target: address,\n          allowFailure,\n          callData\n        };\n      } catch (err) {\n        if (!allowFailure)\n          throw err;\n        return {\n          target: address,\n          allowFailure,\n          callData: \"0x\"\n        };\n      }\n    }\n  );\n  const params = [...[calls], ...overrides ? [overrides] : []];\n  const results = await multicallContract.aggregate3(\n    ...params\n  );\n  return results.map(({ returnData, success }, i) => {\n    const { address, abi, functionName, ...rest } = contracts[i];\n    const contract = getContract({\n      address,\n      abi\n    });\n    const args = rest.args;\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n    if (!success) {\n      let error;\n      try {\n        contract.interface.decodeFunctionResult(\n          normalizedFunctionName,\n          returnData\n        );\n      } catch (err) {\n        error = new ContractMethodRevertedError({\n          address,\n          args,\n          chainId: chain.id,\n          functionName: normalizedFunctionName,\n          errorMessage: err.message\n        });\n        if (!allowFailure)\n          throw error;\n        logWarn(error.message);\n      }\n      return null;\n    }\n    if (returnData === \"0x\") {\n      const error = new ContractMethodNoResultError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName\n      });\n      if (!allowFailure)\n        throw error;\n      logWarn(error.message);\n      return null;\n    }\n    try {\n      const result = contract.interface.decodeFunctionResult(\n        normalizedFunctionName,\n        returnData\n      );\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      const error = new ContractResultDecodeError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName,\n        errorMessage: err.message\n      });\n      if (!allowFailure)\n        throw error;\n      logWarn(error.message);\n      return null;\n    }\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  chainId,\n  abi,\n  functionName,\n  overrides,\n  ...config\n}) {\n  const provider = getProvider({ chainId });\n  const contract = getContract({\n    address,\n    abi,\n    signerOrProvider: provider\n  });\n  const args = config.args;\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const contractFunction = contract[normalizedFunctionName];\n  if (!contractFunction)\n    throw new ContractMethodDoesNotExistError({\n      address,\n      functionName: normalizedFunctionName\n    });\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\n  return contractFunction?.(...params);\n}\n\n// src/actions/contracts/readContracts.ts\nasync function readContracts({\n  allowFailure = true,\n  contracts,\n  overrides\n}) {\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? provider.network.chainId;\n      return {\n        ...contracts2,\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(({ contract }) => contract),\n        overrides\n      })\n    );\n    let multicallResults;\n    if (allowFailure) {\n      multicallResults = (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return result.value;\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          logWarn(result.reason.message);\n          throw result.reason;\n        }\n        return null;\n      }).flat();\n    } else {\n      multicallResults = (await Promise.all(promises())).flat();\n    }\n    const resultIndexes = Object.values(contractsByChainId).map((contracts2) => contracts2.map(({ index }) => index)).flat();\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError)\n      throw err;\n    if (err instanceof ContractMethodNoResultError)\n      throw err;\n    if (err instanceof ContractMethodRevertedError)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, overrides })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result, i) => {\n        if (result.status === \"fulfilled\")\n          return result.value;\n        const { address, args, chainId, functionName } = contracts[i];\n        const error = new ContractMethodRevertedError({\n          address,\n          functionName,\n          chainId: chainId ?? 1,\n          args,\n          errorMessage: result.reason\n        });\n        logWarn(error.message);\n        return null;\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName,\n  once\n}, callback) {\n  const handler = (...event) => callback(...event);\n  let contract;\n  const watchEvent = async () => {\n    if (contract)\n      contract?.off(eventName, handler);\n    const signerOrProvider = getWebSocketProvider({ chainId }) || getProvider({ chainId });\n    contract = getContract({\n      address,\n      abi,\n      signerOrProvider\n    });\n    if (once)\n      contract.once(eventName, handler);\n    else\n      contract.on(eventName, handler);\n  };\n  watchEvent();\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(\n    ({ provider, webSocketProvider }) => ({\n      provider,\n      webSocketProvider\n    }),\n    watchEvent,\n    { equalityFn: shallow }\n  );\n  return () => {\n    contract?.off(eventName, handler);\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const provider = getProvider({ chainId });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nfunction watchBlockNumber(args, callback) {\n  const debouncedCallback = debounce(callback, 1);\n  let previousProvider;\n  const createListener = (provider) => {\n    if (previousProvider) {\n      previousProvider?.off(\"block\", debouncedCallback);\n    }\n    provider.on(\"block\", debouncedCallback);\n    previousProvider = provider;\n  };\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\n  if (args.listen)\n    createListener(provider_);\n  let active = true;\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\n    async ({ provider, webSocketProvider }) => {\n      const provider_2 = webSocketProvider ?? provider;\n      if (args.listen && !args.chainId && provider_2) {\n        createListener(provider_2);\n      }\n      const blockNumber = await fetchBlockNumber({ chainId: args.chainId });\n      if (!active)\n        return;\n      callback(blockNumber);\n    },\n    {\n      equalityFn: shallow2\n    }\n  );\n  return () => {\n    active = false;\n    unsubscribe();\n    provider_?.off(\"block\", debouncedCallback);\n    previousProvider?.off(\"block\", debouncedCallback);\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await multicall(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContract(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(config, callback) {\n  const client2 = getClient();\n  const handleChange = async () => callback(await readContracts(config));\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const provider = getProvider({ chainId });\n  return provider.getTransaction(hash);\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\";\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"ethers/lib/utils.js\";\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const provider = getProvider({ chainId });\n  const address = await provider.resolveName(name);\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nasync function fetchEnsAvatar({\n  address,\n  chainId\n}) {\n  const provider = getProvider({ chainId });\n  const avatar = await provider.getAvatar(address);\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const provider = getProvider({ chainId });\n  return provider.lookupAddress(getAddress2(address));\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const provider = getProvider({ chainId });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nasync function prepareSendTransaction({\n  chainId,\n  request,\n  signer: signer_\n}) {\n  const signer = signer_ ?? await fetchSigner({ chainId });\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId, signer });\n  const [to, gasLimit] = await Promise.all([\n    isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({ name: request.to }),\n    request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)\n  ]);\n  if (!to)\n    throw new Error(\"Could not resolve ENS name\");\n  return {\n    ...chainId ? { chainId } : {},\n    request: { ...request, gasLimit, to },\n    mode: \"prepared\"\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  chainId,\n  mode,\n  request\n}) {\n  const signer = await fetchSigner();\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (mode === \"prepared\") {\n    if (!request.gasLimit)\n      throw new Error(\"`gasLimit` is required\");\n    if (!request.to)\n      throw new Error(\"`to` is required\");\n  }\n  if (chainId)\n    assertActiveChain({ chainId, signer });\n  try {\n    const uncheckedSigner = signer.connectUnchecked?.();\n    const { hash, wait } = await (uncheckedSigner ?? signer).sendTransaction(\n      request\n    );\n    return { hash, wait };\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\n      throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { toUtf8String } from \"ethers/lib/utils.js\";\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits2 } from \"ethers/lib/utils.js\";\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units2 = \"wei\"\n} = {}) {\n  const provider = getProvider({ chainId });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits2(feeData.gasPrice, units2) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits2(feeData.maxFeePerGas, units2) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits2(feeData.maxPriorityFeePerGas, units2) : null\n  };\n  return { ...feeData, formatted };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onSpeedUp,\n  timeout = 0\n}) {\n  const provider = getProvider({ chainId });\n  const [blockNumber, transaction] = await Promise.all([\n    fetchBlockNumber(),\n    fetchTransaction({ hash })\n  ]);\n  let replaceable = null;\n  if (confirmations !== 0 && transaction?.to) {\n    replaceable = {\n      data: transaction.data,\n      from: transaction.from,\n      nonce: transaction.nonce,\n      startBlock: blockNumber,\n      to: transaction.to,\n      value: transaction.value\n    };\n  }\n  try {\n    const receipt = await provider._waitForTransaction(\n      hash,\n      confirmations,\n      timeout,\n      replaceable\n    );\n    if (receipt.status === 0) {\n      const code = await provider.call(receipt, receipt.blockNumber);\n      const reason = toUtf8String(`0x${code.substring(138)}`);\n      throw new Error(reason);\n    }\n    return receipt;\n  } catch (err) {\n    if (err?.reason === \"repriced\") {\n      onSpeedUp?.(err.replacement);\n      return waitForTransaction({\n        hash: err.replacement?.hash,\n        confirmations,\n        timeout\n      });\n    }\n    throw err;\n  }\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let previousProvider;\n  const createListener = (provider) => {\n    if (previousProvider) {\n      previousProvider?.off(\"pending\", callback);\n    }\n    provider.on(\"pending\", callback);\n    previousProvider = provider;\n  };\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\n  createListener(provider_);\n  const client2 = getClient();\n  const unsubscribe = client2.subscribe(\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\n    async ({ provider, webSocketProvider }) => {\n      const provider_2 = webSocketProvider ?? provider;\n      if (!args.chainId && provider_2) {\n        createListener(provider_2);\n      }\n    },\n    {\n      equalityFn: shallow3\n    }\n  );\n  return () => {\n    unsubscribe();\n    provider_?.off(\"pending\", callback);\n    previousProvider?.off(\"pending\", callback);\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config) {\n  const signer = await fetchSigner();\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  if (config.chainId)\n    assertActiveChain({ chainId: config.chainId, signer });\n  let request;\n  if (config.mode === \"prepared\") {\n    request = config.request;\n  } else {\n    request = (await prepareWriteContract({\n      address: config.address,\n      args: config.args,\n      chainId: config.chainId,\n      abi: config.abi,\n      functionName: config.functionName,\n      overrides: config.overrides\n    })).request;\n  }\n  const transaction = await sendTransaction({\n    request,\n    mode: \"prepared\"\n  });\n  return transaction;\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const client2 = getClient();\n  const provider = getProvider({ chainId });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: formatUnits3(value2 ?? \"0\", unit ?? decimals),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof ContractResultDecodeError) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: parseBytes32String2(symbol),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [...client2.provider.chains || [], ...client2.chains ?? []];\n  const value = await provider.getBalance(address);\n  const chain = chains.find((x) => x.id === provider.network.chainId);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits3(value ?? \"0\", unit ?? \"ether\"),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/fetchSigner.ts\nasync function fetchSigner({\n  chainId\n} = {}) {\n  const client2 = getClient();\n  const signer = await client2.connector?.getSigner?.({ chainId }) || null;\n  return signer;\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getClient();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const client2 = getClient();\n  const chainId = client2.data?.chain?.id;\n  const activeChains = client2.chains ?? [];\n  const activeChain = [...client2.provider.chains || [], ...activeChains].find(\n    (x) => x.id === chainId\n  ) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n    rpcUrls: {\n      default: { http: [\"\"] },\n      public: { http: [\"\"] }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...client2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer)\n      throw new ConnectorNotFoundError();\n    return await signer.signMessage(\n      args.message\n    );\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\n      throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  types,\n  value\n}) {\n  const signer = await fetchSigner();\n  if (!signer)\n    throw new ConnectorNotFoundError();\n  const { chainId: chainId_ } = domain;\n  const chainId = chainId_ ? normalizeChainId(chainId_) : void 0;\n  if (chainId)\n    assertActiveChain({ chainId, signer });\n  const types_ = Object.entries(types).filter(([key]) => key !== \"EIP712Domain\").reduce((types2, [key, attributes]) => {\n    types2[key] = attributes.filter((attr) => attr.type !== \"EIP712Domain\");\n    return types2;\n  }, {});\n  try {\n    return await signer._signTypedData(domain, types_, value);\n  } catch (error) {\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\n      throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const { connector } = getClient();\n  if (!connector)\n    throw new ConnectorNotFoundError();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const client2 = getClient();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = client2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: data?.account,\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: shallow4\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const client2 = getClient();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = client2.subscribe(\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\n    handleChange,\n    {\n      equalityFn: shallow5\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchSigner.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchSigner({ chainId }, callback) {\n  const client2 = getClient();\n  const handleChange = async () => {\n    const signer = await fetchSigner({ chainId });\n    if (!getClient().connector)\n      return callback(null);\n    return callback(signer);\n  };\n  const unsubscribe = client2.subscribe(\n    ({ data, connector }) => ({\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: shallow6\n    }\n  );\n  return unsubscribe;\n}\n\n// src/errors.ts\nvar RpcError = class extends Error {\n  constructor(message, options) {\n    const { cause, code, data } = options;\n    if (!Number.isInteger(code))\n      throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== \"string\")\n      throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n};\nvar ProviderRpcError = class extends RpcError {\n  constructor(message, options) {\n    const { cause, code, data } = options;\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999))\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      );\n    super(message, { cause, code, data });\n  }\n};\nvar AddChainError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"AddChainError\";\n    this.message = \"Error adding chain\";\n  }\n};\nvar ChainDoesNotSupportMulticallError = class extends Error {\n  constructor({ blockNumber, chain }) {\n    super(\n      `Chain \"${chain.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`\n    );\n    this.name = \"ChainDoesNotSupportMulticall\";\n  }\n};\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\nvar ContractMethodDoesNotExistError = class extends Error {\n  constructor({\n    address,\n    chainId,\n    functionName\n  }) {\n    const { chains, network } = getProvider();\n    const chain = chains?.find(({ id }) => id === (chainId || network.chainId));\n    const blockExplorer = chain?.blockExplorers?.default;\n    super(\n      [\n        `Function \"${functionName}\" on contract \"${address}\" does not exist.`,\n        ...blockExplorer ? [\n          \"\",\n          `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`\n        ] : []\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractMethodDoesNotExistError\";\n  }\n};\nvar ContractMethodNoResultError = class extends Error {\n  constructor({\n    address,\n    args,\n    chainId,\n    functionName\n  }) {\n    super(\n      [\n        \"Contract read returned an empty response. This could be due to any of the following:\",\n        `- The contract does not have the function \"${functionName}\",`,\n        \"- The parameters passed to the contract function may be invalid, or\",\n        \"- The address is not a contract.\",\n        \"\",\n        `Config:`,\n        JSON.stringify(\n          {\n            address,\n            abi: \"...\",\n            functionName,\n            chainId,\n            args\n          },\n          null,\n          2\n        )\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractMethodNoResultError\";\n  }\n};\nvar ContractMethodRevertedError = class extends Error {\n  constructor({\n    address,\n    args,\n    chainId,\n    functionName,\n    errorMessage\n  }) {\n    super(\n      [\n        \"Contract method reverted with an error.\",\n        \"\",\n        `Config:`,\n        JSON.stringify(\n          {\n            address,\n            abi: \"...\",\n            functionName,\n            chainId,\n            args\n          },\n          null,\n          2\n        ),\n        \"\",\n        `Details: ${errorMessage}`\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractMethodRevertedError\";\n  }\n};\nvar ContractResultDecodeError = class extends Error {\n  constructor({\n    address,\n    args,\n    chainId,\n    functionName,\n    errorMessage\n  }) {\n    super(\n      [\n        \"Failed to decode contract function result.\",\n        \"\",\n        `Config:`,\n        JSON.stringify(\n          {\n            address,\n            abi: \"...\",\n            functionName,\n            chainId,\n            args\n          },\n          null,\n          2\n        ),\n        \"\",\n        `Details: ${errorMessage}`\n      ].join(\"\\n\")\n    );\n    this.name = \"ContractResultDecodeError\";\n  }\n};\nvar ProviderChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ProviderChainsNotFound\";\n    this.message = [\n      \"No chains were found on the wagmi provider. Some functions that require a chain may not work.\",\n      \"\",\n      \"It is recommended to add a list of chains to the provider in `createClient`.\",\n      \"\",\n      \"Example:\",\n      \"\",\n      \"```\",\n      \"import { getDefaultProvider } from 'ethers'\",\n      \"import { chain, createClient } from 'wagmi'\",\n      \"\",\n      \"createClient({\",\n      \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\",\n      \"})\",\n      \"```\"\n    ].join(\"\\n\");\n  }\n};\nvar ResourceUnavailableError = class extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", { cause, code: -32002 });\n    this.name = \"ResourceUnavailable\";\n  }\n};\nvar SwitchChainError = class extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", { cause, code: 4902 });\n    this.name = \"SwitchChainError\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\nvar UserRejectedRequestError = class extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", { cause, code: 4001 });\n    this.name = \"UserRejectedRequestError\";\n  }\n};\n\nexport {\n  configureChains,\n  RpcError,\n  ProviderRpcError,\n  AddChainError,\n  ChainDoesNotSupportMulticallError,\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConnectorAlreadyConnectedError,\n  ConnectorNotFoundError,\n  ContractMethodDoesNotExistError,\n  ContractMethodNoResultError,\n  ContractMethodRevertedError,\n  ContractResultDecodeError,\n  ProviderChainsNotFound,\n  ResourceUnavailableError,\n  SwitchChainError,\n  SwitchChainNotSupportedError,\n  UserRejectedRequestError,\n  debounce,\n  deepEqual,\n  deserialize,\n  minimizeContractInterface,\n  normalizeChainId,\n  parseContractResult,\n  serialize,\n  noopStorage,\n  createStorage,\n  Client,\n  createClient,\n  getClient,\n  connect,\n  disconnect,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  units,\n  fetchToken,\n  getContract,\n  prepareWriteContract,\n  getProvider,\n  getWebSocketProvider,\n  watchProvider,\n  watchWebSocketProvider,\n  multicall,\n  readContract,\n  readContracts,\n  watchContractEvent,\n  fetchBlockNumber,\n  watchBlockNumber,\n  watchMulticall,\n  watchReadContract,\n  watchReadContracts,\n  fetchTransaction,\n  fetchEnsAddress,\n  fetchEnsAvatar,\n  fetchEnsName,\n  fetchEnsResolver,\n  prepareSendTransaction,\n  sendTransaction,\n  fetchFeeData,\n  waitForTransaction,\n  watchPendingTransactions,\n  writeContract,\n  fetchBalance,\n  fetchSigner,\n  getAccount,\n  getNetwork,\n  signMessage,\n  signTypedData,\n  switchNetwork,\n  watchAccount,\n  watchNetwork,\n  watchSigner\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}