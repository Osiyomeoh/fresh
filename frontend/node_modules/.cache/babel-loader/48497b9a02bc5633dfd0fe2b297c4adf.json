{"ast":null,"code":"import { Connector, __privateAdd, __privateGet, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\"; // src/injected.ts\n\nimport { AddChainError, ChainNotConfiguredError, ConnectorNotFoundError, ResourceUnavailableError, SwitchChainError, UserRejectedRequestError, getClient, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\"; // src/utils/getInjectedName.ts\n\nfunction getInjectedName(ethereum) {\n  if (!ethereum) return \"Injected\";\n\n  const getName = provider => {\n    if (provider.isAvalanche) return \"Core Wallet\";\n    if (provider.isBitKeep) return \"BitKeep\";\n    if (provider.isBraveWallet) return \"Brave Wallet\";\n    if (provider.isCoinbaseWallet) return \"Coinbase Wallet\";\n    if (provider.isExodus) return \"Exodus\";\n    if (provider.isFrame) return \"Frame\";\n    if (provider.isKuCoinWallet) return \"KuCoin Wallet\";\n    if (provider.isMathWallet) return \"MathWallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) return \"1inch Wallet\";\n    if (provider.isOpera) return \"Opera\";\n    if (provider.isPortal) return \"Ripio Portal\";\n    if (provider.isRainbow) return \"Rainbow\";\n    if (provider.isTally) return \"Tally\";\n    if (provider.isTokenPocket) return \"TokenPocket\";\n    if (provider.isTokenary) return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet) return \"Trust Wallet\";\n    if (provider.isMetaMask) return \"MetaMask\";\n  };\n\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */new Set();\n    let unknownCount = 1;\n\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n\n      nameSet.add(name);\n    }\n\n    const names = [...nameSet];\n    if (names.length) return names;\n    return names[0] ?? \"Injected\";\n  }\n\n  return getName(ethereum) ?? \"Injected\";\n} // src/injected.ts\n\n\nvar _provider, _switchingChains;\n\nvar InjectedConnector = class extends Connector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: () => typeof window !== \"undefined\" ? window.ethereum : void 0,\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n\n    __publicField(this, \"id\");\n\n    __publicField(this, \"name\");\n\n    __publicField(this, \"ready\");\n\n    __privateAdd(this, _provider, void 0);\n\n    __privateAdd(this, _switchingChains, void 0);\n\n    __publicField(this, \"shimDisconnectKey\", `${this.id}.shimDisconnect`);\n\n    __publicField(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    __publicField(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    __publicField(this, \"onDisconnect\", () => {\n      if (this.options.shimChainChangedDisconnect && __privateGet(this, _switchingChains)) {\n        __privateSet(this, _switchingChains, false);\n\n        return;\n      }\n\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect) getClient().storage?.removeItem(this.shimDisconnectKey);\n    });\n\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\") this.name = options.name;else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name) this.name = options.name(detectedName);else {\n        if (typeof detectedName === \"string\") this.name = detectedName;else this.name = detectedName[0];\n      }\n    } else this.name = \"Injected\";\n    this.id = \"injected\";\n    this.ready = !!provider;\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n\n      if (this.options.shimDisconnect) getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect) getClient().storage?.removeItem(this.shimDisconnectKey);\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"eth_chainId\"\n    }).then(normalizeChainId);\n  }\n\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider) __privateSet(this, _provider, provider);\n    return __privateGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) return false;\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    if (this.options.shimChainChangedDisconnect) __privateSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      await Promise.all([provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      }), new Promise(res => this.on(\"change\", _ref => {\n        let {\n          chain\n        } = _ref;\n        if (chain?.id === chainId) res();\n      }))]);\n      return this.chains.find(x => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpcUrls: {\n          default: {\n            http: [\"\"]\n          },\n          public: {\n            http: [\"\"]\n          }\n        }\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError({\n        chainId,\n        connectorId: this.id\n      });\n\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError)) throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref2) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref2;\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n\n};\n_provider = new WeakMap();\n_switchingChains = new WeakMap();\nexport { InjectedConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateSet","__publicField","AddChainError","ChainNotConfiguredError","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError","getClient","normalizeChainId","providers","getAddress","hexValue","getInjectedName","ethereum","getName","provider","isAvalanche","isBitKeep","isBraveWallet","isCoinbaseWallet","isExodus","isFrame","isKuCoinWallet","isMathWallet","isOneInchIOSWallet","isOneInchAndroidWallet","isOpera","isPortal","isRainbow","isTally","isTokenPocket","isTokenary","isTrust","isTrustWallet","isMetaMask","length","nameSet","Set","unknownCount","name","add","names","_provider","_switchingChains","InjectedConnector","constructor","chains","options","options_","shimDisconnect","shimChainChangedDisconnect","getProvider","window","id","accounts","emit","account","chainId","unsupported","isChainUnsupported","chain","storage","removeItem","shimDisconnectKey","detectedName","ready","connect","on","onAccountsChanged","onChainChanged","onDisconnect","type","request","method","getChainId","switchChain","setItem","error","isUserRejectedRequestError","code","disconnect","removeListener","getAccount","then","getSigner","Promise","all","Web3Provider","isAuthorized","getItem","params","res","find","x","network","nativeCurrency","decimals","symbol","rpcUrls","default","http","public","connectorId","data","originalError","chainName","blockExplorerUrls","getBlockExplorerUrls","addError","watchAsset","address","image","WeakMap"],"sources":["C:/Users/USER/Documents/demo-react/node_modules/@wagmi/connectors/dist/chunk-6IU3YKWQ.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/injected.ts\nimport {\n  AddChainError,\n  ChainNotConfiguredError,\n  ConnectorNotFoundError,\n  ResourceUnavailableError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  getClient,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum)\n    return \"Injected\";\n  const getName = (provider) => {\n    if (provider.isAvalanche)\n      return \"Core Wallet\";\n    if (provider.isBitKeep)\n      return \"BitKeep\";\n    if (provider.isBraveWallet)\n      return \"Brave Wallet\";\n    if (provider.isCoinbaseWallet)\n      return \"Coinbase Wallet\";\n    if (provider.isExodus)\n      return \"Exodus\";\n    if (provider.isFrame)\n      return \"Frame\";\n    if (provider.isKuCoinWallet)\n      return \"KuCoin Wallet\";\n    if (provider.isMathWallet)\n      return \"MathWallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\n      return \"1inch Wallet\";\n    if (provider.isOpera)\n      return \"Opera\";\n    if (provider.isPortal)\n      return \"Ripio Portal\";\n    if (provider.isRainbow)\n      return \"Rainbow\";\n    if (provider.isTally)\n      return \"Tally\";\n    if (provider.isTokenPocket)\n      return \"TokenPocket\";\n    if (provider.isTokenary)\n      return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet)\n      return \"Trust Wallet\";\n    if (provider.isMetaMask)\n      return \"MetaMask\";\n  };\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */ new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length)\n      return names;\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\n// src/injected.ts\nvar _provider, _switchingChains;\nvar InjectedConnector = class extends Connector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: () => typeof window !== \"undefined\" ? window.ethereum : void 0,\n      ...options_\n    };\n    super({ chains, options });\n    __publicField(this, \"id\");\n    __publicField(this, \"name\");\n    __publicField(this, \"ready\");\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _switchingChains, void 0);\n    __publicField(this, \"shimDisconnectKey\", `${this.id}.shimDisconnect`);\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", {\n          account: getAddress(accounts[0])\n        });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      if (this.options.shimChainChangedDisconnect && __privateGet(this, _switchingChains)) {\n        __privateSet(this, _switchingChains, false);\n        return;\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect)\n        getClient().storage?.removeItem(this.shimDisconnectKey);\n    });\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\")\n      this.name = options.name;\n    else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name)\n        this.name = options.name(detectedName);\n      else {\n        if (typeof detectedName === \"string\")\n          this.name = detectedName;\n        else\n          this.name = detectedName[0];\n      }\n    } else\n      this.name = \"Injected\";\n    this.id = \"injected\";\n    this.ready = !!provider;\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect)\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener)\n      return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect)\n      getClient().storage?.removeItem(this.shimDisconnectKey);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({ method: \"eth_chainId\" }).then(normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider)\n      __privateSet(this, _provider, provider);\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    return new providers.Web3Provider(\n      provider,\n      chainId\n    ).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey))\n        return false;\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    if (this.options.shimChainChangedDisconnect)\n      __privateSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n    try {\n      await Promise.all([\n        provider.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: id }]\n        }),\n        new Promise(\n          (res) => this.on(\"change\", ({ chain }) => {\n            if (chain?.id === chainId)\n              res();\n          })\n        )\n      ]);\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredError({ chainId, connectorId: this.id });\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError))\n            throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n_switchingChains = new WeakMap();\n\nexport {\n  InjectedConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}