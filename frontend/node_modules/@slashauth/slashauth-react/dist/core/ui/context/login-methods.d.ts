import React from 'react';
export declare enum LoginMethodType {
    Web3 = "web3",
    MagicLink = "magic-link",
    FederatedGoogle = "federated-google",
    FederatedDiscord = "federated-discord",
    FederatedTwitter = "federated-twitter",
    Unknown = "unknown"
}
export type LoginMethod = {
    ready: boolean;
    name: string;
    id: string;
    type: LoginMethodType;
};
export declare const getIconsById: (id: string) => "https://d1l2xccggl7xwv.cloudfront.net/icons/metamask.png" | "https://d1l2xccggl7xwv.cloudfront.net/icons/coinbase.png" | "https://d1l2xccggl7xwv.cloudfront.net/icons/wallet-connect.png" | "https://d1l2xccggl7xwv.cloudfront.net/icons/google.png" | "https://d1l2xccggl7xwv.cloudfront.net/icons/injected.png" | "https://d1l2xccggl7xwv.cloudfront.net/icons/slashauth-dark.png";
export type Web3LoginMethod = LoginMethod & {
    type: LoginMethodType.Web3;
    chain: string;
};
declare const LoginMethodsProvider: (props: React.PropsWithChildren<{
    loginMethods?: LoginMethod[];
}>) => JSX.Element;
declare const useLoginMethods: () => {
    web2: LoginMethod[];
    web3: Web3LoginMethod[];
    selectedLoginMethod: LoginMethod;
    setSelectedLoginMethodById: (id?: string) => void;
};
export { useLoginMethods, LoginMethodsProvider };
