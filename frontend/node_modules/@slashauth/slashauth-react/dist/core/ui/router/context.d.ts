import type { ParsedQs } from 'qs';
import React from 'react';
export interface RouteContextValue {
    basePath: string;
    startPath: string;
    fullPath: string;
    indexPath: string;
    currentPath: string;
    matches: (path?: string, index?: boolean) => boolean;
    baseNavigate: (toURL: URL) => Promise<unknown>;
    navigate: (to: string) => Promise<unknown>;
    resolve: (to: string) => URL;
    refresh: () => void;
    params: {
        [key: string]: string;
    };
    queryString: string;
    queryParams: ParsedQs;
    preservedParams?: string[];
    getMatchData: (path?: string, index?: boolean) => false | object;
}
export declare const RouteContext: React.Context<RouteContextValue>;
export declare const useRouter: () => RouteContextValue;
