import { BatchGetItemCommandInput as __BatchGetItemCommandInput, BatchGetItemCommandOutput as __BatchGetItemCommandOutput, KeysAndAttributes } from "@aws-sdk/client-dynamodb";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MiddlewareStack } from "@aws-sdk/types";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBDocumentClient";
export declare type BatchGetCommandInput = Pick<__BatchGetItemCommandInput, Exclude<keyof __BatchGetItemCommandInput, "RequestItems">> & {
    RequestItems: Record<string, Pick<KeysAndAttributes, Exclude<keyof KeysAndAttributes, "Keys">> & {
        Keys: Record<string, NativeAttributeValue>[] | undefined;
    }> | undefined;
};
export declare type BatchGetCommandOutput = Pick<__BatchGetItemCommandOutput, Exclude<keyof __BatchGetItemCommandOutput, "Responses" | "UnprocessedKeys">> & {
    Responses?: Record<string, Record<string, NativeAttributeValue>[]>;
    UnprocessedKeys?: Record<string, Pick<KeysAndAttributes, Exclude<keyof KeysAndAttributes, "Keys">> & {
        Keys: Record<string, NativeAttributeValue>[] | undefined;
    }>;
};

export declare class BatchGetCommand extends $Command<BatchGetCommandInput, BatchGetCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: BatchGetCommandInput;
    private readonly inputKeyNodes;
    private readonly outputKeyNodes;
    constructor(input: BatchGetCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchGetCommandInput, BatchGetCommandOutput>;
}
