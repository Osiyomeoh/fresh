import { ChainId } from './enums';
import { ObjectMap } from './utils';
declare type UserRoleType = {
    AssignedRole: 'ASSIGNED_ROLE';
    RoleRequirement: 'ROLE_REQUIREMENT';
    WalletRole: 'WALLET_ROLE';
};
export declare type HasRoleArguments = {
    userID: string;
    role: string;
    organizationID?: string;
};
export declare type HasRoleWalletArguments = {
    address: string;
    role: string;
    organizationID?: string;
};
export declare type HasRoleTokenArguments = {
    token: string;
    role: string;
    organizationID?: string;
};
export declare type HasRoleAPIResponse = {
    hasRole: HasRole;
};
export declare type HasRole = boolean;
export declare type RoleRequirementAPIResponse = {
    id: string;
    role: string;
    contract: string;
    contractType: string;
    quantity: number;
    chainID: ChainId;
    tokenTypeID?: number;
};
export declare type AssignedRoleAPIResponse = {
    type: UserRoleType;
    level: {
        name: string;
        description?: string;
    };
};
export declare type GetRoleRestrictedDataArguments = {
    role: string;
};
export declare type UpdateRoleRestrictedDataArguments = {
    role: string;
    metadata: ObjectMap;
};
export declare type RoleRestrictedDataAPIResponse = {
    data: RoleRestrictedData;
};
export declare type RoleRestrictedData = ObjectMap;
export declare type AddAssignedRoleToUserArguments = {
    userID: string;
    role: string;
    organizationID?: string;
};
export declare type RemoveAssignedRoleFromUserArguments = {
    userID: string;
    organizationID?: string;
    role: string;
};
export {};
