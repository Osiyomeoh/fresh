"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlashauthClient = void 0;
const rm = __importStar(require("typed-rest-client"));
const config_1 = require("./config");
const organization_1 = require("./controllers/organization");
const user_1 = require("./controllers/user");
const file_1 = require("./controllers/file");
const app_1 = require("./controllers/app");
class SlashauthClient {
    constructor(client_id, client_secret, additional) {
        const identifier = `node-rest-client_${additional.version || '1.0.0'}`;
        const rawApiClient = new rm.RestClient(identifier, additional.endpoint || config_1.PROD_ENDPOINT);
        const wrapMethod = (fn) => (...args) => fn.apply(rawApiClient, args).then((res) => {
            return {
                data: res.result,
                error: null,
                headers: res.headers,
                statusCode: res.statusCode,
            };
        }, (err) => {
            return {
                data: undefined,
                error: err.result.error,
                headers: err['responseHeaders'],
                statusCode: err['statusCode'],
            };
        });
        const apiClient = {
            get: wrapMethod(rawApiClient.get),
            create: wrapMethod(rawApiClient.create),
            replace: wrapMethod(rawApiClient.replace),
            del: wrapMethod(rawApiClient.del),
            update: wrapMethod(rawApiClient.update),
        };
        this.app = new app_1.AppController(client_id, client_secret, apiClient);
        this.user = new user_1.UserController(client_id, client_secret, apiClient);
        this.organization = new organization_1.OrganizationController(client_id, client_secret, apiClient);
        this.file = new file_1.FileController(client_id, client_secret, apiClient);
    }
}
exports.SlashauthClient = SlashauthClient;
//# sourceMappingURL=client.js.map