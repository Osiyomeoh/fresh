import * as rm from 'typed-rest-client';
import { AddAssignedRoleToUserArguments, AssignedRoleAPIResponse, CreateUserArguments, GetOrgMembershipsForUserAPIResponse, GetOrgMembershipsForUserArguments, GetUserByIDArguments, GetUsersArguments, GetUsersResponse, HasRoleAPIResponse, HasRoleArguments, HasRoleTokenArguments, HasRoleWalletArguments, PutUserMetadataArguments, RemoveAssignedRoleFromUserArguments, UserResponse, ValidateTokenArguments, ValidateTokenResponse } from '@slashauth/types';
export declare class UserController {
    client_id: string;
    client_secret: string;
    apiClient: rm.RestClient;
    constructor(client_id: string, client_secret: string, apiClient: rm.RestClient);
    validateToken({ token, }: ValidateTokenArguments): Promise<ValidateTokenResponse>;
    hasRole({ userID, role, organizationID, }: HasRoleArguments): Promise<rm.IRestResponse<HasRoleAPIResponse>>;
    hasRoleWallet({ address, role, organizationID, }: HasRoleWalletArguments): Promise<rm.IRestResponse<HasRoleAPIResponse>>;
    hasRoleToken({ token, role, organizationID, }: HasRoleTokenArguments): Promise<rm.IRestResponse<HasRoleAPIResponse>>;
    getOrgMemberships({ userID, }: GetOrgMembershipsForUserArguments): Promise<rm.IRestResponse<GetOrgMembershipsForUserAPIResponse>>;
    getUserByID({ userID, organizationID, }: GetUserByIDArguments): Promise<rm.IRestResponse<UserResponse>>;
    getUsers({ organizationID, cursor, }: GetUsersArguments): Promise<rm.IRestResponse<GetUsersResponse>>;
    createUser({ wallet, email, phoneNumber, nickname, metadata, }: CreateUserArguments): Promise<rm.IRestResponse<UserResponse>>;
    updateUserMetadata({ userID, nickname, metadata, organizationID, }: PutUserMetadataArguments): Promise<rm.IRestResponse<UserResponse>>;
    addAssignedRole({ userID, role, organizationID, }: AddAssignedRoleToUserArguments): Promise<rm.IRestResponse<AssignedRoleAPIResponse>>;
    removeAssignedRoleFromUser({ userID, role, organizationID, }: RemoveAssignedRoleFromUserArguments): Promise<rm.IRestResponse<AssignedRoleAPIResponse>>;
}
