import { AddAssignedRoleToUserArguments, AssignedRoleAPIResponse, CreateUserArguments, Membership, GetOrgMembershipsForUserArguments, GetUserByIDArguments, GetUsersArguments, UserRecord, HasRoleAPIResponse, HasRoleArguments, HasRoleTokenArguments, HasRoleWalletArguments, PutUserMetadataArguments, RemoveAssignedRoleFromUserArguments, ValidateTokenArguments, ValidateTokenResponse } from '@slashauth/types';
import { WrappedClient, SlashauthResponse, SlashauthResponseWithPagination } from '../client';
import { Controller } from './controller';
export declare class UserController extends Controller {
    constructor(client_id: string, client_secret: string, apiClient: WrappedClient);
    validateToken({ token, }: ValidateTokenArguments): Promise<SlashauthResponse<ValidateTokenResponse>>;
    hasRole({ userID, role, organizationID, }: HasRoleArguments): Promise<SlashauthResponse<HasRoleAPIResponse>>;
    hasRoleWallet({ address, role, organizationID, }: HasRoleWalletArguments): Promise<SlashauthResponse<HasRoleAPIResponse>>;
    hasRoleToken({ token, role, organizationID, }: HasRoleTokenArguments): Promise<SlashauthResponse<HasRoleAPIResponse>>;
    getOrgMemberships({ userID, }: GetOrgMembershipsForUserArguments): Promise<SlashauthResponse<Membership[]>>;
    getUserByID({ userID, organizationID, }: GetUserByIDArguments): Promise<SlashauthResponse<UserRecord>>;
    getUsers({ organizationID, cursor, }: GetUsersArguments): Promise<SlashauthResponseWithPagination<UserRecord[]>>;
    createUser({ wallet, email, phoneNumber, nickname, metadata, }: CreateUserArguments): Promise<SlashauthResponse<UserRecord>>;
    updateUserMetadata({ userID, nickname, metadata, organizationID, }: PutUserMetadataArguments): Promise<SlashauthResponse<UserRecord>>;
    addAssignedRole({ userID, role, organizationID, }: AddAssignedRoleToUserArguments): Promise<SlashauthResponse<AssignedRoleAPIResponse>>;
    removeAssignedRole({ userID, role, organizationID, }: RemoveAssignedRoleFromUserArguments): Promise<SlashauthResponse<AssignedRoleAPIResponse>>;
}
