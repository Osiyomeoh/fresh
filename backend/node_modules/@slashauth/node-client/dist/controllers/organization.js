"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationController = void 0;
const query_1 = require("../utils/query");
const controller_1 = require("./controller");
class OrganizationController extends controller_1.Controller {
    constructor(client_id, client_secret, apiClient) {
        super(client_id, client_secret, apiClient);
    }
    async createOrganization({ name, description, }) {
        const body = (0, query_1.signBody)({
            input: {
                name,
                description: description || '',
            },
            secret: this.client_secret,
        });
        return await this.apiClient.create(`/s/${this.client_id}/organizations`, body);
    }
    async updateOrganization({ organizationID, name, description, }) {
        const body = (0, query_1.signBody)({
            input: {
                name,
                description: description || '',
            },
            secret: this.client_secret,
        });
        return await this.apiClient.replace(`/s/${this.client_id}/organizations/${organizationID}`, body);
    }
    async addRoleRequirement({ organizationID, contract, contractType, quantity, chainID, tokenTypeID, role, }) {
        const body = (0, query_1.signBody)({
            input: {
                contract,
                contractType,
                quantity,
                chainID,
                tokenTypeID,
                role,
            },
            secret: this.client_secret,
        });
        return await this.apiClient.create(`/s/${this.client_id}/organizations/${organizationID}/role_requirement`, body);
    }
    async removeRoleRequirement({ organizationID, roleID, }) {
        const urlParams = (0, query_1.signQuery)({
            input: {
                roleID,
            },
            secret: this.client_secret,
        });
        return await this.apiClient.del(`/s/${this.client_id}/organizations/${organizationID}/role_requirement`, {
            queryParameters: {
                params: urlParams,
            },
        });
    }
}
exports.OrganizationController = OrganizationController;
//# sourceMappingURL=organization.js.map