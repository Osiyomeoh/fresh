import { AddRoleRequirementOrganizationArguments, PostOrganizationArguments, PutOrganizationArguments, RemoveRoleRequirementOrganizationArguments, RoleRequirementAPIResponse, UpsertOrganizationAPIResponse } from '@slashauth/types';
import { WrappedClient, SlashauthResponse } from '../client';
import { Controller } from './controller';
export declare class OrganizationController extends Controller {
    constructor(client_id: string, client_secret: string, apiClient: WrappedClient);
    createOrganization({ name, description, }: PostOrganizationArguments): Promise<SlashauthResponse<UpsertOrganizationAPIResponse>>;
    updateOrganization({ organizationID, name, description, }: PutOrganizationArguments): Promise<SlashauthResponse<UpsertOrganizationAPIResponse>>;
    addRoleRequirement({ organizationID, contract, contractType, quantity, chainID, tokenTypeID, role, }: AddRoleRequirementOrganizationArguments): Promise<SlashauthResponse<RoleRequirementAPIResponse>>;
    removeRoleRequirement({ organizationID, roleID, }: RemoveRoleRequirementOrganizationArguments): Promise<SlashauthResponse<RoleRequirementAPIResponse>>;
}
