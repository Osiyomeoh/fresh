"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppController = void 0;
const query_1 = require("../utils/query");
const controller_1 = require("./controller");
const client_1 = require("../utils/client");
class AppController extends controller_1.Controller {
    constructor(client_id, client_secret, apiClient) {
        super(client_id, client_secret, apiClient);
    }
    async getInfo() {
        return this.apiClient
            .get(`/s/${this.client_id}`)
            .then((0, client_1.transformResponse)((res) => res && res.data));
    }
    async getRoleRestrictedData({ role, }) {
        const encodedRole = Buffer.from(role, 'utf8').toString('base64');
        const urlParams = (0, query_1.signQuery)({
            input: {
                role: encodedRole,
                encoded: 'true',
            },
            secret: this.client_secret,
        });
        return this.apiClient
            .get(`/s/${this.client_id}/role_metadata`, {
            queryParameters: {
                params: urlParams,
            },
        })
            .then((0, client_1.transformResponse)((res) => res && res.data));
    }
    async updateRoleRestrictedData({ role, metadata, }) {
        const body = (0, query_1.signBody)({
            input: {
                role,
                metadata,
            },
            secret: this.client_secret,
        });
        return await this.apiClient
            .replace(`/s/${this.client_id}/role_metadata`, body)
            .then((0, client_1.transformResponse)((res) => res && res.data));
    }
}
exports.AppController = AppController;
//# sourceMappingURL=app.js.map