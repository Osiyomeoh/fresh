import { FileRecord, GetFileByIDArguments, GetPresignedURLForFileArguments, PresignedURLForFile, ListFilesArguments, UpdateFileArguments, DeleteFileArguments, AddFileArguments } from '@slashauth/types';
import { WrappedClient, SlashauthResponse, SlashauthResponseWithPagination } from '../client';
import { Controller } from './controller';
export declare class FileController extends Controller {
    constructor(client_id: string, client_secret: string, apiClient: WrappedClient);
    getFileByID({ id, organizationID, }: GetFileByIDArguments): Promise<SlashauthResponse<FileRecord>>;
    getPresignedURL({ id, organizationID, }: GetPresignedURLForFileArguments): Promise<SlashauthResponse<PresignedURLForFile>>;
    listFiles({ organizationID, cursor, }: ListFilesArguments): Promise<SlashauthResponseWithPagination<FileRecord[]>>;
    addFile({ organizationID, userID, name, description, rolesRequired, mimeType, file, }: AddFileArguments): Promise<SlashauthResponse<FileRecord>>;
    updateFile({ id, organizationID, name, description, rolesRequired, }: UpdateFileArguments): Promise<SlashauthResponse<FileRecord>>;
    deleteFile({ id, organizationID, }: DeleteFileArguments): Promise<SlashauthResponse<FileRecord>>;
    private createFile;
    private createBlobUpload;
    private updateBlobUploadStatus;
}
